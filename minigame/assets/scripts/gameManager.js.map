{"version":3,"sources":["__temp/buildProcess/inlineFunctionProcess/scripts/gameManager.ts"],"names":[],"mappings":";;;AAAA,iCAA6G;AAC7G,4DAAsD;AACtD,gEAA0D;AAG1D;IAAyC,uCAAa;IAAtD;QAAA,qEA4IC;QAxIU,UAAI,GAAW,QAAQ,CAAA;QAIvB,iBAAW,GAAkB,IAAI,CAAC;QAIlC,qBAAe,GAAkB,IAAI,CAAC;QAUrC,oBAAc,GAAc,EAAE,CAAC;QAG/B,oBAAc,GAAa,EAAE,CAAC;QAC9B,cAAQ,GAAc;YAC1B,gBAAO,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;YACtD,gBAAO,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;YACtD,gBAAO,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;YACtD,gBAAO,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;YACtD,gBAAO,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;YACtD,gBAAO,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;YACtD,gBAAO,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;YACtD,gBAAO,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;YACtD,gBAAO,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;YACtD,gBAAO,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;YACtD,gBAAO,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;YACtD,gBAAO,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;YACtD,gBAAO,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;YACtD,gBAAO,CAAC,gBAAgB,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;YACrD,gBAAO,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;YACtD,gBAAO,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;YACpD,gBAAO,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;YACtD,gBAAO,CAAC,gBAAgB,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;YACpD,gBAAO,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;YACpD,gBAAO,CAAC,gBAAgB,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;YACpD,gBAAO,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;YACrD,gBAAO,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;YACtD,gBAAO,CAAC,gBAAgB,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;YACrD,gBAAO,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;SACvD,CAAC;;IAyFN,CAAC;IAvFU,6BAAO,GAAd;QAAA,iBAYC;QAVG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;YACzB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACvE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAO,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;SACzE;QAED,IAAM,IAAI,GAAW,IAAI,CAAC,MAAM,CAAC;QACjC,gBAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,UAAU,EAAE;YAE1C,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAGM,8BAAQ,GAAf;QACI,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;QAC3C,KAAK,CAAC,SAAS,CAAC,QAAQ,GAAG,gBAAO,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAE7D,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAChD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEhC,IAAI,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;QAChD,MAAM,CAAC,SAAS,CAAC,QAAQ,GAAG,gBAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAE/D,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACjD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAGjC,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;QAE3D,IAAI,CAAC,iBAAiB,CAAC,YAAY,GAAG,gBAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,CAAC;IAEM,8BAAQ,GAAf;QACI,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAEM,iCAAW,GAAlB,UAAmB,IAAY;QAA/B,iBAyCC;QAxCG,IAAI,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QAE3D,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;QAE3C,IAAI,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC;QAC9D,IAAI,KAAK,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;QAGjC,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;QAC3C,KAAK,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;QAC3F,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;QAG/B,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;QAC7C,IAAM,UAAU,GAAG,WAAW,GAAG,QAAQ,GAAG,cAAc,CAAC;QAC3D,gBAAM,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,UAAC,KAAkB;YAE3D,IAAM,iBAAiB,GACnB,KAAK,CAAC,SAAS,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,gBAAM,CAAC,QAAQ,CAAC,CAAC;YACxF,iBAAiB,CAAC,WAAW,GAAG,KAAK,CAAC;YAGtC,IAAM,YAAY,GAAwB,KAAK,CAAC,YAAY,CAAC,gBAAM,CAAC,YAAY,CAAC,CAAC;YAClF,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAChE,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;YAGnE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YACzC,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,KAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;gBAChC,IAAM,QAAQ,GAAG,KAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;gBAC7C,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;gBAC/C,QAAQ,CAAC,gBAAgB,EAAE,CAAC;aAC/B;YAED,KAAI,CAAC,eAAe,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC;YAE1D,KAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,KAAI,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;QACxG,CAAC,CAAC,CAAC;IAEP,CAAC;IAEM,8BAAQ,GAAf,UAAgB,EAAU;IAC1B,CAAC;IAEM,+BAAS,GAAhB;IAEA,CAAC;IAvID;QAHC,gBAAM,CAAC,UAAU,CAAC,QAAQ,CAAC;YACxB,IAAI,EAAE,gBAAM,CAAC,SAAS,CAAC,MAAM;SAChC,CAAC;6CAC4B;IAI9B;QAHC,gBAAM,CAAC,UAAU,CAAC,QAAQ,CAAC;YACxB,IAAI,EAAE,gBAAM,CAAC,SAAS,CAAC,MAAM;SAChC,CAAC;oDACuC;IAIzC;QAHC,gBAAM,CAAC,UAAU,CAAC,QAAQ,CAAC;YACxB,IAAI,EAAE,gBAAM,CAAC,SAAS,CAAC,MAAM;SAChC,CAAC;wDAC2C;IAI7C;QAHC,gBAAM,CAAC,UAAU,CAAC,QAAQ,CAAC;YACxB,IAAI,EAAE,wBAAc;SACvB,CAAC;wDACoC;IAItC;QAHC,gBAAM,CAAC,UAAU,CAAC,QAAQ,CAAC;YACxB,IAAI,EAAE,0BAAgB;SACzB,CAAC;0DACwC;IApBzB,WAAW;QAD/B,gBAAM,CAAC,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC;OACtB,WAAW,CA4I/B;IAAD,kBAAC;CA5ID,AA4IC,CA5IwC,gBAAM,CAAC,MAAM,GA4IrD;kBA5IoB,WAAW","file":"gameManager.js","sourcesContent":["import engine, { Prefab, Vector3, Vector4, Color, Transform3D, SpriteFrame, Entity, Material } from \"engine\";\r\nimport BodyController from \"../scripts/bodyController\"\r\nimport CameraController from \"../scripts/cameraController\"\r\n\r\n@engine.decorators.serialize(\"gameManager\")\r\nexport default class gameManager extends engine.Script {\r\n    @engine.decorators.property({\r\n        type: engine.TypeNames.String\r\n    })\r\n    public name: string = \"myname\"\r\n    @engine.decorators.property({\r\n        type: engine.TypeNames.Prefab\r\n    })\r\n    public _cubePrefab: Prefab | null = null;\r\n    @engine.decorators.property({\r\n        type: engine.TypeNames.Prefab\r\n    })\r\n    public _cylinderPrefab: Prefab | null = null;\r\n    @engine.decorators.property({\r\n        type: BodyController\r\n    })\r\n    public _bodyController: BodyController\r\n    @engine.decorators.property({\r\n        type: CameraController\r\n    })\r\n    public _cameraController: CameraController\r\n\r\n    private _posTransition: Vector3[] = [];\r\n\r\n    // Used for garbage collection.\r\n    private _transformPool: Entity[] = [];\r\n    private _myColor: Vector3[] = [\r\n        Vector3.createFromNumber(204, 255, 255).scale(1 / 255),\r\n        Vector3.createFromNumber(204, 255, 153).scale(1 / 255),\r\n        Vector3.createFromNumber(204, 255, 204).scale(1 / 255),\r\n        Vector3.createFromNumber(153, 204, 153).scale(1 / 255),\r\n        Vector3.createFromNumber(204, 255, 255).scale(1 / 255),\r\n        Vector3.createFromNumber(255, 204, 153).scale(1 / 255),\r\n        Vector3.createFromNumber(204, 204, 204).scale(1 / 255),\r\n        Vector3.createFromNumber(153, 204, 255).scale(1 / 255),\r\n        Vector3.createFromNumber(204, 204, 255).scale(1 / 255),\r\n        Vector3.createFromNumber(204, 255, 153).scale(1 / 255),\r\n        Vector3.createFromNumber(255, 255, 204).scale(1 / 255),\r\n        Vector3.createFromNumber(255, 153, 204).scale(1 / 255),\r\n        Vector3.createFromNumber(255, 102, 102).scale(1 / 255),\r\n        Vector3.createFromNumber(204, 51, 153).scale(1 / 255),\r\n        Vector3.createFromNumber(102, 204, 204).scale(1 / 255),\r\n        Vector3.createFromNumber(204, 102, 0).scale(1 / 255),\r\n        Vector3.createFromNumber(153, 153, 153).scale(1 / 255),\r\n        Vector3.createFromNumber(9, 153, 102).scale(1 / 255),\r\n        Vector3.createFromNumber(204, 0, 102).scale(1 / 255),\r\n        Vector3.createFromNumber(0, 153, 153).scale(1 / 255),\r\n        Vector3.createFromNumber(153, 204, 51).scale(1 / 255),\r\n        Vector3.createFromNumber(255, 102, 102).scale(1 / 255),\r\n        Vector3.createFromNumber(51, 102, 153).scale(1 / 255),\r\n        Vector3.createFromNumber(255, 102, 0).scale(1 / 255),\r\n    ];\r\n\r\n    public onAwake() {\r\n        // Sample pos transition.\r\n        for (let i = 1; i <= 3; ++i) {\r\n            this._posTransition.push(Vector3.createFromNumber(-i * 0.3 - 1, 0, 0));\r\n            this._posTransition.push(Vector3.createFromNumber(0, 0, i * 0.3 + 1));\r\n        }\r\n\r\n        const that: Entity = this.entity;\r\n        engine.game.customEventEmitter.on('JUMP_END', () => {\r\n            // Move camera.\r\n            this.addNewStone(that);\r\n        });\r\n    }\r\n\r\n    // Init road with two entity.\r\n    public initRoad() {\r\n        let first = this._cubePrefab.instantiate();\r\n        first.transform.position = Vector3.createFromNumber(0, 0, 0);\r\n        // console.log(first.transform.position);\r\n        this.entity.transform.addChild(first.transform);\r\n        this._transformPool.push(first);\r\n\r\n        let second = this._cylinderPrefab.instantiate();\r\n        second.transform.position = Vector3.createFromNumber(-2, 0, 0);\r\n        // console.log(second.transform.position);\r\n        this.entity.transform.addChild(second.transform);\r\n        this._transformPool.push(second);\r\n\r\n        // Body\r\n        this._bodyController.targetPos = second.transform.position;\r\n        // Camera\r\n        this._cameraController.targetAnchor = Vector3.createFromNumber(-1, 0, 0);\r\n    }\r\n\r\n    public onEnable() {\r\n        this.initRoad();\r\n    }\r\n\r\n    public addNewStone(that: Entity) {\r\n        let prevTargetPos = this._bodyController.targetPos.clone();\r\n\r\n        let choice = Math.floor(Math.random() * 2);\r\n        // May support more prefab in the future.\r\n        let prefab = choice ? this._cubePrefab : this._cylinderPrefab;\r\n        let stone = prefab.instantiate();\r\n\r\n        // Update position.\r\n        let pos_id = Math.floor(Math.random() * 6);\r\n        stone.transform.position = this._bodyController.targetPos.add(this._posTransition[pos_id]);\r\n        stone.transform.position.y = 0;\r\n\r\n        // Select sprite frame randomly.\r\n        let frame_id = Math.floor(Math.random() * 8);\r\n        const frame_name = 'pictures/' + frame_id + '.spriteframe';\r\n        engine.loader.load(frame_name).promise.then((asset: SpriteFrame) => {\r\n            // Update sprite async.\r\n            const uiSpriteComponent: engine.UISprite =\r\n                stone.transform.findChildByName('illustrator').entity.getComponent(engine.UISprite);\r\n            uiSpriteComponent.spriteFrame = asset;\r\n\r\n            // Update color.\r\n            const meshRenderer: engine.MeshRenderer = stone.getComponent(engine.MeshRenderer);\r\n            let color_id = Math.floor(Math.random() * this._myColor.length);\r\n            meshRenderer.material.setVector(\"_Color\", this._myColor[color_id]);\r\n\r\n            // Update transform.\r\n            that.transform.addChild(stone.transform);\r\n            this._transformPool.push(stone);\r\n            if (this._transformPool.length > 6) {\r\n                const old_node = this._transformPool.shift();\r\n                that.transform.removeChild(old_node.transform);\r\n                old_node.destroyImmediate();\r\n            }\r\n            // Body\r\n            this._bodyController.targetPos = stone.transform.position;\r\n            // Camera\r\n            this._cameraController.shiftCameraPos(this._bodyController.targetPos.add(prevTargetPos).scale(0.5));\r\n        });\r\n\r\n    }\r\n\r\n    public onUpdate(dt: number) {\r\n    }\r\n\r\n    public onDestroy() {\r\n\r\n    }\r\n}\r\n"]}