{"version":3,"sources":["__temp/buildProcess/inlineFunctionProcess/scripts/bodyController.ts"],"names":[],"mappings":"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","file":"bodyController.js","sourcesContent":["import engine, { Vector3, TouchInputComponent, Texture2D } from \"engine\";\r\n\r\n@engine.decorators.serialize(\"bodyController\")\r\nexport default class BodyController extends engine.Script {\r\n  @engine.decorators.property({\r\n    type: engine.TypeNames.String\r\n  })\r\n  public name: string = \"myname\"\r\n\r\n  private _canMove: boolean = false;\r\n  private _curTime: number = 0.0;\r\n  private _epochTime: number = 0.5;\r\n  private _yCoordinate: number = 0.35;\r\n  // 0: x, 1: y, 2: z.\r\n  private _rotateAxis: number = 0;\r\n  private _jumpHeight: number = 1.5;\r\n  private _deltaPos: Vector3 = new Vector3();\r\n  private _targetPos: Vector3 = new Vector3();\r\n  private _previousPos: Vector3 = new Vector3();\r\n\r\n  // @ts-ignore\r\n  set targetPos(pos: Vector3) {\r\n    this._targetPos = pos.clone();\r\n    this._targetPos.y = this._yCoordinate;\r\n    this._previousPos = this.entity.transform.position.clone();\r\n    this._targetPos.sub(this.entity.transform.position, this._deltaPos);\r\n  }\r\n\r\n  // @ts-ignore\r\n  get targetPos(): Vector3 {\r\n    return this._targetPos;\r\n  }\r\n\r\n  public onTouchEnd() {\r\n    this._canMove = true;\r\n    // console.log(this.canJump_);\r\n  }\r\n  public onAwake() {\r\n    engine.game.customEventEmitter.on('TOUCH_END', () => {\r\n      this.onTouchEnd();\r\n    });\r\n  }\r\n\r\n  public hightFunc(t: number) {\r\n    return this._jumpHeight * Math.sin((0.5 * Math.PI / (this._epochTime + 0.01)) * t);\r\n  }\r\n\r\n  public onUpdate(dt) {\r\n    if (!this._canMove) {\r\n      return;\r\n    }\r\n    // This is for moving logic.\r\n    if (this._curTime < this._epochTime) {\r\n      this._curTime += dt;\r\n      const ratio = this._curTime / this._epochTime;\r\n      // this.entity.transform.rotate(Vector3.createFromNumber(0, 0, 360 * ratio), true, false);\r\n      this._previousPos.add(Vector3.createFromNumber(\r\n        this._deltaPos.x * ratio, this.hightFunc(ratio), this._deltaPos.z * ratio),\r\n        this.entity.transform.position);\r\n    } else {\r\n      this.entity.transform.position = this._targetPos;\r\n      // console.log(this.entity.transform.euler.z * 360 / Math.PI);\r\n      this._curTime = 0;\r\n      this._canMove = false;\r\n      engine.game.customEventEmitter.emit('JUMP_END');\r\n    }\r\n  };\r\n\r\n  public onDestroy() {\r\n\r\n  }\r\n}\r\n"]}