{"version":3,"sources":["__temp/buildProcess/inlineFunctionProcess/scripts/panelController.ts"],"names":[],"mappings":"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","file":"panelController.js","sourcesContent":["\r\nimport engine, { TouchInputComponent, TouchInputEvent } from \"engine\";\r\nimport PictureController from \"./pictureController\";\r\n\r\n@engine.decorators.serialize(\"panelController\")\r\nexport default class PanelController extends engine.Script {\r\n    @engine.decorators.property({\r\n        type: engine.TypeNames.String\r\n    })\r\n    public name: string = \"myname\"\r\n    @engine.decorators.property({\r\n        type: PictureController\r\n    })\r\n    public _pictureController: PictureController;\r\n\r\n    private _album: string[] = [\r\n        'musics/1.mp3',\r\n        'musics/2.mp3',\r\n        'musics/3.mp3',\r\n    ];\r\n\r\n    private _enableInput: boolean = false;\r\n    private _start_triggered: boolean = false;\r\n\r\n    private _audio = wx.createInnerAudioContext();\r\n    private _bgm = wx.createInnerAudioContext();\r\n    private _pause_bg: boolean = false;\r\n    private _needChange: boolean = false;\r\n    private _episode_id: number = 0;\r\n    private _episode_map: Map<string, engine.AudioClip> = new Map();\r\n    private _startButton: engine.Entity = this.entity.transform2D.findChildByName('Button').entity;\r\n    private _background: engine.Entity = this.entity.transform2D.findChildByName('Background').entity;\r\n    private _ready: boolean = false;\r\n\r\n    public onTouchStart(touch: TouchInputComponent, event: TouchInputEvent) {\r\n        // Check if input is enabled.\r\n        if (!this._enableInput) {\r\n            return;\r\n        }\r\n        // Hide first, load next.\r\n        this._pictureController.hidden = true;\r\n        this._pictureController.changePicture();\r\n\r\n        this._start_triggered = true;\r\n        engine.game.customEventEmitter.emit('TOUCH_START');\r\n    }\r\n\r\n    public onTouchEnd(touch: TouchInputComponent, event: TouchInputEvent) {\r\n        // Check if input is enabled.\r\n        if (!this._enableInput || !this._start_triggered) {\r\n            return;\r\n        }\r\n        // Disable input after touch end.\r\n        this._enableInput = false;\r\n        this._start_triggered = false;\r\n        // console.log('touch end');\r\n        engine.game.customEventEmitter.emit('TOUCH_END');\r\n    }\r\n\r\n    public onAwake() {\r\n        const startComponent: engine.TouchInputComponent = this._startButton.getComponent(engine.TouchInputComponent);\r\n        startComponent.onClick.add((touch, event) => {\r\n            if (!this._ready) {\r\n                return;\r\n            }\r\n            const uiSprite: engine.UISprite = this._background.getComponent(engine.UISprite);\r\n            uiSprite.spriteFrame = null;\r\n            // Hide first, load next.\r\n            this._pictureController.hidden = true;\r\n            this._pictureController.changePicture();\r\n            this._startButton.active = false;\r\n            this._enableInput = true;\r\n        });\r\n\r\n        engine.game.customEventEmitter.on('JUMP_END', () => {\r\n            // Change music.\r\n            this.changeMusic();\r\n            if (!this._needChange) {\r\n                // Change picture when idle.\r\n                this._pictureController.changePicture();\r\n            } else {\r\n                this._pictureController.hidden = false;\r\n            }\r\n        });\r\n\r\n        engine.game.customEventEmitter.on('CAMERA_MOVE', () => {\r\n            this._enableInput = true;\r\n        });\r\n\r\n        this._bgm.loop = true;\r\n        this._bgm.onCanplay(() => {\r\n            console.log('Will play BGM');\r\n            this._bgm.play();\r\n            this._audio.pause();\r\n            // Ready to start.\r\n            this._ready = true;\r\n            const label: engine.UILabel = this._startButton.transform2D.findChildByName('UILabel').entity.getComponent(engine.UILabel);\r\n            label.text = 'Start';\r\n        });\r\n        engine.loader.load('musics/0.mp3', { cacheable: true, httpPriority: 100 }).promise.then((asset: engine.AudioClip) => {\r\n            console.log('Loaded BGM');\r\n            this._bgm.src = asset.fileSrc;\r\n        })\r\n        // Pre-load.\r\n        for (let song of this._album) {\r\n            engine.loader.load(song, { cacheable: true }).promise.then((asset: engine.AudioClip) => {\r\n                console.log('Loaded music: ', song);\r\n                this._episode_map.set(song, asset);\r\n            })\r\n        }\r\n        // this._audio.autoplay = true;\r\n        this._audio.loop = true;\r\n        this._audio.onCanplay(() => {\r\n            console.log('Will play this song: ', this._album[this._episode_id]);\r\n            this._audio.play();\r\n            this._bgm.pause();\r\n            this._episode_id = (this._episode_id + 1) % this._album.length;\r\n        });\r\n    }\r\n    public onUpdate(dt: number) {\r\n        if (this._needChange) {\r\n            const episode_name = this._album[this._episode_id];\r\n            if (this._episode_map.has(episode_name)) {\r\n                this._audio.src = this._episode_map.get(episode_name).fileSrc;\r\n                this._needChange = false;\r\n            } else {\r\n                console.log(episode_name, ' not valid');\r\n            }\r\n        }\r\n        if (!this._pause_bg) {\r\n            if (this._bgm.paused) {\r\n                this._bgm.play();\r\n                this._audio.pause();\r\n            }\r\n        }\r\n    }\r\n    public onDestroy() {\r\n\r\n    }\r\n    public changeMusic() {\r\n        this._pause_bg = !this._pause_bg;\r\n        if (this._pause_bg) {\r\n            // console.log(this._episode_map);\r\n            this._needChange = true;\r\n        }\r\n    }\r\n}\r\n"]}