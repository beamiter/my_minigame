{"version":3,"sources":["__temp/buildProcess/inlineFunctionProcess/scripts/pictureController.ts"],"names":[],"mappings":"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","file":"pictureController.js","sourcesContent":["\nimport engine, { Vector3 } from \"engine\";\n@engine.decorators.serialize(\"pictureController\")\nexport default class PictureController extends engine.Script {\n    @engine.decorators.property({\n        type: engine.TypeNames.String\n    })\n    public name: string = \"myname\"\n\n    private _hidden: boolean = false;\n    private _needUpdate: boolean = false;\n    private _epochTime: number = 0.5;\n    private _curTime: number = 0;\n    private _id: number = 0;\n    private _uiSprite: engine.UISprite = this.entity.getComponent(engine.UISprite);\n    private _album: string[] = [];\n    private _previousAlpha: number = 0;\n    private _targetAlpha: number = 0;\n    private _deltaAlpha: number = 0;\n\n    // @ts-ignore\n    set hidden(h: boolean) {\n        this._needUpdate = (h !== this._hidden);\n        this._hidden = h;\n        this._previousAlpha = this._uiSprite.alpha;\n        if (this._hidden) {\n            this._targetAlpha = 0;\n        } else {\n            this._targetAlpha = 255;\n        }\n        this._deltaAlpha = this._targetAlpha - this._previousAlpha;\n    }\n    // @ts-ignore\n    get hidden() {\n        return this._hidden;\n    }\n\n    public onAwake() {\n        for (let i = 0; i < 45; ++i) {\n            this._album.push('pictures/m' + i + '.spriteframe');\n        }\n    }\n    public onUpdate(dt: number) {\n        if (!this._needUpdate) {\n            return;\n        }\n        // console.log(this._uiSprite.alpha);\n        this._curTime += dt;\n        if (this._curTime >= this._epochTime) {\n            this._curTime = 0;\n            this._needUpdate = false;\n            this._uiSprite.alpha = this._targetAlpha;\n        } else {\n            this._uiSprite.alpha = this._previousAlpha + this._curTime / this._epochTime * this._deltaAlpha;\n        }\n    }\n    public changePicture() {\n        const pic_name = this._album[this._id];\n        engine.loader.load(pic_name, { cacheable: true }).promise.then((asset: engine.SpriteFrame) => {\n            console.log(\"Loaded picture: \", pic_name);\n            this._uiSprite.spriteFrame = asset;\n            this._id = (this._id + 1) % this._album.length;\n        });\n    }\n}\n"]}