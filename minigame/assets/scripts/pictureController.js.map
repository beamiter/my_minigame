{"version":3,"sources":["__temp/buildProcess/inlineFunctionProcess/scripts/pictureController.ts"],"names":[],"mappings":"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","file":"pictureController.js","sourcesContent":["\nimport engine, { Vector3 } from \"engine\";\n@engine.decorators.serialize(\"pictureController\")\nexport default class PictureController extends engine.Script {\n    @engine.decorators.property({\n        type: engine.TypeNames.String\n    })\n    public name: string = \"myname\"\n    private _hidden: boolean = true;\n    private _epochTime: number = 0.5;\n    private _canMove: boolean = false;\n    private _curTime: number = 0;\n    private _deltaPos: Vector3 = Vector3.createFromNumber(0, 0, 0);\n    private _targetPos: Vector3 = Vector3.createFromNumber(0, 0, 0);\n    private _id: number = 0;\n    private _uiSprite: engine.UISprite;\n    private _child: engine.Entity;\n    private _album: string[] = [];\n\n    // @ts-ignore\n    set hidden(h: boolean) {\n        this._hidden = h;\n        this._canMove = true;\n        let prevPos = this._child.transform.position;\n        if (this._hidden) {\n            this._targetPos = Vector3.createFromNumber(0, -2, 0);\n        } else {\n            this._targetPos = Vector3.createFromNumber(0, 0, 0);\n        }\n        this._targetPos.sub(prevPos, this._deltaPos);\n    }\n    // @ts-ignore\n    get hidden() {\n        return this._hidden;\n    }\n\n    public onAwake() {\n        this._child = this.entity.transform.findChildByName('Picture').entity;\n        this._uiSprite = this._child.getComponent(engine.UISprite);\n        for (let i = 0; i < 45; ++i) {\n            this._album.push('pictures/m' + i + '.spriteframe');\n        }\n    }\n    public onUpdate(dt: number) {\n        if (!this._canMove) {\n            return;\n        }\n\n        // This is for moving logic.\n        if (this._curTime > this._epochTime) {\n            this._child.transform.position = this._targetPos;\n            this._curTime = 0;\n            this._canMove = false;\n            if (this._hidden) {\n                const pic_name = this._album[this._id];\n                this._id = (this._id + 1) % this._album.length;\n                engine.loader.load(pic_name).promise.then((asset: engine.SpriteFrame) => {\n                    console.log(\"Use picture: \", pic_name);\n                    this._uiSprite.spriteFrame = asset;\n                });\n                this._child.transform.scale = Vector3.createFromNumber(0.001, 0.001, 0.001);\n            } else {\n                this._child.transform.scale = Vector3.createFromNumber(1, 1, 1);\n            }\n        } else {\n            this._curTime += dt;\n            let ratio = dt / this._epochTime;\n            let progress = this._hidden ? (1 - this._curTime / this._epochTime) : (this._curTime / this._epochTime);\n            this._child.transform.position.add(\n                Vector3.createFromNumber(\n                    this._deltaPos.x * ratio, this._deltaPos.y * ratio, this._deltaPos.z * ratio),\n                this._child.transform.position);\n            this._child.transform.scale = Vector3.createFromNumber(progress, progress, progress);\n        }\n    }\n    public onDestroy() {\n\n    }\n}\n"]}