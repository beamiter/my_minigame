{"version":3,"sources":["__temp/buildProcess/inlineFunctionProcess/scripts/pictureController.ts"],"names":[],"mappings":"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","file":"pictureController.js","sourcesContent":["\nimport engine, { Vector3 } from \"engine\";\n@engine.decorators.serialize(\"pictureController\")\nexport default class PictureController extends engine.Script {\n    @engine.decorators.property({\n        type: engine.TypeNames.String\n    })\n    public name: string = \"myname\"\n    private _hidden: boolean = true;\n    private _epochTime: number = 0.5;\n    private _canMove: boolean = false;\n    private _curTime: number = 0;\n    private _deltaPos: Vector3 = Vector3.createFromNumber(0, 0, 0);\n    private _targetPos: Vector3 = Vector3.createFromNumber(0, 0, 0);\n    private _previousPos: Vector3 = new Vector3();\n    private _id: number = 0;\n    private _uiSprite: engine.UISprite;\n    private _child: engine.Entity;\n    private _album: string[] = [];\n    private _spriteMap: Map<string, engine.SpriteFrame> = new Map();\n    private _needChange: boolean = false;\n\n    // @ts-ignore\n    set hidden(h: boolean) {\n        this._hidden = h;\n        this._canMove = true;\n        this._previousPos = this._child.transform.position.clone();\n        if (this._hidden) {\n            this._targetPos = Vector3.createFromNumber(0, -2.5, 0);\n        } else {\n            this._targetPos = Vector3.createFromNumber(0, 0, 0);\n        }\n        this._targetPos.sub(this._previousPos, this._deltaPos);\n    }\n    // @ts-ignore\n    get hidden() {\n        return this._hidden;\n    }\n\n    public onAwake() {\n        this._child = this.entity.transform.findChildByName('Picture').entity;\n        this._uiSprite = this._child.getComponent(engine.UISprite);\n        for (let i = 0; i < 45; ++i) {\n            this._album.push('pictures/m' + i + '.spriteframe');\n        }\n        for (let pic_name of this._album) {\n            engine.loader.load(pic_name, { cacheable: true }).promise.then((asset: engine.SpriteFrame) => {\n                console.log(\"Loaded picture: \", pic_name);\n                this._spriteMap.set(pic_name, asset);\n            });\n        }\n    }\n    public onUpdate(dt: number) {\n        if (this._needChange) {\n            // console.log(this._spriteMap);\n            const pic_name = this._album[this._id];\n            if (this._spriteMap.has(pic_name)) {\n                // Change succeed.\n                this._needChange = false;\n                this._uiSprite.spriteFrame = this._spriteMap.get(pic_name);\n            }\n        }\n        if (!this._canMove) {\n            return;\n        }\n\n        // This is for moving logic.\n        if (this._curTime >= this._epochTime) {\n            // this._child.transform.position = this._targetPos;\n            this._curTime = 0;\n            this._canMove = false;\n            if (this._hidden) {\n                this._id = (this._id + 1) % this._album.length;\n                this._needChange = true;\n            }\n        } else {\n            this._curTime += dt;\n            const ratio = this._curTime / this._epochTime;\n            this._previousPos.add(Vector3.createFromNumber(\n                this._deltaPos.x * ratio, this._deltaPos.y * ratio, this._deltaPos.z * ratio),\n                this._child.transform.position);\n        }\n    }\n    public onDestroy() {\n\n    }\n}\n"]}