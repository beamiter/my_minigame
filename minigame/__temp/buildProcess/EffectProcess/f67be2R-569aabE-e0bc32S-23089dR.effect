{"version":2.0,"name":"System::Effect::Terrain3","properties":[{"key":0,"type":2,"default":[1,1,1]},{"key":1,"type":3,"default":[0.5,0.5,0.5,1.0]},{"key":2,"type":0,"default":[0.1]},{"key":3,"type":3,"default":[1,1,0,0]},{"key":4,"type":3,"default":[1,1,0,0]},{"key":5,"type":3,"default":[1,1,0,0]},{"key":6,"type":3,"default":[1,1,0,0]}],"images":[{"key":7,"type":0,"default":"white"},{"key":8,"type":0,"default":"white"},{"key":9,"type":0,"default":"white"},{"key":10,"type":0,"default":"white"}],"defaultRenderQueue":2000,"passes":[{"renderStates":{"blendOn":false,"cullOn":true,"cullFace":2},"macros":{"__USE_RECEIVE_SHADOW":0,"__USE_MESH_COLOR":1},"lightMode":"ForwardBase","useMaterialRenderStates":true,"variants":{"0":0,"1":1,"2":2,"3":3}}],"variants":[{"shaders":[0,1],"uniformBlock":[0]},{"shaders":[2,3],"uniformBlock":[0]},{"shaders":[4,1],"uniformBlock":[0]},{"shaders":[5,3],"uniformBlock":[0]}],"shaders":["#version 100\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec4 _SpecColor;\nuniform vec4 _Control_ST;\nuniform vec4 _Splat0_ST;\nuniform vec4 _Splat1_ST;\nuniform vec4 _Splat2_ST;\nuniform vec3 _Color;\nuniform float _Shininess;\n\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec3 a_normal;\nvarying vec2 varying_UVControl;\nvarying vec2 varying_UVSplat0;\nvarying vec2 varying_UVSplat1;\nvarying vec2 varying_UVSplat2;\nvarying vec3 varying_LightDir;\nvarying vec3 varying_ViewDir;\nvarying vec3 varying_WorldNormal;\n\nvoid main()\n{\n    vec4 _520 = u_world * a_position;\n    vec2 _382 = vec2(a_texCoord.x, a_texCoord.y - 1.0);\n    gl_Position = u_projection * (u_view * _520);\n    varying_UVControl = (_382 * _Control_ST.xy) + vec2(_Control_ST.z, 1.0 - _Control_ST.w);\n    varying_UVSplat0 = (_382 * _Splat0_ST.xy) + vec2(_Splat0_ST.z, 1.0 - _Splat0_ST.w);\n    varying_UVSplat1 = (_382 * _Splat1_ST.xy) + vec2(_Splat1_ST.z, 1.0 - _Splat1_ST.w);\n    varying_UVSplat2 = (_382 * _Splat2_ST.xy) + vec2(_Splat2_ST.z, 1.0 - _Splat2_ST.w);\n    varying_LightDir = u_lightDir;\n    varying_ViewDir = normalize(vec3(u_viewInverse[3].x, u_viewInverse[3].y, u_viewInverse[3].z) - _520.xyz);\n    varying_WorldNormal = normalize(mat3(u_world[0].xyz, u_world[1].xyz, u_world[2].xyz) * a_normal);\n}\n\n","#version 100\nprecision mediump float;\nprecision highp int;\n\nuniform highp vec4 _SpecColor;\nuniform highp vec4 _Control_ST;\nuniform highp vec4 _Splat0_ST;\nuniform highp vec4 _Splat1_ST;\nuniform highp vec4 _Splat2_ST;\nuniform highp vec3 _Color;\nuniform highp float _Shininess;\n\n\nuniform highp mat4 u_view;\nuniform highp mat4 u_viewInverse;\nuniform highp mat4 u_vp;\nuniform highp mat4 u_projection;\nuniform highp mat4 u_lightSpaceMatrix;\nuniform highp vec4 u_fogInfos;\nuniform highp vec3 u_fogColor;\nuniform highp float u_gameTime;\nuniform highp vec3 u_ambientLight;\nuniform highp vec3 u_lightDir;\nuniform highp vec3 u_lightColor;\nuniform highp vec3 u_shadowColor;\nuniform highp float u_shadowStrength;\nuniform highp vec4 u_csmFarBounds;\nuniform highp vec4 u_shadowTilingOffsets[4];\nuniform highp mat4 u_csmLightSpaceMatrices[4];\nuniform highp vec3 u_SH[9];\n\n\nuniform highp sampler2D _Control;\nuniform highp sampler2D _Splat0;\nuniform highp sampler2D _Splat1;\nuniform highp sampler2D _Splat2;\n\nvarying highp vec2 varying_UVControl;\nvarying highp vec2 varying_UVSplat0;\nvarying highp vec2 varying_UVSplat1;\nvarying highp vec2 varying_UVSplat2;\nvarying highp vec3 varying_LightDir;\nvarying highp vec3 varying_ViewDir;\nvarying highp vec3 varying_WorldNormal;\n\nvoid main()\n{\n    highp vec4 _304 = texture2D(_Control, varying_UVControl);\n    highp vec3 _346 = normalize(varying_LightDir);\n    highp vec3 _352 = normalize(varying_WorldNormal);\n    gl_FragData[0] = vec4(((((texture2D(_Splat0, varying_UVSplat0).xyz * _304.x) + (texture2D(_Splat1, varying_UVSplat1).xyz * _304.y)) + (texture2D(_Splat2, varying_UVSplat2).xyz * _304.z)) * _Color) * ((u_ambientLight + ((u_lightColor * max(0.0, dot(_346, _352))) * 1.0)) + ((u_lightColor * pow(max(0.0, dot(normalize(normalize(varying_ViewDir) + _346), _352)), _Shininess * 128.0)) * _SpecColor.xyz)), 1.0);\n}\n\n","#version 100\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec4 _SpecColor;\nuniform vec4 _Control_ST;\nuniform vec4 _Splat0_ST;\nuniform vec4 _Splat1_ST;\nuniform vec4 _Splat2_ST;\nuniform vec3 _Color;\nuniform float _Shininess;\n\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec3 a_normal;\nvarying vec2 varying_UVControl;\nvarying vec2 varying_UVSplat0;\nvarying vec2 varying_UVSplat1;\nvarying vec2 varying_UVSplat2;\nvarying vec3 varying_LightDir;\nvarying vec3 varying_ViewDir;\nvarying vec3 varying_WorldNormal;\nvarying vec3 varying_ShadowPosition;\n\nvoid main()\n{\n    vec4 _530 = u_world * a_position;\n    vec2 _389 = vec2(a_texCoord.x, a_texCoord.y - 1.0);\n    vec3 _469 = _530.xyz;\n    gl_Position = u_projection * (u_view * _530);\n    varying_UVControl = (_389 * _Control_ST.xy) + vec2(_Control_ST.z, 1.0 - _Control_ST.w);\n    varying_UVSplat0 = (_389 * _Splat0_ST.xy) + vec2(_Splat0_ST.z, 1.0 - _Splat0_ST.w);\n    varying_UVSplat1 = (_389 * _Splat1_ST.xy) + vec2(_Splat1_ST.z, 1.0 - _Splat1_ST.w);\n    varying_UVSplat2 = (_389 * _Splat2_ST.xy) + vec2(_Splat2_ST.z, 1.0 - _Splat2_ST.w);\n    varying_LightDir = u_lightDir;\n    varying_ViewDir = normalize(vec3(u_viewInverse[3].x, u_viewInverse[3].y, u_viewInverse[3].z) - _469);\n    varying_WorldNormal = normalize(mat3(u_world[0].xyz, u_world[1].xyz, u_world[2].xyz) * a_normal);\n    varying_ShadowPosition = _469;\n}\n\n","#version 100\nprecision mediump float;\nprecision highp int;\n\nuniform highp mat4 u_view;\nuniform highp mat4 u_viewInverse;\nuniform highp mat4 u_vp;\nuniform highp mat4 u_projection;\nuniform highp mat4 u_lightSpaceMatrix;\nuniform highp vec4 u_fogInfos;\nuniform highp vec3 u_fogColor;\nuniform highp float u_gameTime;\nuniform highp vec3 u_ambientLight;\nuniform highp vec3 u_lightDir;\nuniform highp vec3 u_lightColor;\nuniform highp vec3 u_shadowColor;\nuniform highp float u_shadowStrength;\nuniform highp vec4 u_csmFarBounds;\nuniform highp vec4 u_shadowTilingOffsets[4];\nuniform highp mat4 u_csmLightSpaceMatrices[4];\nuniform highp vec3 u_SH[9];\n\n\nuniform highp vec4 _SpecColor;\nuniform highp vec4 _Control_ST;\nuniform highp vec4 _Splat0_ST;\nuniform highp vec4 _Splat1_ST;\nuniform highp vec4 _Splat2_ST;\nuniform highp vec3 _Color;\nuniform highp float _Shininess;\n\n\nuniform highp sampler2D _Control;\nuniform highp sampler2D _Splat0;\nuniform highp sampler2D _Splat1;\nuniform highp sampler2D _Splat2;\nuniform highp sampler2D u_shadowMapTex;\n\nvarying highp vec2 varying_UVControl;\nvarying highp vec2 varying_UVSplat0;\nvarying highp vec2 varying_UVSplat1;\nvarying highp vec2 varying_UVSplat2;\nvarying highp vec3 varying_LightDir;\nvarying highp vec3 varying_ViewDir;\nvarying highp vec3 varying_WorldNormal;\nvarying highp vec3 varying_ShadowPosition;\n\nvoid main()\n{\n    highp vec4 _557 = texture2D(_Control, varying_UVControl);\n    highp vec4 _563 = texture2D(_Splat0, varying_UVSplat0);\n    highp vec4 _570 = texture2D(_Splat1, varying_UVSplat1);\n    highp vec4 _577 = texture2D(_Splat2, varying_UVSplat2);\n    highp vec3 _599 = normalize(varying_LightDir);\n    highp vec3 _605 = normalize(varying_WorldNormal);\n    highp vec4 _682 = vec4(varying_ShadowPosition, 1.0);\n    highp float _686 = -(u_view * _682).z;\n    bool _699 = true && (_686 < u_csmFarBounds.x);\n    highp float _961 = 0.0;\n    if (_699)\n    {\n        highp vec3 _714 = ((u_csmLightSpaceMatrices[0] * _682).xyz * 0.5) + vec3(0.5);\n        highp float _718 = _714.x;\n        highp float _722 = _714.y;\n        highp float _732 = (((_714.z + step(_718, 0.001000000047497451305389404296875)) + step(_722, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _718)) + step(0.999000012874603271484375, _722);\n        highp float _958 = 0.0;\n        for (int SPIRV_Cross_Dummy278 = 0; SPIRV_Cross_Dummy278 < 1; SPIRV_Cross_Dummy278++)\n        {\n            if (_732 > 1.0)\n            {\n                _958 = 1.0;\n                break;\n            }\n            highp float _783 = _732 - 0.001000000047497451305389404296875;\n            highp vec2 _789 = ((_714.xy * u_shadowTilingOffsets[0].xy) + u_shadowTilingOffsets[0].zw).xy;\n            highp vec2 _800 = fract(_789 * vec2(2048.0));\n            highp float _855 = _800.y;\n            _958 = mix(mix(float(_783 < dot(texture2D(u_shadowMapTex, _789), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_783 < dot(texture2D(u_shadowMapTex, _789 + vec2(0.0, 0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _855), mix(float(_783 < dot(texture2D(u_shadowMapTex, _789 + vec2(0.00048828125, 0.0)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_783 < dot(texture2D(u_shadowMapTex, _789 + vec2(0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _855), _800.x);\n            break;\n        }\n        _961 = _958;\n    }\n    else\n    {\n        _961 = 1.0;\n    }\n    bool _1288 = _699 ? true : false;\n    bool _979 = (!_1288) && (_686 < u_csmFarBounds.y);\n    highp float _1070 = 0.0;\n    if (_979)\n    {\n        highp vec3 _990 = ((u_csmLightSpaceMatrices[1] * _682).xyz * 0.5) + vec3(0.5);\n        highp float _992 = _990.x;\n        highp float _995 = _990.y;\n        highp float _1003 = (((_990.z + step(_992, 0.001000000047497451305389404296875)) + step(_995, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _992)) + step(0.999000012874603271484375, _995);\n        highp float _1067 = 0.0;\n        for (int SPIRV_Cross_Dummy354 = 0; SPIRV_Cross_Dummy354 < 1; SPIRV_Cross_Dummy354++)\n        {\n            if (_1003 > 1.0)\n            {\n                _1067 = 1.0;\n                break;\n            }\n            highp float _1021 = _1003 - 0.001000000047497451305389404296875;\n            highp vec2 _1025 = ((_990.xy * u_shadowTilingOffsets[1].xy) + u_shadowTilingOffsets[1].zw).xy;\n            highp vec2 _1032 = fract(_1025 * vec2(2048.0));\n            highp float _1060 = _1032.y;\n            _1067 = mix(mix(float(_1021 < dot(texture2D(u_shadowMapTex, _1025), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_1021 < dot(texture2D(u_shadowMapTex, _1025 + vec2(0.0, 0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _1060), mix(float(_1021 < dot(texture2D(u_shadowMapTex, _1025 + vec2(0.00048828125, 0.0)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_1021 < dot(texture2D(u_shadowMapTex, _1025 + vec2(0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _1060), _1032.x);\n            break;\n        }\n        _1070 = _1067;\n    }\n    else\n    {\n        _1070 = _961;\n    }\n    bool _1289 = _979 ? true : _1288;\n    bool _1084 = (!_1289) && (_686 < u_csmFarBounds.z);\n    highp float _1175 = 0.0;\n    if (_1084)\n    {\n        highp vec3 _1095 = ((u_csmLightSpaceMatrices[2] * _682).xyz * 0.5) + vec3(0.5);\n        highp float _1097 = _1095.x;\n        highp float _1100 = _1095.y;\n        highp float _1108 = (((_1095.z + step(_1097, 0.001000000047497451305389404296875)) + step(_1100, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1097)) + step(0.999000012874603271484375, _1100);\n        highp float _1172 = 0.0;\n        for (int SPIRV_Cross_Dummy430 = 0; SPIRV_Cross_Dummy430 < 1; SPIRV_Cross_Dummy430++)\n        {\n            if (_1108 > 1.0)\n            {\n                _1172 = 1.0;\n                break;\n            }\n            highp float _1126 = _1108 - 0.001000000047497451305389404296875;\n            highp vec2 _1130 = ((_1095.xy * u_shadowTilingOffsets[2].xy) + u_shadowTilingOffsets[2].zw).xy;\n            highp vec2 _1137 = fract(_1130 * vec2(2048.0));\n            highp float _1165 = _1137.y;\n            _1172 = mix(mix(float(_1126 < dot(texture2D(u_shadowMapTex, _1130), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_1126 < dot(texture2D(u_shadowMapTex, _1130 + vec2(0.0, 0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _1165), mix(float(_1126 < dot(texture2D(u_shadowMapTex, _1130 + vec2(0.00048828125, 0.0)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_1126 < dot(texture2D(u_shadowMapTex, _1130 + vec2(0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _1165), _1137.x);\n            break;\n        }\n        _1175 = _1172;\n    }\n    else\n    {\n        _1175 = _1070;\n    }\n    highp float _1280 = 0.0;\n    if ((!(_1084 ? true : _1289)) && (_686 < u_csmFarBounds.w))\n    {\n        highp vec3 _1200 = ((u_csmLightSpaceMatrices[3] * _682).xyz * 0.5) + vec3(0.5);\n        highp float _1202 = _1200.x;\n        highp float _1205 = _1200.y;\n        highp float _1213 = (((_1200.z + step(_1202, 0.001000000047497451305389404296875)) + step(_1205, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1202)) + step(0.999000012874603271484375, _1205);\n        highp float _1277 = 0.0;\n        for (int SPIRV_Cross_Dummy500 = 0; SPIRV_Cross_Dummy500 < 1; SPIRV_Cross_Dummy500++)\n        {\n            if (_1213 > 1.0)\n            {\n                _1277 = 1.0;\n                break;\n            }\n            highp float _1231 = _1213 - 0.001000000047497451305389404296875;\n            highp vec2 _1235 = ((_1200.xy * u_shadowTilingOffsets[3].xy) + u_shadowTilingOffsets[3].zw).xy;\n            highp vec2 _1242 = fract(_1235 * vec2(2048.0));\n            highp float _1270 = _1242.y;\n            _1277 = mix(mix(float(_1231 < dot(texture2D(u_shadowMapTex, _1235), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_1231 < dot(texture2D(u_shadowMapTex, _1235 + vec2(0.0, 0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _1270), mix(float(_1231 < dot(texture2D(u_shadowMapTex, _1235 + vec2(0.00048828125, 0.0)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_1231 < dot(texture2D(u_shadowMapTex, _1235 + vec2(0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _1270), _1242.x);\n            break;\n        }\n        _1280 = _1277;\n    }\n    else\n    {\n        _1280 = _1175;\n    }\n    gl_FragData[0] = vec4(((((_563.xyz * _557.x) + (_570.xyz * _557.y)) + (_577.xyz * _557.z)) * _Color) * ((u_ambientLight + ((u_lightColor * max(0.0, dot(_599, _605))) * _1280)) + ((u_lightColor * pow(max(0.0, dot(normalize(normalize(varying_ViewDir) + _599), _605)), _Shininess * 128.0)) * _SpecColor.xyz)), 1.0);\n}\n\n","#version 100\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec4 _SpecColor;\nuniform vec4 _Control_ST;\nuniform vec4 _Splat0_ST;\nuniform vec4 _Splat1_ST;\nuniform vec4 _Splat2_ST;\nuniform vec3 _Color;\nuniform float _Shininess;\n\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec3 a_normal;\nvarying vec2 varying_UVControl;\nvarying vec2 varying_UVSplat0;\nvarying vec2 varying_UVSplat1;\nvarying vec2 varying_UVSplat2;\nvarying vec3 varying_LightDir;\nvarying vec3 varying_ViewDir;\nvarying vec3 varying_WorldNormal;\n\nvoid main()\n{\n    vec4 _522 = u_world * a_position;\n    vec2 _384 = vec2(a_texCoord.x, a_texCoord.y - 1.0);\n    gl_Position = u_projection * (u_view * _522);\n    varying_UVControl = (_384 * _Control_ST.xy) + vec2(_Control_ST.z, 1.0 - _Control_ST.w);\n    varying_UVSplat0 = (_384 * _Splat0_ST.xy) + vec2(_Splat0_ST.z, 1.0 - _Splat0_ST.w);\n    varying_UVSplat1 = (_384 * _Splat1_ST.xy) + vec2(_Splat1_ST.z, 1.0 - _Splat1_ST.w);\n    varying_UVSplat2 = (_384 * _Splat2_ST.xy) + vec2(_Splat2_ST.z, 1.0 - _Splat2_ST.w);\n    varying_LightDir = u_lightDir;\n    varying_ViewDir = normalize(vec3(u_viewInverse[3].x, u_viewInverse[3].y, u_viewInverse[3].z) - _522.xyz);\n    varying_WorldNormal = normalize(mat3(u_world[0].xyz, u_world[1].xyz, u_world[2].xyz) * a_normal);\n}\n\n","#version 100\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec4 _SpecColor;\nuniform vec4 _Control_ST;\nuniform vec4 _Splat0_ST;\nuniform vec4 _Splat1_ST;\nuniform vec4 _Splat2_ST;\nuniform vec3 _Color;\nuniform float _Shininess;\n\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec3 a_normal;\nvarying vec2 varying_UVControl;\nvarying vec2 varying_UVSplat0;\nvarying vec2 varying_UVSplat1;\nvarying vec2 varying_UVSplat2;\nvarying vec3 varying_LightDir;\nvarying vec3 varying_ViewDir;\nvarying vec3 varying_WorldNormal;\nvarying vec3 varying_ShadowPosition;\n\nvoid main()\n{\n    vec4 _532 = u_world * a_position;\n    vec2 _391 = vec2(a_texCoord.x, a_texCoord.y - 1.0);\n    vec3 _471 = _532.xyz;\n    gl_Position = u_projection * (u_view * _532);\n    varying_UVControl = (_391 * _Control_ST.xy) + vec2(_Control_ST.z, 1.0 - _Control_ST.w);\n    varying_UVSplat0 = (_391 * _Splat0_ST.xy) + vec2(_Splat0_ST.z, 1.0 - _Splat0_ST.w);\n    varying_UVSplat1 = (_391 * _Splat1_ST.xy) + vec2(_Splat1_ST.z, 1.0 - _Splat1_ST.w);\n    varying_UVSplat2 = (_391 * _Splat2_ST.xy) + vec2(_Splat2_ST.z, 1.0 - _Splat2_ST.w);\n    varying_LightDir = u_lightDir;\n    varying_ViewDir = normalize(vec3(u_viewInverse[3].x, u_viewInverse[3].y, u_viewInverse[3].z) - _471);\n    varying_WorldNormal = normalize(mat3(u_world[0].xyz, u_world[1].xyz, u_world[2].xyz) * a_normal);\n    varying_ShadowPosition = _471;\n}\n\n"],"uniformBlocks":[{"name":11,"blockName":12,"size":96,"member":[{"memberName":1,"type":4,"byteOffset":0},{"memberName":6,"type":4,"byteOffset":16},{"memberName":3,"type":4,"byteOffset":32},{"memberName":4,"type":4,"byteOffset":48},{"memberName":5,"type":4,"byteOffset":64},{"memberName":0,"type":3,"byteOffset":80},{"memberName":2,"type":1,"byteOffset":92}],"hash":"628257DAC79293CB2EAFF006B5D716D8"}],"strings":["_Color","_SpecColor","_Shininess","_Splat0_ST","_Splat1_ST","_Splat2_ST","_Control_ST","_Splat0","_Splat1","_Splat2","_Control","type_Material","Material"]}