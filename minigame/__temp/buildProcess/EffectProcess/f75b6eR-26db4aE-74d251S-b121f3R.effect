{"version":2.0,"name":"System::Effect::Effect3D","properties":[{"key":0,"type":3,"default":[1,1,0,0]},{"key":1,"type":3,"default":[1,1,1,1]},{"key":2,"type":0,"default":[1.0]}],"images":[{"key":3,"type":0,"default":"white"},{"key":4,"type":0,"default":"white"}],"defaultRenderQueue":3000,"passes":[{"renderStates":{"blendOn":true,"blendSrc":4,"blendDst":1,"cullOn":false,"cullFace":2,"depthWrite":false},"macros":{"__LINE_ALIGN_LOCAL_SPACE_WORLD":0,"__USE_SKIN_WORLD":1,"__LINE_ALIGN_LOCAL_SPACE_LOCAL":2,"__USE_SKIN_LOCAL":3,"__PARTICLE":4,"__TRAIL_USE_LOCAL":5,"__TRAIL_USE_VIEW":6,"__LINE_ALIGN_VIEW_SPACE_LOCAL":7,"__USE_SKINNED_ANIMATION":8,"__LINE_ALIGN_VIEW_SPACE_WORLD":9,"__USE_MESH_COLOR":10},"lightMode":"ForwardBase","useMaterialRenderStates":true,"variants":{"8":0,"32":1,"16":2,"0":3,"64":4,"128":5,"2":6,"256":7,"4":8,"1":9,"512":10,"1024":11,"1088":4,"1152":5,"1026":12,"1032":13,"1056":1,"1280":14,"1040":2,"1028":8,"1025":9,"1536":10}}],"variants":[{"shaders":[0,1],"uniformBlock":[0]},{"shaders":[2,3],"uniformBlock":[0]},{"shaders":[4,5],"uniformBlock":[0]},{"shaders":[6,7],"uniformBlock":[0]},{"shaders":[8,3],"uniformBlock":[0]},{"shaders":[9,7],"uniformBlock":[0]},{"shaders":[10,1],"uniformBlock":[0]},{"shaders":[11,1],"uniformBlock":[0]},{"shaders":[12,7],"uniformBlock":[0]},{"shaders":[13,7],"uniformBlock":[0]},{"shaders":[14,7],"uniformBlock":[0]},{"shaders":[15,7],"uniformBlock":[0]},{"shaders":[16,1],"uniformBlock":[0]},{"shaders":[17,1],"uniformBlock":[0]},{"shaders":[18,1],"uniformBlock":[0]}],"shaders":["#version 100\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform vec4 u_boneOffsetMatrix[288];\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_boneWeight;\nattribute vec4 a_boneIndex;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nvoid main()\n{\n    int _629 = int(a_boneIndex.x) * 3;\n    int _634 = _629 + 1;\n    int _638 = _629 + 2;\n    int _680 = int(a_boneIndex.y) * 3;\n    int _685 = _680 + 1;\n    int _689 = _680 + 2;\n    int _731 = int(a_boneIndex.z) * 3;\n    int _736 = _731 + 1;\n    int _740 = _731 + 2;\n    int _782 = int(a_boneIndex.w) * 3;\n    int _787 = _782 + 1;\n    int _791 = _782 + 2;\n    mat4 _530 = mat4(vec4(u_boneOffsetMatrix[_629].xyz, 0.0), vec4(u_boneOffsetMatrix[_634].xyz, 0.0), vec4(u_boneOffsetMatrix[_638].xyz, 0.0), vec4(u_boneOffsetMatrix[_629].w, u_boneOffsetMatrix[_634].w, u_boneOffsetMatrix[_638].w, 1.0)) * a_boneWeight.x;\n    mat4 _534 = mat4(vec4(u_boneOffsetMatrix[_680].xyz, 0.0), vec4(u_boneOffsetMatrix[_685].xyz, 0.0), vec4(u_boneOffsetMatrix[_689].xyz, 0.0), vec4(u_boneOffsetMatrix[_680].w, u_boneOffsetMatrix[_685].w, u_boneOffsetMatrix[_689].w, 1.0)) * a_boneWeight.y;\n    mat4 _552 = mat4(vec4(u_boneOffsetMatrix[_731].xyz, 0.0), vec4(u_boneOffsetMatrix[_736].xyz, 0.0), vec4(u_boneOffsetMatrix[_740].xyz, 0.0), vec4(u_boneOffsetMatrix[_731].w, u_boneOffsetMatrix[_736].w, u_boneOffsetMatrix[_740].w, 1.0)) * a_boneWeight.z;\n    mat4 _570 = mat4(vec4(u_boneOffsetMatrix[_782].xyz, 0.0), vec4(u_boneOffsetMatrix[_787].xyz, 0.0), vec4(u_boneOffsetMatrix[_791].xyz, 0.0), vec4(u_boneOffsetMatrix[_782].w, u_boneOffsetMatrix[_787].w, u_boneOffsetMatrix[_791].w, 1.0)) * a_boneWeight.w;\n    gl_Position = u_projection * (u_view * (u_world * (mat4(((_530[0] + _534[0]) + _552[0]) + _570[0], ((_530[1] + _534[1]) + _552[1]) + _570[1], ((_530[2] + _534[2]) + _552[2]) + _570[2], ((_530[3] + _534[3]) + _552[3]) + _570[3]) * a_position)));\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = vec4(1.0);\n}\n\n","#version 100\nprecision mediump float;\nprecision highp int;\n\nuniform highp vec4 _TintColor;\nuniform highp vec4 _MainTex_ST;\nuniform highp float _Bright;\n\n\nuniform highp sampler2D _MainTex;\nuniform highp sampler2D _MaskTex;\n\nvarying highp vec2 varying_TexCoord;\nvarying highp vec4 varying_Color;\n\nvoid main()\n{\n    highp vec4 _158 = ((varying_Color * _Bright) * texture2D(_MainTex, varying_TexCoord)) * _TintColor;\n    highp vec4 _188 = _158;\n    _188.w = _158.w * texture2D(_MaskTex, varying_TexCoord).x;\n    gl_FragData[0] = clamp(_188, vec4(0.0), vec4(1.0));\n}\n\n","#version 100\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec3 u_widthByLength[4];\nuniform vec4 u_colorRGBByLength[4];\nuniform vec2 u_colorAlphaByLength[4];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nattribute vec3 a_position;\nattribute float a_sign;\nattribute float a_lengthPercent;\nattribute vec2 a_texCoord;\nattribute vec3 a_direction;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nfloat _879 = 0.0;\nvec4 _888 = vec4(0.0);\n\nvoid main()\n{\n    bool _660 = true && (u_widthByLength[1].x >= a_lengthPercent);\n    float _895 = 0.0;\n    if (_660)\n    {\n        _895 = mix(u_widthByLength[0].y, u_widthByLength[1].y, (a_lengthPercent - u_widthByLength[0].x) / (u_widthByLength[1].x - u_widthByLength[0].x));\n    }\n    else\n    {\n        _895 = _879;\n    }\n    bool _1228 = _660 ? false : true;\n    bool _1076 = _1228 && (u_widthByLength[2].x >= a_lengthPercent);\n    float _1090 = 0.0;\n    if (_1076)\n    {\n        _1090 = mix(u_widthByLength[1].y, u_widthByLength[2].y, (a_lengthPercent - u_widthByLength[1].x) / (u_widthByLength[2].x - u_widthByLength[1].x));\n    }\n    else\n    {\n        _1090 = _895;\n    }\n    float _1118 = 0.0;\n    if ((_1076 ? false : _1228) && (u_widthByLength[3].x >= a_lengthPercent))\n    {\n        _1118 = mix(u_widthByLength[2].y, u_widthByLength[3].y, (a_lengthPercent - u_widthByLength[2].x) / (u_widthByLength[3].x - u_widthByLength[2].x));\n    }\n    else\n    {\n        _1118 = _1090;\n    }\n    bool _716 = true && (u_colorAlphaByLength[1].x >= a_lengthPercent);\n    vec4 _897 = vec4(0.0);\n    if (_716)\n    {\n        vec4 _870 = _888;\n        _870.w = mix(u_colorAlphaByLength[0].y, u_colorAlphaByLength[1].y, (a_lengthPercent - u_colorAlphaByLength[0].x) / (u_colorAlphaByLength[1].x - u_colorAlphaByLength[0].x));\n        _897 = _870;\n    }\n    else\n    {\n        _897 = _888;\n    }\n    bool _1230 = _716 ? false : true;\n    bool _979 = _1230 && (u_colorAlphaByLength[2].x >= a_lengthPercent);\n    vec4 _994 = vec4(0.0);\n    if (_979)\n    {\n        vec4 _991 = _897;\n        _991.w = mix(u_colorAlphaByLength[1].y, u_colorAlphaByLength[2].y, (a_lengthPercent - u_colorAlphaByLength[1].x) / (u_colorAlphaByLength[2].x - u_colorAlphaByLength[1].x));\n        _994 = _991;\n    }\n    else\n    {\n        _994 = _897;\n    }\n    vec4 _1023 = vec4(0.0);\n    if ((_979 ? false : _1230) && (u_colorAlphaByLength[3].x >= a_lengthPercent))\n    {\n        vec4 _1020 = _994;\n        _1020.w = mix(u_colorAlphaByLength[2].y, u_colorAlphaByLength[3].y, (a_lengthPercent - u_colorAlphaByLength[2].x) / (u_colorAlphaByLength[3].x - u_colorAlphaByLength[2].x));\n        _1023 = _1020;\n    }\n    else\n    {\n        _1023 = _994;\n    }\n    bool _757 = true && (u_colorRGBByLength[1].x >= a_lengthPercent);\n    vec4 _898 = vec4(0.0);\n    if (_757)\n    {\n        vec3 _781 = mix(u_colorRGBByLength[0].yzw, u_colorRGBByLength[1].yzw, vec3((a_lengthPercent - u_colorRGBByLength[0].x) / (u_colorRGBByLength[1].x - u_colorRGBByLength[0].x)));\n        _898 = vec4(_781.x, _781.y, _781.z, _1023.w);\n    }\n    else\n    {\n        _898 = _1023;\n    }\n    bool _1232 = _757 ? false : true;\n    bool _913 = _1232 && (u_colorRGBByLength[2].x >= a_lengthPercent);\n    vec4 _932 = vec4(0.0);\n    if (_913)\n    {\n        vec3 _928 = mix(u_colorRGBByLength[1].yzw, u_colorRGBByLength[2].yzw, vec3((a_lengthPercent - u_colorRGBByLength[1].x) / (u_colorRGBByLength[2].x - u_colorRGBByLength[1].x)));\n        _932 = vec4(_928.x, _928.y, _928.z, _898.w);\n    }\n    else\n    {\n        _932 = _898;\n    }\n    vec4 _965 = vec4(0.0);\n    if ((_913 ? false : _1232) && (u_colorRGBByLength[3].x >= a_lengthPercent))\n    {\n        vec3 _961 = mix(u_colorRGBByLength[2].yzw, u_colorRGBByLength[3].yzw, vec3((a_lengthPercent - u_colorRGBByLength[2].x) / (u_colorRGBByLength[3].x - u_colorRGBByLength[2].x)));\n        _965 = vec4(_961.x, _961.y, _961.z, _932.w);\n    }\n    else\n    {\n        _965 = _932;\n    }\n    gl_Position = u_projection * (u_view * vec4(a_position + (normalize(cross(a_direction, vec3(0.0, 0.0, 1.0)) * a_sign) * _1118), 1.0));\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = _965;\n}\n\n","#version 100\nprecision mediump float;\nprecision highp int;\n\nuniform highp vec4 _TintColor;\nuniform highp vec4 _MainTex_ST;\nuniform highp float _Bright;\n\n\nuniform highp sampler2D _MainTex;\nuniform highp sampler2D _MaskTex;\n\nvarying highp vec2 varying_TexCoord;\nvarying highp vec4 varying_Color;\n\nvoid main()\n{\n    highp vec4 _163 = ((varying_Color * _Bright) * texture2D(_MainTex, varying_TexCoord)) * _TintColor;\n    highp vec4 _193 = _163;\n    _193.w = _163.w * texture2D(_MaskTex, varying_TexCoord).x;\n    gl_FragData[0] = clamp(_193, vec4(0.0), vec4(1.0));\n}\n\n","#version 100\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec3 u_speedByLife[13];\nuniform vec3 u_speedLimitByLife[13];\nuniform vec3 u_rotationByLife[13];\nuniform vec3 u_sizeByLife[13];\nuniform vec4 u_colorRGBByLife[8];\nuniform vec2 u_colorAlphaByLife[9];\nuniform vec3 u_textureSheetAnimation[7];\nuniform vec4 u_common[2];\nuniform vec3 u_renderer[2];\nuniform float u_emitterShape;\nuniform vec4 u_bakedInfo;\n\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nattribute vec3 a_subCenter;\nattribute vec3 a_subPosition;\nattribute vec2 a_texCoord;\nattribute vec3 a_startSize;\nattribute vec3 a_startRotation;\nattribute vec4 a_startColor;\nattribute vec3 a_startSpeed;\nattribute float a_startTime;\nattribute float a_startLifeTime;\nattribute float a_randomSeed;\nattribute vec3 a_simulationWorldPos;\nattribute vec4 a_simulationWorldRot;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nfloat _12468 = 0.0;\nvec4 _13250 = vec4(0.0);\nvec4 _20261 = vec4(0.0);\nvec3 _20262 = vec3(0.0);\nvec2 _20263 = vec2(0.0);\n\nvoid main()\n{\n    float _4159 = u_gameTime - a_startTime;\n    bool _4164 = u_bakedInfo.x > 0.0;\n    float _12441 = 0.0;\n    if (_4164)\n    {\n        float _4171 = u_bakedInfo.y + a_startTime;\n        float _4174 = (u_gameTime - _4171) / a_startLifeTime;\n        float _12442 = 0.0;\n        if ((_4174 < 0.0) && (u_bakedInfo.z > 0.0))\n        {\n            _12442 = (u_gameTime - (_4171 - u_bakedInfo.w)) / a_startLifeTime;\n        }\n        else\n        {\n            _12442 = _4174;\n        }\n        _12441 = _12442;\n    }\n    else\n    {\n        _12441 = (u_bakedInfo.x < 0.0) ? (-1.0) : (_4159 / a_startLifeTime);\n    }\n    vec4 _13620 = vec4(0.0);\n    vec2 _13621 = vec2(0.0);\n    vec4 _13623 = vec4(0.0);\n    if ((_12441 < 1.0) && (_12441 >= 0.0))\n    {\n        vec4 _4224 = a_startColor * vec4(0.0039215688593685626983642578125);\n        float _4265 = clamp(_4159, 0.0, a_startLifeTime);\n        float _12444 = 0.0;\n        float _12446 = 0.0;\n        if (_4164)\n        {\n            float _4279 = u_bakedInfo.y + a_startTime;\n            float _4280 = u_gameTime - _4279;\n            float _4291 = _4280 / a_startLifeTime;\n            float _12445 = 0.0;\n            float _12447 = 0.0;\n            if ((_4291 < 0.0) && (u_bakedInfo.z > 0.0))\n            {\n                float _4308 = u_gameTime - (_4279 - u_bakedInfo.w);\n                _12447 = _4308 / a_startLifeTime;\n                _12445 = clamp(_4308, 0.0, a_startLifeTime);\n            }\n            else\n            {\n                _12447 = _4291;\n                _12445 = clamp(_4280, 0.0, a_startLifeTime);\n            }\n            _12446 = _12447;\n            _12444 = _12445;\n        }\n        else\n        {\n            _12446 = clamp(_4265 / a_startLifeTime, 0.0, 1.0);\n            _12444 = _4265;\n        }\n        float _6265 = length(vec3(u_world[0].xyz));\n        float _6272 = length(vec3(u_world[1].xyz));\n        float _6279 = length(vec3(u_world[2].xyz));\n        mat4 _11851 = mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n        _11851[0].x = _6265;\n        mat4 _11854 = _11851;\n        _11854[1].y = _6272;\n        mat4 _11857 = _11854;\n        _11857[2].z = _6279;\n        mat4 _11859 = _11857;\n        _11859[3].w = 1.0;\n        mat4 _11862 = mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n        _11862[3] = u_world[3];\n        mat4 _11864 = _11862;\n        _11864[3].w = 1.0;\n        mat4 _12739 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n        mat4 _12869 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n        if (u_common[0].x == 1.0)\n        {\n            float _6384 = a_simulationWorldRot.x + a_simulationWorldRot.x;\n            float _6389 = a_simulationWorldRot.y + a_simulationWorldRot.y;\n            float _6394 = a_simulationWorldRot.z + a_simulationWorldRot.z;\n            float _6402 = a_simulationWorldRot.y * _6384;\n            float _6406 = a_simulationWorldRot.y * _6389;\n            float _6410 = a_simulationWorldRot.z * _6384;\n            float _6414 = a_simulationWorldRot.z * _6389;\n            float _6418 = a_simulationWorldRot.z * _6394;\n            float _6422 = a_simulationWorldRot.w * _6384;\n            float _6426 = a_simulationWorldRot.w * _6389;\n            float _6430 = a_simulationWorldRot.w * _6394;\n            float _6445 = 1.0 - (a_simulationWorldRot.x * _6384);\n            mat4 _11882 = _11864;\n            _11882[3].x = a_simulationWorldPos.x;\n            mat4 _11885 = _11882;\n            _11885[3].y = a_simulationWorldPos.y;\n            mat4 _11888 = _11885;\n            _11888[3].z = a_simulationWorldPos.z;\n            mat4 _11890 = _11888;\n            _11890[3].w = 1.0;\n            mat4 _11893 = mat4(vec4((1.0 - _6406) - _6418, _6402 + _6430, _6410 - _6426, 0.0), vec4(_6402 - _6430, _6445 - _6418, _6414 + _6422, 0.0), vec4(_6410 + _6426, _6414 - _6422, _6445 - _6406, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n            _11893[3].x = a_simulationWorldPos.x;\n            mat4 _11896 = _11893;\n            _11896[3].y = a_simulationWorldPos.y;\n            mat4 _11899 = _11896;\n            _11899[3].z = a_simulationWorldPos.z;\n            _12869 = _11890;\n            _12739 = _11899 * _11859;\n        }\n        else\n        {\n            _12869 = _11864;\n            _12739 = u_world;\n        }\n        float _6471 = fract(sin(a_randomSeed) * 43758.546875);\n        float _6477 = fract(sin(a_randomSeed - 0.100000001490116119384765625) * 43758.546875);\n        float _6483 = fract(sin(a_randomSeed + 0.20000000298023223876953125) * 43758.546875);\n        float _6489 = fract(sin(a_randomSeed + 0.4000000059604644775390625) * 43758.546875);\n        float _4653 = 0.100000001490116119384765625 * a_startLifeTime;\n        float _4657 = 0.300000011920928955078125 * a_startLifeTime;\n        vec2 _4689 = vec2(0.0, a_startSpeed.x);\n        float _4692 = 0.3300000131130218505859375 * a_startLifeTime;\n        vec2 _4695 = vec2(_4692, a_startSpeed.x);\n        float _4698 = 0.660000026226043701171875 * a_startLifeTime;\n        vec2 _4701 = vec2(_4698, a_startSpeed.x);\n        vec2 _4706 = vec2(a_startLifeTime, a_startSpeed.x);\n        vec2 _4710 = vec2(0.0, a_startSpeed.y);\n        vec2 _4716 = vec2(_4692, a_startSpeed.y);\n        vec2 _4722 = vec2(_4698, a_startSpeed.y);\n        vec2 _4727 = vec2(a_startLifeTime, a_startSpeed.y);\n        vec2 _4731 = vec2(0.0, a_startSpeed.z);\n        vec2 _4737 = vec2(_4692, a_startSpeed.z);\n        vec2 _4743 = vec2(_4698, a_startSpeed.z);\n        vec2 _4748 = vec2(a_startLifeTime, a_startSpeed.z);\n        vec2 _18060 = vec2(0.0);\n        vec2 _18069 = vec2(0.0);\n        vec2 _18070 = vec2(0.0);\n        vec2 _18071 = vec2(0.0);\n        vec2 _18079 = vec2(0.0);\n        vec2 _18080 = vec2(0.0);\n        vec2 _18081 = vec2(0.0);\n        vec2 _18089 = vec2(0.0);\n        vec2 _18090 = vec2(0.0);\n        vec2 _18091 = vec2(0.0);\n        vec2 _18099 = vec2(0.0);\n        vec2 _18100 = vec2(0.0);\n        if (u_speedByLife[0].x > 0.0)\n        {\n            vec2 _17625 = _4689;\n            _17625.x = u_speedByLife[1].x * a_startLifeTime;\n            float _4776 = 1.0 - _6477;\n            vec2 _17627 = _17625;\n            _17627.y = ((_6477 * u_speedByLife[1].y) + (_4776 * u_speedByLife[1].z)) + a_startSpeed.x;\n            vec2 _17629 = _4710;\n            _17629.x = u_speedByLife[5].x * a_startLifeTime;\n            float _4802 = 1.0 - _6483;\n            vec2 _17631 = _17629;\n            _17631.y = ((_6483 * u_speedByLife[5].y) + (_4802 * u_speedByLife[5].z)) + a_startSpeed.y;\n            vec2 _17633 = _4731;\n            _17633.x = u_speedByLife[9].x * a_startLifeTime;\n            float _4828 = 1.0 - _6489;\n            vec2 _17635 = _17633;\n            _17635.y = ((_6489 * u_speedByLife[9].y) + (_4828 * u_speedByLife[9].z)) + a_startSpeed.z;\n            vec2 _17637 = _4695;\n            _17637.x = u_speedByLife[2].x * a_startLifeTime;\n            vec2 _17639 = _17637;\n            _17639.y = ((_6477 * u_speedByLife[2].y) + (_4776 * u_speedByLife[2].z)) + a_startSpeed.x;\n            vec2 _17641 = _4716;\n            _17641.x = u_speedByLife[6].x * a_startLifeTime;\n            vec2 _17643 = _17641;\n            _17643.y = ((_6483 * u_speedByLife[6].y) + (_4802 * u_speedByLife[6].z)) + a_startSpeed.y;\n            vec2 _17645 = _4737;\n            _17645.x = u_speedByLife[10].x * a_startLifeTime;\n            vec2 _17647 = _17645;\n            _17647.y = ((_6489 * u_speedByLife[10].y) + (_4828 * u_speedByLife[10].z)) + a_startSpeed.z;\n            vec2 _17649 = _4701;\n            _17649.x = u_speedByLife[3].x * a_startLifeTime;\n            vec2 _17651 = _17649;\n            _17651.y = ((_6477 * u_speedByLife[3].y) + (_4776 * u_speedByLife[3].z)) + a_startSpeed.x;\n            vec2 _17653 = _4722;\n            _17653.x = u_speedByLife[7].x * a_startLifeTime;\n            vec2 _17655 = _17653;\n            _17655.y = ((_6483 * u_speedByLife[7].y) + (_4802 * u_speedByLife[7].z)) + a_startSpeed.y;\n            vec2 _17657 = _4743;\n            _17657.x = u_speedByLife[11].x * a_startLifeTime;\n            vec2 _17659 = _17657;\n            _17659.y = ((_6489 * u_speedByLife[11].y) + (_4828 * u_speedByLife[11].z)) + a_startSpeed.z;\n            vec2 _17661 = _4706;\n            _17661.x = u_speedByLife[4].x * a_startLifeTime;\n            vec2 _17663 = _17661;\n            _17663.y = ((_6477 * u_speedByLife[4].y) + (_4776 * u_speedByLife[4].z)) + a_startSpeed.x;\n            vec2 _17665 = _4727;\n            _17665.x = u_speedByLife[8].x * a_startLifeTime;\n            vec2 _17667 = _17665;\n            _17667.y = ((_6483 * u_speedByLife[8].y) + (_4802 * u_speedByLife[8].z)) + a_startSpeed.y;\n            vec2 _17669 = _4748;\n            _17669.x = u_speedByLife[12].x * a_startLifeTime;\n            vec2 _17671 = _17669;\n            _17671.y = ((_6489 * u_speedByLife[12].y) + (_4828 * u_speedByLife[12].z)) + a_startSpeed.z;\n            _18100 = _17671;\n            _18099 = _17667;\n            _18091 = _17663;\n            _18090 = _17659;\n            _18089 = _17655;\n            _18081 = _17651;\n            _18080 = _17647;\n            _18079 = _17643;\n            _18071 = _17639;\n            _18070 = _17635;\n            _18069 = _17631;\n            _18060 = _17627;\n        }\n        else\n        {\n            _18100 = _4748;\n            _18099 = _4727;\n            _18091 = _4706;\n            _18090 = _4743;\n            _18089 = _4722;\n            _18081 = _4701;\n            _18080 = _4737;\n            _18079 = _4716;\n            _18071 = _4695;\n            _18070 = _4731;\n            _18069 = _4710;\n            _18060 = _4689;\n        }\n        vec2 _18181 = vec2(0.0);\n        vec2 _18185 = vec2(0.0);\n        vec2 _18189 = vec2(0.0);\n        vec2 _18193 = vec2(0.0);\n        vec2 _18200 = vec2(0.0);\n        vec2 _18208 = vec2(0.0);\n        vec2 _18216 = vec2(0.0);\n        vec2 _18224 = vec2(0.0);\n        vec2 _18235 = vec2(0.0);\n        vec2 _18247 = vec2(0.0);\n        vec2 _18259 = vec2(0.0);\n        vec2 _18271 = vec2(0.0);\n        if (u_speedLimitByLife[0].x > 0.0)\n        {\n            vec2 _18182 = vec2(0.0);\n            vec2 _18186 = vec2(0.0);\n            vec2 _18190 = vec2(0.0);\n            vec2 _18194 = vec2(0.0);\n            vec2 _18201 = vec2(0.0);\n            vec2 _18209 = vec2(0.0);\n            vec2 _18217 = vec2(0.0);\n            vec2 _18225 = vec2(0.0);\n            vec2 _18236 = vec2(0.0);\n            vec2 _18248 = vec2(0.0);\n            vec2 _18260 = vec2(0.0);\n            vec2 _18272 = vec2(0.0);\n            if (u_speedLimitByLife[0].z > 0.0)\n            {\n                float _4865 = 1.0 - _6477;\n                float _4881 = 1.0 - _6483;\n                float _4897 = 1.0 - _6489;\n                float _6515 = a_startLifeTime * 5.0;\n                float _6520 = a_startLifeTime * 15.00000095367431640625;\n                float _6525 = a_startLifeTime * 50.0;\n                float _6530 = abs(_18060.y);\n                float _6544 = (((((_6477 * u_speedLimitByLife[1].y) + (_4865 * u_speedLimitByLife[1].z)) + ((_6477 * u_speedLimitByLife[2].y) + (_4865 * u_speedLimitByLife[2].z))) + ((_6477 * u_speedLimitByLife[3].y) + (_4865 * u_speedLimitByLife[3].z))) + ((_6477 * u_speedLimitByLife[4].y) + (_4865 * u_speedLimitByLife[4].z))) * 0.25;\n                vec4 _18130 = vec4(0.0);\n                if (_6530 > _6544)\n                {\n                    float _6557 = _6530 - _6544;\n                    float _6559 = 1.0 - u_speedLimitByLife[0].y;\n                    vec4 _17829 = _20261;\n                    _17829.x = (_6544 + (_6557 * pow(_6559, 1.0))) / _6530;\n                    vec4 _17831 = _17829;\n                    _17831.y = (_6544 + (_6557 * pow(_6559, _6515))) / _6530;\n                    vec4 _17833 = _17831;\n                    _17833.z = (_6544 + (_6557 * pow(_6559, _6520))) / _6530;\n                    vec4 _17835 = _17833;\n                    _17835.w = (_6544 + (_6557 * pow(_6559, _6525))) / _6530;\n                    _18130 = _17835;\n                }\n                else\n                {\n                    _18130 = vec4(1.0);\n                }\n                vec2 _17838 = _18060;\n                _17838.x = 0.0;\n                vec2 _17842 = _17838;\n                _17842.y = _18060.y * _18130.x;\n                vec2 _17845 = _18071;\n                _17845.x = _4653;\n                vec2 _17849 = _17845;\n                _17849.y = _18071.y * _18130.y;\n                vec2 _17852 = _18081;\n                _17852.x = _4657;\n                vec2 _17856 = _17852;\n                _17856.y = _18081.y * _18130.z;\n                vec2 _17859 = _18091;\n                _17859.x = a_startLifeTime;\n                vec2 _17863 = _17859;\n                _17863.y = _18091.y * _18130.w;\n                float _6622 = abs(_18069.y);\n                float _6636 = (((((_6483 * u_speedLimitByLife[5].y) + (_4881 * u_speedLimitByLife[5].z)) + ((_6483 * u_speedLimitByLife[6].y) + (_4881 * u_speedLimitByLife[6].z))) + ((_6483 * u_speedLimitByLife[7].y) + (_4881 * u_speedLimitByLife[7].z))) + ((_6483 * u_speedLimitByLife[8].y) + (_4881 * u_speedLimitByLife[8].z))) * 0.25;\n                vec4 _18147 = vec4(0.0);\n                if (_6622 > _6636)\n                {\n                    float _6649 = _6622 - _6636;\n                    float _6651 = 1.0 - u_speedLimitByLife[0].y;\n                    vec4 _17865 = _20261;\n                    _17865.x = (_6636 + (_6649 * pow(_6651, 1.0))) / _6622;\n                    vec4 _17867 = _17865;\n                    _17867.y = (_6636 + (_6649 * pow(_6651, _6515))) / _6622;\n                    vec4 _17869 = _17867;\n                    _17869.z = (_6636 + (_6649 * pow(_6651, _6520))) / _6622;\n                    vec4 _17871 = _17869;\n                    _17871.w = (_6636 + (_6649 * pow(_6651, _6525))) / _6622;\n                    _18147 = _17871;\n                }\n                else\n                {\n                    _18147 = vec4(1.0);\n                }\n                vec2 _17874 = _18069;\n                _17874.x = 0.0;\n                vec2 _17878 = _17874;\n                _17878.y = _18069.y * _18147.x;\n                vec2 _17881 = _18079;\n                _17881.x = _4653;\n                vec2 _17885 = _17881;\n                _17885.y = _18079.y * _18147.y;\n                vec2 _17888 = _18089;\n                _17888.x = _4657;\n                vec2 _17892 = _17888;\n                _17892.y = _18089.y * _18147.z;\n                vec2 _17895 = _18099;\n                _17895.x = a_startLifeTime;\n                vec2 _17899 = _17895;\n                _17899.y = _18099.y * _18147.w;\n                float _6714 = abs(_18070.y);\n                float _6728 = (((((_6489 * u_speedLimitByLife[9].y) + (_4897 * u_speedLimitByLife[9].z)) + ((_6489 * u_speedLimitByLife[10].y) + (_4897 * u_speedLimitByLife[10].z))) + ((_6489 * u_speedLimitByLife[11].y) + (_4897 * u_speedLimitByLife[11].z))) + ((_6489 * u_speedLimitByLife[12].y) + (_4897 * u_speedLimitByLife[12].z))) * 0.25;\n                vec4 _18172 = vec4(0.0);\n                if (_6714 > _6728)\n                {\n                    float _6741 = _6714 - _6728;\n                    float _6743 = 1.0 - u_speedLimitByLife[0].y;\n                    vec4 _17901 = _20261;\n                    _17901.x = (_6728 + (_6741 * pow(_6743, 1.0))) / _6714;\n                    vec4 _17903 = _17901;\n                    _17903.y = (_6728 + (_6741 * pow(_6743, _6515))) / _6714;\n                    vec4 _17905 = _17903;\n                    _17905.z = (_6728 + (_6741 * pow(_6743, _6520))) / _6714;\n                    vec4 _17907 = _17905;\n                    _17907.w = (_6728 + (_6741 * pow(_6743, _6525))) / _6714;\n                    _18172 = _17907;\n                }\n                else\n                {\n                    _18172 = vec4(1.0);\n                }\n                vec2 _17910 = _18070;\n                _17910.x = 0.0;\n                vec2 _17914 = _17910;\n                _17914.y = _18070.y * _18172.x;\n                vec2 _17917 = _18080;\n                _17917.x = _4653;\n                vec2 _17921 = _17917;\n                _17921.y = _18080.y * _18172.y;\n                vec2 _17924 = _18090;\n                _17924.x = _4657;\n                vec2 _17928 = _17924;\n                _17928.y = _18090.y * _18172.z;\n                vec2 _17931 = _18100;\n                _17931.x = a_startLifeTime;\n                vec2 _17935 = _17931;\n                _17935.y = _18100.y * _18172.w;\n                _18272 = _17935;\n                _18260 = _17928;\n                _18248 = _17921;\n                _18236 = _17914;\n                _18225 = _17899;\n                _18217 = _17892;\n                _18209 = _17885;\n                _18201 = _17878;\n                _18194 = _17863;\n                _18190 = _17856;\n                _18186 = _17849;\n                _18182 = _17842;\n            }\n            else\n            {\n                float _5034 = 1.0 - _6471;\n                float _6806 = abs(length(vec3(_18060.y, _18069.y, _18070.y)));\n                float _6820 = (((((_6471 * u_speedLimitByLife[1].y) + (_5034 * u_speedLimitByLife[1].z)) + ((_6471 * u_speedLimitByLife[2].y) + (_5034 * u_speedLimitByLife[2].z))) + ((_6471 * u_speedLimitByLife[3].y) + (_5034 * u_speedLimitByLife[3].z))) + ((_6471 * u_speedLimitByLife[4].y) + (_5034 * u_speedLimitByLife[4].z))) * 0.25;\n                vec4 _18105 = vec4(0.0);\n                if (_6806 > _6820)\n                {\n                    float _6833 = _6806 - _6820;\n                    float _6835 = 1.0 - u_speedLimitByLife[0].y;\n                    vec4 _17713 = _20261;\n                    _17713.x = (_6820 + (_6833 * pow(_6835, 1.0))) / _6806;\n                    vec4 _17715 = _17713;\n                    _17715.y = (_6820 + (_6833 * pow(_6835, a_startLifeTime * 5.0))) / _6806;\n                    vec4 _17717 = _17715;\n                    _17717.z = (_6820 + (_6833 * pow(_6835, a_startLifeTime * 15.00000095367431640625))) / _6806;\n                    vec4 _17719 = _17717;\n                    _17719.w = (_6820 + (_6833 * pow(_6835, a_startLifeTime * 50.0))) / _6806;\n                    _18105 = _17719;\n                }\n                else\n                {\n                    _18105 = vec4(1.0);\n                }\n                vec2 _17722 = _18060;\n                _17722.x = 0.0;\n                vec2 _17726 = _17722;\n                _17726.y = _18060.y * _18105.x;\n                vec2 _17729 = _18069;\n                _17729.x = 0.0;\n                vec2 _17733 = _17729;\n                _17733.y = _18069.y * _18105.x;\n                vec2 _17736 = _18070;\n                _17736.x = 0.0;\n                vec2 _17740 = _17736;\n                _17740.y = _18070.y * _18105.x;\n                vec2 _17743 = _18071;\n                _17743.x = _4653;\n                vec2 _17747 = _17743;\n                _17747.y = _18071.y * _18105.y;\n                vec2 _17750 = _18079;\n                _17750.x = _4653;\n                vec2 _17754 = _17750;\n                _17754.y = _18079.y * _18105.y;\n                vec2 _17757 = _18080;\n                _17757.x = _4653;\n                vec2 _17761 = _17757;\n                _17761.y = _18080.y * _18105.y;\n                vec2 _17764 = _18081;\n                _17764.x = _4657;\n                vec2 _17768 = _17764;\n                _17768.y = _18081.y * _18105.z;\n                vec2 _17771 = _18089;\n                _17771.x = _4657;\n                vec2 _17775 = _17771;\n                _17775.y = _18089.y * _18105.z;\n                vec2 _17778 = _18090;\n                _17778.x = _4657;\n                vec2 _17782 = _17778;\n                _17782.y = _18090.y * _18105.z;\n                vec2 _17785 = _18091;\n                _17785.x = a_startLifeTime;\n                vec2 _17789 = _17785;\n                _17789.y = _18091.y * _18105.w;\n                vec2 _17792 = _18099;\n                _17792.x = a_startLifeTime;\n                vec2 _17796 = _17792;\n                _17796.y = _18099.y * _18105.w;\n                vec2 _17799 = _18100;\n                _17799.x = a_startLifeTime;\n                vec2 _17803 = _17799;\n                _17803.y = _18100.y * _18105.w;\n                _18272 = _17803;\n                _18260 = _17782;\n                _18248 = _17761;\n                _18236 = _17740;\n                _18225 = _17796;\n                _18217 = _17775;\n                _18209 = _17754;\n                _18201 = _17733;\n                _18194 = _17789;\n                _18190 = _17768;\n                _18186 = _17747;\n                _18182 = _17726;\n            }\n            _18271 = _18272;\n            _18259 = _18260;\n            _18247 = _18248;\n            _18235 = _18236;\n            _18224 = _18225;\n            _18216 = _18217;\n            _18208 = _18209;\n            _18200 = _18201;\n            _18193 = _18194;\n            _18189 = _18190;\n            _18185 = _18186;\n            _18181 = _18182;\n        }\n        else\n        {\n            _18271 = _18100;\n            _18259 = _18090;\n            _18247 = _18080;\n            _18235 = _18070;\n            _18224 = _18099;\n            _18216 = _18089;\n            _18208 = _18079;\n            _18200 = _18069;\n            _18193 = _18091;\n            _18189 = _18081;\n            _18185 = _18071;\n            _18181 = _18060;\n        }\n        bool _6891 = _18185.x >= _12444;\n        float _13677 = 0.0;\n        if (_6891)\n        {\n            _13677 = mix(_18181.y, _18185.y, (_12444 - _18181.x) / (_18185.x - _18181.x));\n        }\n        else\n        {\n            _13677 = _12468;\n        }\n        bool _20267 = _6891 ? false : true;\n        bool _16274 = false;\n        float _16275 = 0.0;\n        if (_20267)\n        {\n            bool _16258 = _18189.x >= _12444;\n            float _16272 = 0.0;\n            if (_16258)\n            {\n                _16272 = mix(_18185.y, _18189.y, (_12444 - _18185.x) / (_18189.x - _18185.x));\n            }\n            else\n            {\n                _16272 = _13677;\n            }\n            _16274 = _16258 ? false : _20267;\n            _16275 = _16272;\n        }\n        else\n        {\n            _16274 = _20267;\n            _16275 = _13677;\n        }\n        float _16306 = 0.0;\n        if (_16274)\n        {\n            float _16303 = 0.0;\n            if (_18193.x >= _12444)\n            {\n                _16303 = mix(_18189.y, _18193.y, (_12444 - _18189.x) / (_18193.x - _18189.x));\n            }\n            else\n            {\n                _16303 = _16275;\n            }\n            _16306 = _16303;\n        }\n        else\n        {\n            _16306 = _16275;\n        }\n        bool _6952 = _18208.x >= _12444;\n        float _13681 = 0.0;\n        if (_6952)\n        {\n            _13681 = mix(_18200.y, _18208.y, (_12444 - _18200.x) / (_18208.x - _18200.x));\n        }\n        else\n        {\n            _13681 = _12468;\n        }\n        bool _20269 = _6952 ? false : true;\n        bool _16212 = false;\n        float _16213 = 0.0;\n        if (_20269)\n        {\n            bool _16196 = _18216.x >= _12444;\n            float _16210 = 0.0;\n            if (_16196)\n            {\n                _16210 = mix(_18208.y, _18216.y, (_12444 - _18208.x) / (_18216.x - _18208.x));\n            }\n            else\n            {\n                _16210 = _13681;\n            }\n            _16212 = _16196 ? false : _20269;\n            _16213 = _16210;\n        }\n        else\n        {\n            _16212 = _20269;\n            _16213 = _13681;\n        }\n        float _16244 = 0.0;\n        if (_16212)\n        {\n            float _16241 = 0.0;\n            if (_18224.x >= _12444)\n            {\n                _16241 = mix(_18216.y, _18224.y, (_12444 - _18216.x) / (_18224.x - _18216.x));\n            }\n            else\n            {\n                _16241 = _16213;\n            }\n            _16244 = _16241;\n        }\n        else\n        {\n            _16244 = _16213;\n        }\n        bool _7013 = _18247.x >= _12444;\n        float _13687 = 0.0;\n        if (_7013)\n        {\n            _13687 = mix(_18235.y, _18247.y, (_12444 - _18235.x) / (_18247.x - _18235.x));\n        }\n        else\n        {\n            _13687 = _12468;\n        }\n        bool _20271 = _7013 ? false : true;\n        bool _16150 = false;\n        float _16151 = 0.0;\n        if (_20271)\n        {\n            bool _16134 = _18259.x >= _12444;\n            float _16148 = 0.0;\n            if (_16134)\n            {\n                _16148 = mix(_18247.y, _18259.y, (_12444 - _18247.x) / (_18259.x - _18247.x));\n            }\n            else\n            {\n                _16148 = _13687;\n            }\n            _16150 = _16134 ? false : _20271;\n            _16151 = _16148;\n        }\n        else\n        {\n            _16150 = _20271;\n            _16151 = _13687;\n        }\n        float _16182 = 0.0;\n        if (_16150)\n        {\n            float _16179 = 0.0;\n            if (_18271.x >= _12444)\n            {\n                _16179 = mix(_18259.y, _18271.y, (_12444 - _18259.x) / (_18271.x - _18259.x));\n            }\n            else\n            {\n                _16179 = _16151;\n            }\n            _16182 = _16179;\n        }\n        else\n        {\n            _16182 = _16151;\n        }\n        float _5135 = _16306 * (-1.0);\n        vec3 _11978 = vec3(_16306, _16244, _16182);\n        _11978.x = _5135;\n        float _13689 = 0.0;\n        if (_6891)\n        {\n            float _7087 = _12444 - _18181.x;\n            _13689 = ((_18181.y + mix(_18181.y, _18185.y, _7087 / (_18185.x - _18181.x))) * 0.5) * _7087;\n        }\n        else\n        {\n            _13689 = ((_18181.y + _18185.y) * 0.5) * (_18185.x - _18181.x);\n        }\n        bool _16075 = false;\n        float _16076 = 0.0;\n        if (_20267)\n        {\n            bool _16050 = _18189.x >= _12444;\n            float _16073 = 0.0;\n            if (_16050)\n            {\n                float _16061 = _12444 - _18185.x;\n                _16073 = _13689 + (((_18185.y + mix(_18185.y, _18189.y, _16061 / (_18189.x - _18185.x))) * 0.5) * _16061);\n            }\n            else\n            {\n                _16073 = _13689 + (((_18185.y + _18189.y) * 0.5) * (_18189.x - _18185.x));\n            }\n            _16075 = _16050 ? false : _20267;\n            _16076 = _16073;\n        }\n        else\n        {\n            _16075 = _20267;\n            _16076 = _13689;\n        }\n        float _16120 = 0.0;\n        if (_16075)\n        {\n            float _16117 = 0.0;\n            if (_18193.x >= _12444)\n            {\n                float _16105 = _12444 - _18189.x;\n                _16117 = _16076 + (((_18189.y + mix(_18189.y, _18193.y, _16105 / (_18193.x - _18189.x))) * 0.5) * _16105);\n            }\n            else\n            {\n                _16117 = _16076 + (((_18189.y + _18193.y) * 0.5) * (_18193.x - _18189.x));\n            }\n            _16120 = _16117;\n        }\n        else\n        {\n            _16120 = _16076;\n        }\n        float _13691 = 0.0;\n        if (_6952)\n        {\n            float _7172 = _12444 - _18200.x;\n            _13691 = ((_18200.y + mix(_18200.y, _18208.y, _7172 / (_18208.x - _18200.x))) * 0.5) * _7172;\n        }\n        else\n        {\n            _13691 = ((_18200.y + _18208.y) * 0.5) * (_18208.x - _18200.x);\n        }\n        bool _15987 = false;\n        float _15988 = 0.0;\n        if (_20269)\n        {\n            bool _15962 = _18216.x >= _12444;\n            float _15985 = 0.0;\n            if (_15962)\n            {\n                float _15973 = _12444 - _18208.x;\n                _15985 = _13691 + (((_18208.y + mix(_18208.y, _18216.y, _15973 / (_18216.x - _18208.x))) * 0.5) * _15973);\n            }\n            else\n            {\n                _15985 = _13691 + (((_18208.y + _18216.y) * 0.5) * (_18216.x - _18208.x));\n            }\n            _15987 = _15962 ? false : _20269;\n            _15988 = _15985;\n        }\n        else\n        {\n            _15987 = _20269;\n            _15988 = _13691;\n        }\n        float _16032 = 0.0;\n        if (_15987)\n        {\n            float _16029 = 0.0;\n            if (_18224.x >= _12444)\n            {\n                float _16017 = _12444 - _18216.x;\n                _16029 = _15988 + (((_18216.y + mix(_18216.y, _18224.y, _16017 / (_18224.x - _18216.x))) * 0.5) * _16017);\n            }\n            else\n            {\n                _16029 = _15988 + (((_18216.y + _18224.y) * 0.5) * (_18224.x - _18216.x));\n            }\n            _16032 = _16029;\n        }\n        else\n        {\n            _16032 = _15988;\n        }\n        float _13693 = 0.0;\n        if (_7013)\n        {\n            float _7257 = _12444 - _18235.x;\n            _13693 = ((_18235.y + mix(_18235.y, _18247.y, _7257 / (_18247.x - _18235.x))) * 0.5) * _7257;\n        }\n        else\n        {\n            _13693 = ((_18235.y + _18247.y) * 0.5) * (_18247.x - _18235.x);\n        }\n        bool _15899 = false;\n        float _15900 = 0.0;\n        if (_20271)\n        {\n            bool _15874 = _18259.x >= _12444;\n            float _15897 = 0.0;\n            if (_15874)\n            {\n                float _15885 = _12444 - _18247.x;\n                _15897 = _13693 + (((_18247.y + mix(_18247.y, _18259.y, _15885 / (_18259.x - _18247.x))) * 0.5) * _15885);\n            }\n            else\n            {\n                _15897 = _13693 + (((_18247.y + _18259.y) * 0.5) * (_18259.x - _18247.x));\n            }\n            _15899 = _15874 ? false : _20271;\n            _15900 = _15897;\n        }\n        else\n        {\n            _15899 = _20271;\n            _15900 = _13693;\n        }\n        float _15944 = 0.0;\n        if (_15899)\n        {\n            float _15941 = 0.0;\n            if (_18271.x >= _12444)\n            {\n                float _15929 = _12444 - _18259.x;\n                _15941 = _15900 + (((_18259.y + mix(_18259.y, _18271.y, _15929 / (_18271.x - _18259.x))) * 0.5) * _15929);\n            }\n            else\n            {\n                _15941 = _15900 + (((_18259.y + _18271.y) * 0.5) * (_18271.x - _18259.x));\n            }\n            _15944 = _15941;\n        }\n        else\n        {\n            _15944 = _15900;\n        }\n        vec3 _11999 = _20262;\n        _11999.x = _16120 * (-1.7000000476837158203125);\n        vec3 _12002 = _11999;\n        _12002.y = _16032 * 1.7000000476837158203125;\n        vec3 _12005 = _12002;\n        _12005.z = _15944 * 1.7000000476837158203125;\n        vec3 _5186 = a_subCenter + _12005;\n        vec3 _12913 = vec3(0.0);\n        if (u_sizeByLife[0].x > 0.0)\n        {\n            float _5209 = u_sizeByLife[1].x * a_startLifeTime;\n            float _5217 = 1.0 - _6477;\n            float _5232 = u_sizeByLife[5].x * a_startLifeTime;\n            float _5255 = u_sizeByLife[9].x * a_startLifeTime;\n            float _15730 = u_sizeByLife[2].x * a_startLifeTime;\n            float _15737 = (_6477 * u_sizeByLife[2].y) + (_5217 * u_sizeByLife[2].z);\n            float _15743 = u_sizeByLife[6].x * a_startLifeTime;\n            float _15750 = (_6477 * u_sizeByLife[6].y) + (_5217 * u_sizeByLife[6].z);\n            float _15756 = u_sizeByLife[10].x * a_startLifeTime;\n            float _15763 = (_6477 * u_sizeByLife[10].y) + (_5217 * u_sizeByLife[10].z);\n            float _15776 = u_sizeByLife[3].x * a_startLifeTime;\n            float _15783 = (_6477 * u_sizeByLife[3].y) + (_5217 * u_sizeByLife[3].z);\n            float _15789 = u_sizeByLife[7].x * a_startLifeTime;\n            float _15796 = (_6477 * u_sizeByLife[7].y) + (_5217 * u_sizeByLife[7].z);\n            float _15802 = u_sizeByLife[11].x * a_startLifeTime;\n            float _15809 = (_6477 * u_sizeByLife[11].y) + (_5217 * u_sizeByLife[11].z);\n            float _15822 = u_sizeByLife[4].x * a_startLifeTime;\n            float _15835 = u_sizeByLife[8].x * a_startLifeTime;\n            float _15848 = u_sizeByLife[12].x * a_startLifeTime;\n            bool _7335 = _15730 >= _12444;\n            float _13719 = 0.0;\n            if (_7335)\n            {\n                _13719 = mix((_6477 * u_sizeByLife[1].y) + (_5217 * u_sizeByLife[1].z), _15737, (_12444 - _5209) / (_15730 - _5209));\n            }\n            else\n            {\n                _13719 = _12468;\n            }\n            bool _20279 = _7335 ? false : true;\n            bool _15686 = false;\n            float _15687 = 0.0;\n            if (_20279)\n            {\n                bool _15670 = _15776 >= _12444;\n                float _15684 = 0.0;\n                if (_15670)\n                {\n                    _15684 = mix(_15737, _15783, (_12444 - _15730) / (_15776 - _15730));\n                }\n                else\n                {\n                    _15684 = _13719;\n                }\n                _15686 = _15670 ? false : _20279;\n                _15687 = _15684;\n            }\n            else\n            {\n                _15686 = _20279;\n                _15687 = _13719;\n            }\n            float _15718 = 0.0;\n            if (_15686)\n            {\n                float _15715 = 0.0;\n                if (_15822 >= _12444)\n                {\n                    _15715 = mix(_15783, (_6477 * u_sizeByLife[4].y) + (_5217 * u_sizeByLife[4].z), (_12444 - _15776) / (_15822 - _15776));\n                }\n                else\n                {\n                    _15715 = _15687;\n                }\n                _15718 = _15715;\n            }\n            else\n            {\n                _15718 = _15687;\n            }\n            bool _7396 = _15743 >= _12444;\n            float _13735 = 0.0;\n            if (_7396)\n            {\n                _13735 = mix((_6477 * u_sizeByLife[5].y) + (_5217 * u_sizeByLife[5].z), _15750, (_12444 - _5232) / (_15743 - _5232));\n            }\n            else\n            {\n                _13735 = _12468;\n            }\n            bool _20281 = _7396 ? false : true;\n            bool _15624 = false;\n            float _15625 = 0.0;\n            if (_20281)\n            {\n                bool _15608 = _15789 >= _12444;\n                float _15622 = 0.0;\n                if (_15608)\n                {\n                    _15622 = mix(_15750, _15796, (_12444 - _15743) / (_15789 - _15743));\n                }\n                else\n                {\n                    _15622 = _13735;\n                }\n                _15624 = _15608 ? false : _20281;\n                _15625 = _15622;\n            }\n            else\n            {\n                _15624 = _20281;\n                _15625 = _13735;\n            }\n            float _15656 = 0.0;\n            if (_15624)\n            {\n                float _15653 = 0.0;\n                if (_15835 >= _12444)\n                {\n                    _15653 = mix(_15796, (_6477 * u_sizeByLife[8].y) + (_5217 * u_sizeByLife[8].z), (_12444 - _15789) / (_15835 - _15789));\n                }\n                else\n                {\n                    _15653 = _15625;\n                }\n                _15656 = _15653;\n            }\n            else\n            {\n                _15656 = _15625;\n            }\n            bool _7457 = _15756 >= _12444;\n            float _13753 = 0.0;\n            if (_7457)\n            {\n                _13753 = mix((_6477 * u_sizeByLife[9].y) + (_5217 * u_sizeByLife[9].z), _15763, (_12444 - _5255) / (_15756 - _5255));\n            }\n            else\n            {\n                _13753 = _12468;\n            }\n            bool _20283 = _7457 ? false : true;\n            bool _15562 = false;\n            float _15563 = 0.0;\n            if (_20283)\n            {\n                bool _15546 = _15802 >= _12444;\n                float _15560 = 0.0;\n                if (_15546)\n                {\n                    _15560 = mix(_15763, _15809, (_12444 - _15756) / (_15802 - _15756));\n                }\n                else\n                {\n                    _15560 = _13753;\n                }\n                _15562 = _15546 ? false : _20283;\n                _15563 = _15560;\n            }\n            else\n            {\n                _15562 = _20283;\n                _15563 = _13753;\n            }\n            float _15594 = 0.0;\n            if (_15562)\n            {\n                float _15591 = 0.0;\n                if (_15848 >= _12444)\n                {\n                    _15591 = mix(_15809, (_6477 * u_sizeByLife[12].y) + (_5217 * u_sizeByLife[12].z), (_12444 - _15802) / (_15848 - _15802));\n                }\n                else\n                {\n                    _15591 = _15563;\n                }\n                _15594 = _15591;\n            }\n            else\n            {\n                _15594 = _15563;\n            }\n            vec3 _12914 = vec3(0.0);\n            if (u_renderer[0].x == 1.0)\n            {\n                vec3 _12029 = _20262;\n                _12029.x = a_startSize.x * _15656;\n                vec3 _12032 = _12029;\n                _12032.y = a_startSize.y * _15718;\n                vec3 _12035 = _12032;\n                _12035.z = a_startSize.z * _15594;\n                _12914 = _12035;\n            }\n            else\n            {\n                vec3 _12038 = _20262;\n                _12038.x = a_startSize.x * _15718;\n                vec3 _12041 = _12038;\n                _12041.y = a_startSize.y * _15656;\n                vec3 _12044 = _12041;\n                _12044.z = a_startSize.z * _15594;\n                _12914 = _12044;\n            }\n            _12913 = _12914;\n        }\n        else\n        {\n            _12913 = a_startSize;\n        }\n        vec3 _13054 = vec3(0.0);\n        if (u_rotationByLife[0].x > 0.0)\n        {\n            float _7490 = fract(sin(a_randomSeed + 0.100000001490116119384765625) * 43758.546875);\n            float _5362 = u_rotationByLife[1].x * a_startLifeTime;\n            float _5370 = 1.0 - _7490;\n            float _5375 = radians((_7490 * u_rotationByLife[1].y) + (_5370 * u_rotationByLife[1].z));\n            float _5386 = u_rotationByLife[5].x * a_startLifeTime;\n            float _5399 = radians((_7490 * u_rotationByLife[5].y) + (_5370 * u_rotationByLife[5].z));\n            float _5410 = u_rotationByLife[9].x * a_startLifeTime;\n            float _5423 = radians((_7490 * u_rotationByLife[9].y) + (_5370 * u_rotationByLife[9].z));\n            float _15397 = u_rotationByLife[2].x * a_startLifeTime;\n            float _15405 = radians((_7490 * u_rotationByLife[2].y) + (_5370 * u_rotationByLife[2].z));\n            float _15411 = u_rotationByLife[6].x * a_startLifeTime;\n            float _15419 = radians((_7490 * u_rotationByLife[6].y) + (_5370 * u_rotationByLife[6].z));\n            float _15425 = u_rotationByLife[10].x * a_startLifeTime;\n            float _15433 = radians((_7490 * u_rotationByLife[10].y) + (_5370 * u_rotationByLife[10].z));\n            float _15446 = u_rotationByLife[3].x * a_startLifeTime;\n            float _15454 = radians((_7490 * u_rotationByLife[3].y) + (_5370 * u_rotationByLife[3].z));\n            float _15460 = u_rotationByLife[7].x * a_startLifeTime;\n            float _15468 = radians((_7490 * u_rotationByLife[7].y) + (_5370 * u_rotationByLife[7].z));\n            float _15474 = u_rotationByLife[11].x * a_startLifeTime;\n            float _15482 = radians((_7490 * u_rotationByLife[11].y) + (_5370 * u_rotationByLife[11].z));\n            float _15495 = u_rotationByLife[4].x * a_startLifeTime;\n            float _15503 = radians((_7490 * u_rotationByLife[4].y) + (_5370 * u_rotationByLife[4].z));\n            float _15509 = u_rotationByLife[8].x * a_startLifeTime;\n            float _15517 = radians((_7490 * u_rotationByLife[8].y) + (_5370 * u_rotationByLife[8].z));\n            float _15523 = u_rotationByLife[12].x * a_startLifeTime;\n            float _15531 = radians((_7490 * u_rotationByLife[12].y) + (_5370 * u_rotationByLife[12].z));\n            bool _7531 = _15425 >= _12444;\n            float _13773 = 0.0;\n            if (_7531)\n            {\n                float _7537 = _12444 - _5410;\n                _13773 = ((_5423 + mix(_5423, _15433, _7537 / (_15425 - _5410))) * 0.5) * _7537;\n            }\n            else\n            {\n                _13773 = ((_5423 + _15433) * 0.5) * (_15425 - _5410);\n            }\n            bool _20285 = _7531 ? false : true;\n            bool _15340 = false;\n            float _15341 = 0.0;\n            if (_20285)\n            {\n                bool _15315 = _15474 >= _12444;\n                float _15338 = 0.0;\n                if (_15315)\n                {\n                    float _15326 = _12444 - _15425;\n                    _15338 = _13773 + (((_15433 + mix(_15433, _15482, _15326 / (_15474 - _15425))) * 0.5) * _15326);\n                }\n                else\n                {\n                    _15338 = _13773 + (((_15433 + _15482) * 0.5) * (_15474 - _15425));\n                }\n                _15340 = _15315 ? false : _20285;\n                _15341 = _15338;\n            }\n            else\n            {\n                _15340 = _20285;\n                _15341 = _13773;\n            }\n            float _15385 = 0.0;\n            if (_15340)\n            {\n                float _15382 = 0.0;\n                if (_15523 >= _12444)\n                {\n                    float _15370 = _12444 - _15474;\n                    _15382 = _15341 + (((_15482 + mix(_15482, _15531, _15370 / (_15523 - _15474))) * 0.5) * _15370);\n                }\n                else\n                {\n                    _15382 = _15341 + (((_15482 + _15531) * 0.5) * (_15523 - _15474));\n                }\n                _15385 = _15382;\n            }\n            else\n            {\n                _15385 = _15341;\n            }\n            vec3 _13086 = vec3(0.0);\n            if (u_rotationByLife[0].z > 0.0)\n            {\n                vec3 _13089 = vec3(0.0);\n                if (u_renderer[0].x == 0.0)\n                {\n                    bool _7616 = _15397 >= _12444;\n                    float _13779 = 0.0;\n                    if (_7616)\n                    {\n                        float _7622 = _12444 - _5362;\n                        _13779 = ((_5375 + mix(_5375, _15405, _7622 / (_15397 - _5362))) * 0.5) * _7622;\n                    }\n                    else\n                    {\n                        _13779 = ((_5375 + _15405) * 0.5) * (_15397 - _5362);\n                    }\n                    bool _20289 = _7616 ? false : true;\n                    bool _15164 = false;\n                    float _15165 = 0.0;\n                    if (_20289)\n                    {\n                        bool _15139 = _15446 >= _12444;\n                        float _15162 = 0.0;\n                        if (_15139)\n                        {\n                            float _15150 = _12444 - _15397;\n                            _15162 = _13779 + (((_15405 + mix(_15405, _15454, _15150 / (_15446 - _15397))) * 0.5) * _15150);\n                        }\n                        else\n                        {\n                            _15162 = _13779 + (((_15405 + _15454) * 0.5) * (_15446 - _15397));\n                        }\n                        _15164 = _15139 ? false : _20289;\n                        _15165 = _15162;\n                    }\n                    else\n                    {\n                        _15164 = _20289;\n                        _15165 = _13779;\n                    }\n                    float _15209 = 0.0;\n                    if (_15164)\n                    {\n                        float _15206 = 0.0;\n                        if (_15495 >= _12444)\n                        {\n                            float _15194 = _12444 - _15446;\n                            _15206 = _15165 + (((_15454 + mix(_15454, _15503, _15194 / (_15495 - _15446))) * 0.5) * _15194);\n                        }\n                        else\n                        {\n                            _15206 = _15165 + (((_15454 + _15503) * 0.5) * (_15495 - _15446));\n                        }\n                        _15209 = _15206;\n                    }\n                    else\n                    {\n                        _15209 = _15165;\n                    }\n                    bool _7701 = _15411 >= _12444;\n                    float _13781 = 0.0;\n                    if (_7701)\n                    {\n                        float _7707 = _12444 - _5386;\n                        _13781 = ((_5399 + mix(_5399, _15419, _7707 / (_15411 - _5386))) * 0.5) * _7707;\n                    }\n                    else\n                    {\n                        _13781 = ((_5399 + _15419) * 0.5) * (_15411 - _5386);\n                    }\n                    bool _20291 = _7701 ? false : true;\n                    bool _15076 = false;\n                    float _15077 = 0.0;\n                    if (_20291)\n                    {\n                        bool _15051 = _15460 >= _12444;\n                        float _15074 = 0.0;\n                        if (_15051)\n                        {\n                            float _15062 = _12444 - _15411;\n                            _15074 = _13781 + (((_15419 + mix(_15419, _15468, _15062 / (_15460 - _15411))) * 0.5) * _15062);\n                        }\n                        else\n                        {\n                            _15074 = _13781 + (((_15419 + _15468) * 0.5) * (_15460 - _15411));\n                        }\n                        _15076 = _15051 ? false : _20291;\n                        _15077 = _15074;\n                    }\n                    else\n                    {\n                        _15076 = _20291;\n                        _15077 = _13781;\n                    }\n                    float _15121 = 0.0;\n                    if (_15076)\n                    {\n                        float _15118 = 0.0;\n                        if (_15509 >= _12444)\n                        {\n                            float _15106 = _12444 - _15460;\n                            _15118 = _15077 + (((_15468 + mix(_15468, _15517, _15106 / (_15509 - _15460))) * 0.5) * _15106);\n                        }\n                        else\n                        {\n                            _15118 = _15077 + (((_15468 + _15517) * 0.5) * (_15509 - _15460));\n                        }\n                        _15121 = _15118;\n                    }\n                    else\n                    {\n                        _15121 = _15077;\n                    }\n                    _13089 = vec3(_15209, _15121, _15385);\n                }\n                else\n                {\n                    _13089 = vec3(0.0);\n                }\n                vec3 _13088 = vec3(0.0);\n                if ((u_renderer[0].x == 2.0) || (u_renderer[0].x == 3.0))\n                {\n                    _13088 = vec3(0.0, 0.0, _15385);\n                }\n                else\n                {\n                    _13088 = _13089;\n                }\n                vec3 _13087 = vec3(0.0);\n                if (u_renderer[0].x == 4.0)\n                {\n                    bool _7786 = _15397 >= _12444;\n                    float _13785 = 0.0;\n                    if (_7786)\n                    {\n                        float _7792 = _12444 - _5362;\n                        _13785 = ((_5375 + mix(_5375, _15405, _7792 / (_15397 - _5362))) * 0.5) * _7792;\n                    }\n                    else\n                    {\n                        _13785 = ((_5375 + _15405) * 0.5) * (_15397 - _5362);\n                    }\n                    bool _20293 = _7786 ? false : true;\n                    bool _14988 = false;\n                    float _14989 = 0.0;\n                    if (_20293)\n                    {\n                        bool _14963 = _15446 >= _12444;\n                        float _14986 = 0.0;\n                        if (_14963)\n                        {\n                            float _14974 = _12444 - _15397;\n                            _14986 = _13785 + (((_15405 + mix(_15405, _15454, _14974 / (_15446 - _15397))) * 0.5) * _14974);\n                        }\n                        else\n                        {\n                            _14986 = _13785 + (((_15405 + _15454) * 0.5) * (_15446 - _15397));\n                        }\n                        _14988 = _14963 ? false : _20293;\n                        _14989 = _14986;\n                    }\n                    else\n                    {\n                        _14988 = _20293;\n                        _14989 = _13785;\n                    }\n                    float _15033 = 0.0;\n                    if (_14988)\n                    {\n                        float _15030 = 0.0;\n                        if (_15495 >= _12444)\n                        {\n                            float _15018 = _12444 - _15446;\n                            _15030 = _14989 + (((_15454 + mix(_15454, _15503, _15018 / (_15495 - _15446))) * 0.5) * _15018);\n                        }\n                        else\n                        {\n                            _15030 = _14989 + (((_15454 + _15503) * 0.5) * (_15495 - _15446));\n                        }\n                        _15033 = _15030;\n                    }\n                    else\n                    {\n                        _15033 = _14989;\n                    }\n                    bool _7871 = _15411 >= _12444;\n                    float _13787 = 0.0;\n                    if (_7871)\n                    {\n                        float _7877 = _12444 - _5386;\n                        _13787 = ((_5399 + mix(_5399, _15419, _7877 / (_15411 - _5386))) * 0.5) * _7877;\n                    }\n                    else\n                    {\n                        _13787 = ((_5399 + _15419) * 0.5) * (_15411 - _5386);\n                    }\n                    bool _20295 = _7871 ? false : true;\n                    bool _14900 = false;\n                    float _14901 = 0.0;\n                    if (_20295)\n                    {\n                        bool _14875 = _15460 >= _12444;\n                        float _14898 = 0.0;\n                        if (_14875)\n                        {\n                            float _14886 = _12444 - _15411;\n                            _14898 = _13787 + (((_15419 + mix(_15419, _15468, _14886 / (_15460 - _15411))) * 0.5) * _14886);\n                        }\n                        else\n                        {\n                            _14898 = _13787 + (((_15419 + _15468) * 0.5) * (_15460 - _15411));\n                        }\n                        _14900 = _14875 ? false : _20295;\n                        _14901 = _14898;\n                    }\n                    else\n                    {\n                        _14900 = _20295;\n                        _14901 = _13787;\n                    }\n                    float _14945 = 0.0;\n                    if (_14900)\n                    {\n                        float _14942 = 0.0;\n                        if (_15509 >= _12444)\n                        {\n                            float _14930 = _12444 - _15460;\n                            _14942 = _14901 + (((_15468 + mix(_15468, _15517, _14930 / (_15509 - _15460))) * 0.5) * _14930);\n                        }\n                        else\n                        {\n                            _14942 = _14901 + (((_15468 + _15517) * 0.5) * (_15509 - _15460));\n                        }\n                        _14945 = _14942;\n                    }\n                    else\n                    {\n                        _14945 = _14901;\n                    }\n                    _13087 = vec3(_15033, _14945, _15385);\n                }\n                else\n                {\n                    _13087 = _13088;\n                }\n                _13086 = _13087;\n            }\n            else\n            {\n                vec3 _13094 = vec3(0.0);\n                if (u_renderer[0].x == 4.0)\n                {\n                    vec3 _13095 = vec3(0.0);\n                    if (u_emitterShape == 1.0)\n                    {\n                        vec3 _13096 = vec3(0.0);\n                        if (u_common[1].w > 0.0)\n                        {\n                            _13096 = vec3(0.0, 0.0, (-1.0) * _15385);\n                        }\n                        else\n                        {\n                            bool _7956 = _15411 >= _12444;\n                            float _13775 = 0.0;\n                            if (_7956)\n                            {\n                                float _7962 = _12444 - _5386;\n                                _13775 = ((_5399 + mix(_5399, _15419, _7962 / (_15411 - _5386))) * 0.5) * _7962;\n                            }\n                            else\n                            {\n                                _13775 = ((_5399 + _15419) * 0.5) * (_15411 - _5386);\n                            }\n                            bool _20287 = _7956 ? false : true;\n                            bool _15252 = false;\n                            float _15253 = 0.0;\n                            if (_20287)\n                            {\n                                bool _15227 = _15460 >= _12444;\n                                float _15250 = 0.0;\n                                if (_15227)\n                                {\n                                    float _15238 = _12444 - _15411;\n                                    _15250 = _13775 + (((_15419 + mix(_15419, _15468, _15238 / (_15460 - _15411))) * 0.5) * _15238);\n                                }\n                                else\n                                {\n                                    _15250 = _13775 + (((_15419 + _15468) * 0.5) * (_15460 - _15411));\n                                }\n                                _15252 = _15227 ? false : _20287;\n                                _15253 = _15250;\n                            }\n                            else\n                            {\n                                _15252 = _20287;\n                                _15253 = _13775;\n                            }\n                            float _15297 = 0.0;\n                            if (_15252)\n                            {\n                                float _15294 = 0.0;\n                                if (_15509 >= _12444)\n                                {\n                                    float _15282 = _12444 - _15460;\n                                    _15294 = _15253 + (((_15468 + mix(_15468, _15517, _15282 / (_15509 - _15460))) * 0.5) * _15282);\n                                }\n                                else\n                                {\n                                    _15294 = _15253 + (((_15468 + _15517) * 0.5) * (_15509 - _15460));\n                                }\n                                _15297 = _15294;\n                            }\n                            else\n                            {\n                                _15297 = _15253;\n                            }\n                            _13096 = vec3(0.0, (-1.0) * _15297, 0.0);\n                        }\n                        _13095 = _13096;\n                    }\n                    else\n                    {\n                        _13095 = vec3(0.0, 0.0, _15385);\n                    }\n                    _13094 = _13095;\n                }\n                else\n                {\n                    _13094 = vec3(0.0);\n                }\n                vec3 _13093 = vec3(0.0);\n                if (((u_renderer[0].x == 0.0) || (u_renderer[0].x == 2.0)) || (u_renderer[0].x == 3.0))\n                {\n                    _13093 = vec3(0.0, 0.0, _15385);\n                }\n                else\n                {\n                    _13093 = _13094;\n                }\n                _13086 = _13093;\n            }\n            _13054 = _13086;\n        }\n        else\n        {\n            _13054 = vec3(0.0);\n        }\n        bool _5585 = u_renderer[0].x == 0.0;\n        mat4 _13037 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n        if (_5585)\n        {\n            mat4 _13038 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n            if (u_renderer[0].y == 1.0)\n            {\n                _13038 = _12869;\n            }\n            else\n            {\n                mat4 _13039 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n                if (u_renderer[0].y == 2.0)\n                {\n                    float _8066 = _6265 * _6272;\n                    _13039 = _12739 * (mat4(vec4(_6272 * _6279, 0.0, 0.0, 0.0), vec4(0.0, _6265 * _6279, 0.0, 0.0), vec4(0.0, 0.0, _8066, 0.0), vec4(0.0, 0.0, 0.0, _6279 * _8066)) * (1.0 / (_8066 * _6279)));\n                }\n                else\n                {\n                    mat4 _13040 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n                    if (u_renderer[0].y == 3.0)\n                    {\n                        vec3 _5624 = normalize(vec3(u_viewInverse[3].x, u_viewInverse[3].y, u_viewInverse[3].z) - (_12739 * vec4(_5186, 1.0)).xyz);\n                        vec3 _5628 = normalize(cross(vec3(0.0, 1.0, 0.0), _5624));\n                        mat4 _12107 = mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n                        _12107[0] = vec4(_5628, 0.0);\n                        mat4 _12109 = _12107;\n                        _12109[1] = vec4(normalize(cross(_5624, _5628)), 0.0);\n                        mat4 _12111 = _12109;\n                        _12111[2] = vec4(_5624, 0.0);\n                        mat4 _12117 = _12111;\n                        _12117[3] = vec4(_12739[3].x, _12739[3].y, _12739[3].z, _12739[3].w);\n                        _13040 = _12117;\n                    }\n                    else\n                    {\n                        vec3 _5668 = vec3(1.0) / (vec3(length(vec3(u_view[0].xyz)), length(vec3(u_view[1].xyz)), length(vec3(u_view[2].xyz))) + vec3(9.9999997473787516355514526367188e-06));\n                        mat4 _12123 = mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n                        _12123[0].x = _5668.x;\n                        mat4 _12126 = _12123;\n                        _12126[1].y = _5668.y;\n                        mat4 _12129 = _12126;\n                        _12129[2].z = _5668.z;\n                        mat4 _12131 = _12129;\n                        _12131[3].w = 1.0;\n                        mat4 _5674 = u_view * _12131;\n                        float _8431 = _5674[0].x;\n                        float _8433 = _5674[0].y;\n                        float _8435 = _5674[0].z;\n                        float _8437 = _5674[0].w;\n                        float _8439 = _5674[1].x;\n                        float _8441 = _5674[1].y;\n                        float _8443 = _5674[1].z;\n                        float _8445 = _5674[1].w;\n                        float _8447 = _5674[2].x;\n                        float _8449 = _5674[2].y;\n                        float _8451 = _5674[2].z;\n                        float _8453 = _5674[2].w;\n                        float _8455 = _5674[3].x;\n                        float _8457 = _5674[3].y;\n                        float _8459 = _5674[3].z;\n                        float _8461 = _5674[3].w;\n                        float _8468 = (_8431 * _8441) - (_8433 * _8439);\n                        float _8475 = (_8431 * _8443) - (_8435 * _8439);\n                        float _8482 = (_8431 * _8445) - (_8437 * _8439);\n                        float _8489 = (_8433 * _8443) - (_8435 * _8441);\n                        float _8496 = (_8433 * _8445) - (_8437 * _8441);\n                        float _8503 = (_8435 * _8445) - (_8437 * _8443);\n                        float _8510 = (_8447 * _8457) - (_8449 * _8455);\n                        float _8517 = (_8447 * _8459) - (_8451 * _8455);\n                        float _8524 = (_8447 * _8461) - (_8453 * _8455);\n                        float _8531 = (_8449 * _8459) - (_8451 * _8457);\n                        float _8538 = (_8449 * _8461) - (_8453 * _8457);\n                        float _8545 = (_8451 * _8461) - (_8453 * _8459);\n                        mat4 _12150 = mat4(vec4(((_8441 * _8545) - (_8443 * _8538)) + (_8445 * _8531), ((_8435 * _8538) - (_8433 * _8545)) - (_8437 * _8531), ((_8457 * _8503) - (_8459 * _8496)) + (_8461 * _8489), ((_8451 * _8496) - (_8449 * _8503)) - (_8453 * _8489)), vec4(((_8443 * _8524) - (_8439 * _8545)) - (_8445 * _8517), ((_8431 * _8545) - (_8435 * _8524)) + (_8437 * _8517), ((_8459 * _8482) - (_8455 * _8503)) - (_8461 * _8475), ((_8447 * _8503) - (_8451 * _8482)) + (_8453 * _8475)), vec4(((_8439 * _8538) - (_8441 * _8524)) + (_8445 * _8510), ((_8433 * _8524) - (_8431 * _8538)) - (_8437 * _8510), ((_8455 * _8496) - (_8457 * _8482)) + (_8461 * _8468), ((_8449 * _8482) - (_8447 * _8496)) - (_8453 * _8468)), vec4(((_8441 * _8517) - (_8439 * _8531)) - (_8443 * _8510), ((_8431 * _8531) - (_8433 * _8517)) + (_8435 * _8510), ((_8457 * _8475) - (_8455 * _8489)) - (_8459 * _8468), ((_8447 * _8489) - (_8449 * _8475)) + (_8451 * _8468))) * (1.0 / ((((((_8468 * _8545) - (_8475 * _8538)) + (_8482 * _8531)) + (_8489 * _8524)) - (_8496 * _8517)) + (_8503 * _8510)));\n                        _12150[3] = _12739[3];\n                        _13040 = _12150;\n                    }\n                    _13039 = _13040;\n                }\n                _13038 = _13039;\n            }\n            _13037 = _13038;\n        }\n        else\n        {\n            _13037 = mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n        }\n        mat4 _13042 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n        vec3 _13048 = vec3(0.0);\n        if (u_renderer[0].x == 1.0)\n        {\n            vec3 _5718 = normalize((_12739 * vec4(_5135, _16244, _16182, 0.0)).xyz) * (-1.0);\n            vec3 _5722 = normalize(cross(normalize(vec3(u_viewInverse[3].x, u_viewInverse[3].y, u_viewInverse[3].z) - (_12739 * vec4(_5186, 1.0)).xyz), _5718));\n            int _5744 = int(sign(u_renderer[1].y));\n            int _13035 = 0;\n            if (_5744 == 0)\n            {\n                _13035 = int(sign(u_renderer[1].z));\n            }\n            else\n            {\n                _13035 = _5744;\n            }\n            vec3 _12154 = _20262;\n            _12154.x = a_subPosition.x * ((u_renderer[1].y * length(_11978)) + (u_renderer[1].z * _12913.x));\n            vec3 _12158 = _12154;\n            _12158.y = a_subPosition.y * (_12913.y * float(_13035));\n            vec3 _12162 = _12158;\n            _12162.z = a_subPosition.z * _12913.z;\n            mat4 _12164 = _13037;\n            _12164[0] = vec4(_5718, 0.0);\n            mat4 _12166 = _12164;\n            _12166[1] = vec4(_5722, 0.0);\n            mat4 _12168 = _12166;\n            _12168[2] = vec4(normalize(cross(_5722, _5718)), 0.0);\n            mat4 _12174 = _12168;\n            _12174[3] = vec4(_12739[3].x, _12739[3].y, _12739[3].z, _12739[3].w);\n            _13048 = _12162;\n            _13042 = _12174;\n        }\n        else\n        {\n            _13048 = a_subPosition * _12913;\n            _13042 = _13037;\n        }\n        mat4 _13044 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n        if (u_renderer[0].x == 2.0)\n        {\n            mat4 _12176 = _13042;\n            _12176[0] = vec4(-0.699999988079071044921875, 0.0, 0.0, 0.0);\n            mat4 _12178 = _12176;\n            _12178[1] = vec4(cross(vec3(0.0, 1.0, 0.0), vec3(-1.0, 0.0, 0.0)) * 0.699999988079071044921875, 0.0);\n            mat4 _12180 = _12178;\n            _12180[2] = vec4(0.0, 0.699999988079071044921875, 0.0, 0.0);\n            mat4 _12186 = _12180;\n            _12186[3] = vec4(_12739[3].x, _12739[3].y, _12739[3].z, _12739[3].w);\n            _13044 = _12186;\n        }\n        else\n        {\n            _13044 = _13042;\n        }\n        mat4 _13127 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n        if (u_renderer[0].x == 3.0)\n        {\n            vec3 _5862 = cross(vec3(0.0, 1.0, 0.0), vec4(u_viewInverse[2].x, u_viewInverse[2].y, u_viewInverse[2].z, 1.0).xyz);\n            mat4 _12188 = _13044;\n            _12188[0] = vec4(_5862 * 0.699999988079071044921875, 0.0);\n            mat4 _12190 = _12188;\n            _12190[1] = vec4(0.0, 0.699999988079071044921875, 0.0, 0.0);\n            mat4 _12192 = _12190;\n            _12192[2] = vec4(cross(_5862, vec3(0.0, 1.0, 0.0)) * 0.699999988079071044921875, 0.0);\n            mat4 _12198 = _12192;\n            _12198[3] = vec4(_12739[3].x, _12739[3].y, _12739[3].z, _12739[3].w);\n            _13127 = _12198;\n        }\n        else\n        {\n            _13127 = _13044;\n        }\n        vec4 _5905 = vec4(_13048, 1.0);\n        vec4 _13135 = vec4(0.0);\n        if (!(u_renderer[0].x == 1.0))\n        {\n            vec4 _13136 = vec4(0.0);\n            if (!(u_renderer[0].x == 4.0))\n            {\n                bool _5936 = _5585 && (u_common[1].w <= 0.0);\n                bvec4 _20298 = bvec4(_5936);\n                float _8772 = cos(a_startRotation.z);\n                float _8775 = sin(a_startRotation.z);\n                float _8792 = -a_startRotation.x;\n                float _8793 = cos(_8792);\n                float _8797 = sin(_8792);\n                float _8814 = cos(a_startRotation.y);\n                float _8817 = sin(a_startRotation.y);\n                mat4 _8765 = (mat4(vec4(_8772, -_8775, 0.0, 0.0), vec4(_8775, _8772, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _8793, -_8797, 0.0), vec4(0.0, _8797, _8793, 0.0), vec4(0.0, 0.0, 0.0, 1.0))) * mat4(vec4(_8814, 0.0, _8817, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(-_8817, 0.0, _8814, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n                vec4 _5942 = _8765 * vec4(_20298.x ? vec4(0.0, 0.0, 1.0, 0.0).x : vec4(0.0, 0.0, -1.0, 0.0).x, _20298.y ? vec4(0.0, 0.0, 1.0, 0.0).y : vec4(0.0, 0.0, -1.0, 0.0).y, _20298.z ? vec4(0.0, 0.0, 1.0, 0.0).z : vec4(0.0, 0.0, -1.0, 0.0).z, _20298.w ? vec4(0.0, 0.0, 1.0, 0.0).w : vec4(0.0, 0.0, -1.0, 0.0).w);\n                float _8832 = _5942.x;\n                float _8835 = _5942.y;\n                float _8839 = _5942.z;\n                float _8842 = sqrt((pow(_8832, 2.0) + pow(_8835, 2.0)) + pow(_8839, 2.0));\n                float _8846 = _8832 / _8842;\n                float _8850 = _8835 / _8842;\n                float _8854 = _8839 / _8842;\n                float _8873 = cos(_13054.z);\n                float _8875 = sin(_13054.z);\n                float _8884 = _8846 * _8846;\n                float _8888 = 1.0 - _8884;\n                float _8894 = _8846 * _8850;\n                float _8896 = 1.0 - _8873;\n                float _8897 = _8894 * _8896;\n                float _8900 = _8854 * _8875;\n                float _8904 = _8846 * _8854;\n                float _8907 = _8904 * _8896;\n                float _8910 = _8850 * _8875;\n                float _8924 = _8850 * _8850;\n                float _8928 = 1.0 - _8924;\n                float _8934 = _8850 * _8854;\n                float _8937 = _8934 * _8896;\n                float _8940 = _8846 * _8875;\n                float _8964 = _8854 * _8854;\n                float _8968 = 1.0 - _8964;\n                mat4 _13103 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n                if (_5936)\n                {\n                    float _5958 = (-1.0) * _13054.z;\n                    float _9003 = cos(_5958);\n                    float _9005 = sin(_5958);\n                    float _9026 = 1.0 - _9003;\n                    float _9027 = _8894 * _9026;\n                    float _9030 = _8854 * _9005;\n                    float _9037 = _8904 * _9026;\n                    float _9040 = _8850 * _9005;\n                    float _9067 = _8934 * _9026;\n                    float _9070 = _8846 * _9005;\n                    _13103 = mat4(vec4(_8884 + (_8888 * _9003), _9027 + _9030, _9037 - _9040, 0.0), vec4(_9027 - _9030, _8924 + (_8928 * _9003), _9067 + _9070, 0.0), vec4(_9037 + _9040, _9067 - _9070, _8964 + (_8968 * _9003), 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n                }\n                else\n                {\n                    _13103 = mat4(vec4(_8884 + (_8888 * _8873), _8897 + _8900, _8907 - _8910, 0.0), vec4(_8897 - _8900, _8924 + (_8928 * _8873), _8937 + _8940, 0.0), vec4(_8907 + _8910, _8937 - _8940, _8964 + (_8968 * _8873), 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n                }\n                float _9155 = -_13054.x;\n                float _9156 = cos(_9155);\n                float _9160 = sin(_9155);\n                float _9177 = cos(_13054.y);\n                float _9180 = sin(_13054.y);\n                _13136 = ((mat4(vec4(1.0, -0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _9156, -_9160, 0.0), vec4(0.0, _9160, _9156, 0.0), vec4(0.0, 0.0, 0.0, 1.0))) * mat4(vec4(_9177, 0.0, _9180, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(-_9180, 0.0, _9177, 0.0), vec4(0.0, 0.0, 0.0, 1.0))) * (_13103 * (_8765 * _5905));\n            }\n            else\n            {\n                vec4 _13137 = vec4(0.0);\n                if (u_common[1].w == 1.0)\n                {\n                    vec4 _13138 = vec4(0.0);\n                    if (u_emitterShape == 1.0)\n                    {\n                        float _5995 = (-1.0) * a_startRotation.y;\n                        float _5998 = (-1.0) * a_startRotation.z;\n                        float _9285 = cos(_5998);\n                        float _9288 = sin(_5998);\n                        float _9306 = cos(a_startRotation.x);\n                        float _9310 = sin(a_startRotation.x);\n                        float _9327 = cos(_5995);\n                        float _9330 = sin(_5995);\n                        mat4 _9278 = (mat4(vec4(_9285, -_9288, 0.0, 0.0), vec4(_9288, _9285, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _9306, -_9310, 0.0), vec4(0.0, _9310, _9306, 0.0), vec4(0.0, 0.0, 0.0, 1.0))) * mat4(vec4(_9327, 0.0, _9330, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(-_9330, 0.0, _9327, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n                        vec4 _6003 = _9278 * vec4(0.0, 0.0, -1.0, 0.0);\n                        float _9345 = _6003.x;\n                        float _9348 = _6003.y;\n                        float _9352 = _6003.z;\n                        float _9355 = sqrt((pow(_9345, 2.0) + pow(_9348, 2.0)) + pow(_9352, 2.0));\n                        float _9359 = _9345 / _9355;\n                        float _9363 = _9348 / _9355;\n                        float _9367 = _9352 / _9355;\n                        float _6007 = (-1.0) * _13054.z;\n                        float _9386 = cos(_6007);\n                        float _9388 = sin(_6007);\n                        float _9397 = _9359 * _9359;\n                        float _9409 = 1.0 - _9386;\n                        float _9410 = (_9359 * _9363) * _9409;\n                        float _9413 = _9367 * _9388;\n                        float _9420 = (_9359 * _9367) * _9409;\n                        float _9423 = _9363 * _9388;\n                        float _9437 = _9363 * _9363;\n                        float _9450 = (_9363 * _9367) * _9409;\n                        float _9453 = _9359 * _9388;\n                        float _9477 = _9367 * _9367;\n                        float _9538 = -_13054.x;\n                        float _9539 = cos(_9538);\n                        float _9543 = sin(_9538);\n                        float _9560 = cos(_13054.y);\n                        float _9563 = sin(_13054.y);\n                        _13138 = ((mat4(vec4(1.0, -0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _9539, -_9543, 0.0), vec4(0.0, _9543, _9539, 0.0), vec4(0.0, 0.0, 0.0, 1.0))) * mat4(vec4(_9560, 0.0, _9563, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(-_9563, 0.0, _9560, 0.0), vec4(0.0, 0.0, 0.0, 1.0))) * (mat4(vec4(_9397 + ((1.0 - _9397) * _9386), _9410 + _9413, _9420 - _9423, 0.0), vec4(_9410 - _9413, _9437 + ((1.0 - _9437) * _9386), _9450 + _9453, 0.0), vec4(_9420 + _9423, _9450 - _9453, _9477 + ((1.0 - _9477) * _9386), 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (_9278 * _5905));\n                    }\n                    else\n                    {\n                        float _6025 = (-1.0) * a_startRotation.y;\n                        float _6028 = (-1.0) * a_startRotation.z;\n                        float _9668 = cos(_6028);\n                        float _9671 = sin(_6028);\n                        float _9689 = cos(a_startRotation.x);\n                        float _9693 = sin(a_startRotation.x);\n                        float _9710 = cos(_6025);\n                        float _9713 = sin(_6025);\n                        mat4 _9661 = (mat4(vec4(_9668, -_9671, 0.0, 0.0), vec4(_9671, _9668, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _9689, -_9693, 0.0), vec4(0.0, _9693, _9689, 0.0), vec4(0.0, 0.0, 0.0, 1.0))) * mat4(vec4(_9710, 0.0, _9713, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(-_9713, 0.0, _9710, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n                        vec4 _6033 = _9661 * vec4(0.0, 0.0, -1.0, 0.0);\n                        float _9728 = _6033.x;\n                        float _9731 = _6033.y;\n                        float _9735 = _6033.z;\n                        float _9738 = sqrt((pow(_9728, 2.0) + pow(_9731, 2.0)) + pow(_9735, 2.0));\n                        float _9742 = _9728 / _9738;\n                        float _9746 = _9731 / _9738;\n                        float _9750 = _9735 / _9738;\n                        float _9769 = cos(_13054.z);\n                        float _9771 = sin(_13054.z);\n                        float _9780 = _9742 * _9742;\n                        float _9792 = 1.0 - _9769;\n                        float _9793 = (_9742 * _9746) * _9792;\n                        float _9796 = _9750 * _9771;\n                        float _9803 = (_9742 * _9750) * _9792;\n                        float _9806 = _9746 * _9771;\n                        float _9820 = _9746 * _9746;\n                        float _9833 = (_9746 * _9750) * _9792;\n                        float _9836 = _9742 * _9771;\n                        float _9860 = _9750 * _9750;\n                        float _9921 = -_13054.x;\n                        float _9922 = cos(_9921);\n                        float _9926 = sin(_9921);\n                        float _9943 = cos(_13054.y);\n                        float _9946 = sin(_13054.y);\n                        _13138 = ((mat4(vec4(1.0, -0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _9922, -_9926, 0.0), vec4(0.0, _9926, _9922, 0.0), vec4(0.0, 0.0, 0.0, 1.0))) * mat4(vec4(_9943, 0.0, _9946, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(-_9946, 0.0, _9943, 0.0), vec4(0.0, 0.0, 0.0, 1.0))) * (mat4(vec4(_9780 + ((1.0 - _9780) * _9769), _9793 + _9796, _9803 - _9806, 0.0), vec4(_9793 - _9796, _9820 + ((1.0 - _9820) * _9769), _9833 + _9836, 0.0), vec4(_9803 + _9806, _9833 - _9836, _9860 + ((1.0 - _9860) * _9769), 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (_9661 * _5905));\n                    }\n                    _13137 = _13138;\n                }\n                else\n                {\n                    vec4 _13139 = vec4(0.0);\n                    if (u_emitterShape == 1.0)\n                    {\n                        float _6059 = (-1.0) * a_startRotation.z;\n                        float _6062 = (-1.0) * a_startRotation.y;\n                        float _10051 = cos(_6062);\n                        float _10054 = sin(_6062);\n                        float _10072 = cos(a_startRotation.x);\n                        float _10076 = sin(a_startRotation.x);\n                        float _10093 = cos(_6059);\n                        float _10096 = sin(_6059);\n                        mat4 _10044 = (mat4(vec4(_10051, -_10054, 0.0, 0.0), vec4(_10054, _10051, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _10072, -_10076, 0.0), vec4(0.0, _10076, _10072, 0.0), vec4(0.0, 0.0, 0.0, 1.0))) * mat4(vec4(_10093, 0.0, _10096, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(-_10096, 0.0, _10093, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n                        vec4 _6067 = _10044 * vec4(0.0, 0.0, 1.0, 0.0);\n                        float _10111 = _6067.x;\n                        float _10114 = _6067.y;\n                        float _10118 = _6067.z;\n                        float _10121 = sqrt((pow(_10111, 2.0) + pow(_10114, 2.0)) + pow(_10118, 2.0));\n                        float _10125 = _10111 / _10121;\n                        float _10129 = _10114 / _10121;\n                        float _10133 = _10118 / _10121;\n                        float _6071 = (-1.0) * _13054.z;\n                        float _10152 = cos(_6071);\n                        float _10154 = sin(_6071);\n                        float _10163 = _10125 * _10125;\n                        float _10175 = 1.0 - _10152;\n                        float _10176 = (_10125 * _10129) * _10175;\n                        float _10179 = _10133 * _10154;\n                        float _10186 = (_10125 * _10133) * _10175;\n                        float _10189 = _10129 * _10154;\n                        float _10203 = _10129 * _10129;\n                        float _10216 = (_10129 * _10133) * _10175;\n                        float _10219 = _10125 * _10154;\n                        float _10243 = _10133 * _10133;\n                        float _10304 = -_13054.x;\n                        float _10305 = cos(_10304);\n                        float _10309 = sin(_10304);\n                        float _10326 = cos(_13054.y);\n                        float _10329 = sin(_13054.y);\n                        _13139 = ((mat4(vec4(1.0, -0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _10305, -_10309, 0.0), vec4(0.0, _10309, _10305, 0.0), vec4(0.0, 0.0, 0.0, 1.0))) * mat4(vec4(_10326, 0.0, _10329, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(-_10329, 0.0, _10326, 0.0), vec4(0.0, 0.0, 0.0, 1.0))) * (mat4(vec4(_10163 + ((1.0 - _10163) * _10152), _10176 + _10179, _10186 - _10189, 0.0), vec4(_10176 - _10179, _10203 + ((1.0 - _10203) * _10152), _10216 + _10219, 0.0), vec4(_10186 + _10189, _10216 - _10219, _10243 + ((1.0 - _10243) * _10152), 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (_10044 * _5905));\n                    }\n                    else\n                    {\n                        float _6089 = (-1.0) * a_startRotation.y;\n                        float _6092 = (-1.0) * a_startRotation.z;\n                        float _10434 = cos(_6092);\n                        float _10437 = sin(_6092);\n                        float _10455 = cos(a_startRotation.x);\n                        float _10459 = sin(a_startRotation.x);\n                        float _10476 = cos(_6089);\n                        float _10479 = sin(_6089);\n                        mat4 _10427 = (mat4(vec4(_10434, -_10437, 0.0, 0.0), vec4(_10437, _10434, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _10455, -_10459, 0.0), vec4(0.0, _10459, _10455, 0.0), vec4(0.0, 0.0, 0.0, 1.0))) * mat4(vec4(_10476, 0.0, _10479, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(-_10479, 0.0, _10476, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n                        vec4 _6097 = _10427 * vec4(0.0, 0.0, -1.0, 0.0);\n                        float _10494 = _6097.x;\n                        float _10497 = _6097.y;\n                        float _10501 = _6097.z;\n                        float _10504 = sqrt((pow(_10494, 2.0) + pow(_10497, 2.0)) + pow(_10501, 2.0));\n                        float _10508 = _10494 / _10504;\n                        float _10512 = _10497 / _10504;\n                        float _10516 = _10501 / _10504;\n                        float _10535 = cos(_13054.z);\n                        float _10537 = sin(_13054.z);\n                        float _10546 = _10508 * _10508;\n                        float _10558 = 1.0 - _10535;\n                        float _10559 = (_10508 * _10512) * _10558;\n                        float _10562 = _10516 * _10537;\n                        float _10569 = (_10508 * _10516) * _10558;\n                        float _10572 = _10512 * _10537;\n                        float _10586 = _10512 * _10512;\n                        float _10599 = (_10512 * _10516) * _10558;\n                        float _10602 = _10508 * _10537;\n                        float _10626 = _10516 * _10516;\n                        float _10687 = -_13054.x;\n                        float _10688 = cos(_10687);\n                        float _10692 = sin(_10687);\n                        float _10709 = cos(_13054.y);\n                        float _10712 = sin(_13054.y);\n                        _13139 = ((mat4(vec4(1.0, -0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _10688, -_10692, 0.0), vec4(0.0, _10692, _10688, 0.0), vec4(0.0, 0.0, 0.0, 1.0))) * mat4(vec4(_10709, 0.0, _10712, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(-_10712, 0.0, _10709, 0.0), vec4(0.0, 0.0, 0.0, 1.0))) * (mat4(vec4(_10546 + ((1.0 - _10546) * _10535), _10559 + _10562, _10569 - _10572, 0.0), vec4(_10559 - _10562, _10586 + ((1.0 - _10586) * _10535), _10599 + _10602, 0.0), vec4(_10569 + _10572, _10599 - _10602, _10626 + ((1.0 - _10626) * _10535), 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (_10427 * _5905));\n                    }\n                    _13137 = _13139;\n                }\n                _13136 = _13137;\n            }\n            _13135 = _13136;\n        }\n        else\n        {\n            _13135 = _5905;\n        }\n        mat4 _13140 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n        if (!(u_common[0].y == 1.0))\n        {\n            vec3 _6125 = vec3(1.0) / (vec3(length(vec3(_12739[0].xyz)), length(vec3(_12739[1].xyz)), length(vec3(_12739[2].xyz))) + vec3(9.9999997473787516355514526367188e-06));\n            mat4 _12364 = mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n            _12364[0].x = _6125.x;\n            mat4 _12367 = _12364;\n            _12367[1].y = _6125.y;\n            mat4 _12370 = _12367;\n            _12370[2].z = _6125.z;\n            mat4 _12372 = _12370;\n            _12372[3].w = 1.0;\n            _13140 = _12739 * _12372;\n        }\n        else\n        {\n            _13140 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n        }\n        vec4 _13141 = vec4(0.0);\n        if (u_renderer[0].x == 4.0)\n        {\n            vec4 _13142 = vec4(0.0);\n            if (u_common[0].y == 1.0)\n            {\n                _13142 = _12739 * (vec4(_5186, 1.0) + _13135);\n            }\n            else\n            {\n                vec4 _13143 = vec4(0.0);\n                if (u_common[0].z == 1.0)\n                {\n                    mat4 _12375 = mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n                    _12375[0].x = u_common[1].x;\n                    mat4 _12378 = _12375;\n                    _12378[1].y = u_common[1].y;\n                    mat4 _12381 = _12378;\n                    _12381[2].z = u_common[1].z;\n                    mat4 _12383 = _12381;\n                    _12383[3].w = 1.0;\n                    mat4 _6160 = _13140 * _12383;\n                    _13143 = (_6160 * vec4(_5186, 1.0)) + (_6160 * _13135);\n                }\n                else\n                {\n                    _13143 = (_13140 * vec4(_5186, 1.0)) + (_13140 * _13135);\n                }\n                _13142 = _13143;\n            }\n            _13141 = _13142;\n        }\n        else\n        {\n            vec4 _13144 = vec4(0.0);\n            if (u_common[0].w == 1.0)\n            {\n                _13144 = (_13140 * vec4(_5186, 1.0)) + (_13127 * _13135);\n            }\n            else\n            {\n                vec4 _13145 = vec4(0.0);\n                if (u_common[0].z == 1.0)\n                {\n                    mat4 _12386 = mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n                    _12386[0].x = u_common[1].x;\n                    mat4 _12389 = _12386;\n                    _12389[1].y = u_common[1].y;\n                    mat4 _12392 = _12389;\n                    _12392[2].z = u_common[1].z;\n                    mat4 _12394 = _12392;\n                    _12394[3].w = 1.0;\n                    _13145 = ((_13140 * _12394) * vec4(_5186, 1.0)) + (_13127 * (_12394 * _13135));\n                }\n                else\n                {\n                    _13145 = (_12739 * vec4(_5186, 1.0)) + (_13127 * (_11859 * _13135));\n                }\n                _13144 = _13145;\n            }\n            _13141 = _13144;\n        }\n        vec4 _13487 = vec4(0.0);\n        if (u_colorAlphaByLife[0].y > 0.0)\n        {\n            bool _11014 = true && (u_colorAlphaByLife[2].x >= _12446);\n            vec4 _14060 = vec4(0.0);\n            if (_11014)\n            {\n                vec4 _12400 = _13250;\n                _12400.w = mix(u_colorAlphaByLife[1].y, u_colorAlphaByLife[2].y, (_12446 - u_colorAlphaByLife[1].x) / (u_colorAlphaByLife[2].x - u_colorAlphaByLife[1].x));\n                _14060 = _12400;\n            }\n            else\n            {\n                _14060 = _13250;\n            }\n            bool _20304 = _11014 ? false : true;\n            bool _14581 = _20304 && (u_colorAlphaByLife[3].x >= _12446);\n            vec4 _14596 = vec4(0.0);\n            if (_14581)\n            {\n                vec4 _14593 = _14060;\n                _14593.w = mix(u_colorAlphaByLife[2].y, u_colorAlphaByLife[3].y, (_12446 - u_colorAlphaByLife[2].x) / (u_colorAlphaByLife[3].x - u_colorAlphaByLife[2].x));\n                _14596 = _14593;\n            }\n            else\n            {\n                _14596 = _14060;\n            }\n            vec4 _14625 = vec4(0.0);\n            if ((_14581 ? false : _20304) && (u_colorAlphaByLife[4].x >= _12446))\n            {\n                vec4 _14622 = _14596;\n                _14622.w = mix(u_colorAlphaByLife[3].y, u_colorAlphaByLife[4].y, (_12446 - u_colorAlphaByLife[3].x) / (u_colorAlphaByLife[4].x - u_colorAlphaByLife[3].x));\n                _14625 = _14622;\n            }\n            else\n            {\n                _14625 = _14596;\n            }\n            bool _11055 = true && (u_colorRGBByLife[1].x >= _12446);\n            vec4 _14061 = vec4(0.0);\n            if (_11055)\n            {\n                vec3 _11079 = mix(u_colorRGBByLife[0].yzw, u_colorRGBByLife[1].yzw, vec3((_12446 - u_colorRGBByLife[0].x) / (u_colorRGBByLife[1].x - u_colorRGBByLife[0].x)));\n                _14061 = vec4(_11079.x, _11079.y, _11079.z, _14625.w);\n            }\n            else\n            {\n                _14061 = _14625;\n            }\n            bool _20306 = _11055 ? false : true;\n            bool _14515 = _20306 && (u_colorRGBByLife[2].x >= _12446);\n            vec4 _14534 = vec4(0.0);\n            if (_14515)\n            {\n                vec3 _14530 = mix(u_colorRGBByLife[1].yzw, u_colorRGBByLife[2].yzw, vec3((_12446 - u_colorRGBByLife[1].x) / (u_colorRGBByLife[2].x - u_colorRGBByLife[1].x)));\n                _14534 = vec4(_14530.x, _14530.y, _14530.z, _14061.w);\n            }\n            else\n            {\n                _14534 = _14061;\n            }\n            vec4 _14567 = vec4(0.0);\n            if ((_14515 ? false : _20306) && (u_colorRGBByLife[3].x >= _12446))\n            {\n                vec3 _14563 = mix(u_colorRGBByLife[2].yzw, u_colorRGBByLife[3].yzw, vec3((_12446 - u_colorRGBByLife[2].x) / (u_colorRGBByLife[3].x - u_colorRGBByLife[2].x)));\n                _14567 = vec4(_14563.x, _14563.y, _14563.z, _14534.w);\n            }\n            else\n            {\n                _14567 = _14534;\n            }\n            bool _11118 = true && (u_colorAlphaByLife[6].x >= _12446);\n            vec4 _14092 = vec4(0.0);\n            if (_11118)\n            {\n                vec4 _12408 = _13250;\n                _12408.w = mix(u_colorAlphaByLife[5].y, u_colorAlphaByLife[6].y, (_12446 - u_colorAlphaByLife[5].x) / (u_colorAlphaByLife[6].x - u_colorAlphaByLife[5].x));\n                _14092 = _12408;\n            }\n            else\n            {\n                _14092 = _13250;\n            }\n            bool _20308 = _11118 ? false : true;\n            bool _14457 = _20308 && (u_colorAlphaByLife[7].x >= _12446);\n            vec4 _14472 = vec4(0.0);\n            if (_14457)\n            {\n                vec4 _14469 = _14092;\n                _14469.w = mix(u_colorAlphaByLife[6].y, u_colorAlphaByLife[7].y, (_12446 - u_colorAlphaByLife[6].x) / (u_colorAlphaByLife[7].x - u_colorAlphaByLife[6].x));\n                _14472 = _14469;\n            }\n            else\n            {\n                _14472 = _14092;\n            }\n            vec4 _14501 = vec4(0.0);\n            if ((_14457 ? false : _20308) && (u_colorAlphaByLife[8].x >= _12446))\n            {\n                vec4 _14498 = _14472;\n                _14498.w = mix(u_colorAlphaByLife[7].y, u_colorAlphaByLife[8].y, (_12446 - u_colorAlphaByLife[7].x) / (u_colorAlphaByLife[8].x - u_colorAlphaByLife[7].x));\n                _14501 = _14498;\n            }\n            else\n            {\n                _14501 = _14472;\n            }\n            bool _11159 = true && (u_colorRGBByLife[5].x >= _12446);\n            vec4 _14093 = vec4(0.0);\n            if (_11159)\n            {\n                vec3 _11183 = mix(u_colorRGBByLife[4].yzw, u_colorRGBByLife[5].yzw, vec3((_12446 - u_colorRGBByLife[4].x) / (u_colorRGBByLife[5].x - u_colorRGBByLife[4].x)));\n                _14093 = vec4(_11183.x, _11183.y, _11183.z, _14501.w);\n            }\n            else\n            {\n                _14093 = _14501;\n            }\n            bool _20310 = _11159 ? false : true;\n            bool _14391 = _20310 && (u_colorRGBByLife[6].x >= _12446);\n            vec4 _14410 = vec4(0.0);\n            if (_14391)\n            {\n                vec3 _14406 = mix(u_colorRGBByLife[5].yzw, u_colorRGBByLife[6].yzw, vec3((_12446 - u_colorRGBByLife[5].x) / (u_colorRGBByLife[6].x - u_colorRGBByLife[5].x)));\n                _14410 = vec4(_14406.x, _14406.y, _14406.z, _14093.w);\n            }\n            else\n            {\n                _14410 = _14093;\n            }\n            vec4 _14443 = vec4(0.0);\n            if ((_14391 ? false : _20310) && (u_colorRGBByLife[7].x >= _12446))\n            {\n                vec3 _14439 = mix(u_colorRGBByLife[6].yzw, u_colorRGBByLife[7].yzw, vec3((_12446 - u_colorRGBByLife[6].x) / (u_colorRGBByLife[7].x - u_colorRGBByLife[6].x)));\n                _14443 = vec4(_14439.x, _14439.y, _14439.z, _14410.w);\n            }\n            else\n            {\n                _14443 = _14410;\n            }\n            _13487 = _4224 * mix(_14567, _14443, vec4(_6471));\n        }\n        else\n        {\n            vec4 _13488 = vec4(0.0);\n            if (u_colorAlphaByLife[0].x > 0.0)\n            {\n                bool _11222 = true && (u_colorAlphaByLife[2].x >= _12446);\n                vec4 _14026 = vec4(0.0);\n                if (_11222)\n                {\n                    vec4 _12416 = _13250;\n                    _12416.w = mix(u_colorAlphaByLife[1].y, u_colorAlphaByLife[2].y, (_12446 - u_colorAlphaByLife[1].x) / (u_colorAlphaByLife[2].x - u_colorAlphaByLife[1].x));\n                    _14026 = _12416;\n                }\n                else\n                {\n                    _14026 = _13250;\n                }\n                bool _20300 = _11222 ? false : true;\n                bool _14771 = _20300 && (u_colorAlphaByLife[3].x >= _12446);\n                vec4 _14786 = vec4(0.0);\n                if (_14771)\n                {\n                    vec4 _14783 = _14026;\n                    _14783.w = mix(u_colorAlphaByLife[2].y, u_colorAlphaByLife[3].y, (_12446 - u_colorAlphaByLife[2].x) / (u_colorAlphaByLife[3].x - u_colorAlphaByLife[2].x));\n                    _14786 = _14783;\n                }\n                else\n                {\n                    _14786 = _14026;\n                }\n                vec4 _14815 = vec4(0.0);\n                if ((_14771 ? false : _20300) && (u_colorAlphaByLife[4].x >= _12446))\n                {\n                    vec4 _14812 = _14786;\n                    _14812.w = mix(u_colorAlphaByLife[3].y, u_colorAlphaByLife[4].y, (_12446 - u_colorAlphaByLife[3].x) / (u_colorAlphaByLife[4].x - u_colorAlphaByLife[3].x));\n                    _14815 = _14812;\n                }\n                else\n                {\n                    _14815 = _14786;\n                }\n                bool _11263 = true && (u_colorRGBByLife[1].x >= _12446);\n                vec4 _14027 = vec4(0.0);\n                if (_11263)\n                {\n                    vec3 _11287 = mix(u_colorRGBByLife[0].yzw, u_colorRGBByLife[1].yzw, vec3((_12446 - u_colorRGBByLife[0].x) / (u_colorRGBByLife[1].x - u_colorRGBByLife[0].x)));\n                    _14027 = vec4(_11287.x, _11287.y, _11287.z, _14815.w);\n                }\n                else\n                {\n                    _14027 = _14815;\n                }\n                bool _20302 = _11263 ? false : true;\n                bool _14705 = _20302 && (u_colorRGBByLife[2].x >= _12446);\n                vec4 _14724 = vec4(0.0);\n                if (_14705)\n                {\n                    vec3 _14720 = mix(u_colorRGBByLife[1].yzw, u_colorRGBByLife[2].yzw, vec3((_12446 - u_colorRGBByLife[1].x) / (u_colorRGBByLife[2].x - u_colorRGBByLife[1].x)));\n                    _14724 = vec4(_14720.x, _14720.y, _14720.z, _14027.w);\n                }\n                else\n                {\n                    _14724 = _14027;\n                }\n                vec4 _14757 = vec4(0.0);\n                if ((_14705 ? false : _20302) && (u_colorRGBByLife[3].x >= _12446))\n                {\n                    vec3 _14753 = mix(u_colorRGBByLife[2].yzw, u_colorRGBByLife[3].yzw, vec3((_12446 - u_colorRGBByLife[2].x) / (u_colorRGBByLife[3].x - u_colorRGBByLife[2].x)));\n                    _14757 = vec4(_14753.x, _14753.y, _14753.z, _14724.w);\n                }\n                else\n                {\n                    _14757 = _14724;\n                }\n                _13488 = _4224 * _14757;\n            }\n            else\n            {\n                _13488 = _4224;\n            }\n            _13487 = _13488;\n        }\n        vec2 _13590 = vec2(0.0);\n        if (u_textureSheetAnimation[0].x > 0.0)\n        {\n            float _11470 = fract(sin(a_randomSeed + 0.5) * 43758.546875);\n            float _11349 = 1.0 - _11470;\n            float _11362 = u_textureSheetAnimation[1].x * ((_11470 * u_textureSheetAnimation[3].y) + (_11349 * u_textureSheetAnimation[3].z));\n            float _14324 = u_textureSheetAnimation[1].x * ((_11470 * u_textureSheetAnimation[4].y) + (_11349 * u_textureSheetAnimation[4].z));\n            float _14350 = u_textureSheetAnimation[1].x * ((_11470 * u_textureSheetAnimation[5].y) + (_11349 * u_textureSheetAnimation[5].z));\n            float _14376 = u_textureSheetAnimation[1].x * ((_11470 * u_textureSheetAnimation[6].y) + (_11349 * u_textureSheetAnimation[6].z));\n            float _20312 = (_12446 >= 1.0) ? 0.9900000095367431640625 : (_12446 - floor(_12446));\n            vec2 _13591 = vec2(0.0);\n            if (u_textureSheetAnimation[0].y < 2.0)\n            {\n                bool _11495 = true && (u_textureSheetAnimation[4].x >= _20312);\n                float _14133 = 0.0;\n                if (_11495)\n                {\n                    _14133 = mix(_11362, _14324, (_20312 - u_textureSheetAnimation[3].x) / (u_textureSheetAnimation[4].x - u_textureSheetAnimation[3].x));\n                }\n                else\n                {\n                    _14133 = 0.0;\n                }\n                bool _20315 = _11495 ? false : true;\n                bool _14201 = _20315 && (u_textureSheetAnimation[5].x >= _20312);\n                float _14215 = 0.0;\n                if (_14201)\n                {\n                    _14215 = mix(_14324, _14350, (_20312 - u_textureSheetAnimation[4].x) / (u_textureSheetAnimation[5].x - u_textureSheetAnimation[4].x));\n                }\n                else\n                {\n                    _14215 = _14133;\n                }\n                float _14243 = 0.0;\n                if ((_14201 ? false : _20315) && (u_textureSheetAnimation[6].x >= _20312))\n                {\n                    _14243 = mix(_14350, _14376, (_20312 - u_textureSheetAnimation[5].x) / (u_textureSheetAnimation[6].x - u_textureSheetAnimation[5].x));\n                }\n                else\n                {\n                    _14243 = _14215;\n                }\n                float _11394 = mod(u_textureSheetAnimation[0].z + floor(_14243), u_textureSheetAnimation[1].y * u_textureSheetAnimation[1].z);\n                vec2 _12425 = _20263;\n                _12425.x = (a_texCoord.x + mod(_11394, u_textureSheetAnimation[1].y)) / u_textureSheetAnimation[1].y;\n                vec2 _12428 = _12425;\n                _12428.y = (a_texCoord.y + floor((_11394 / u_textureSheetAnimation[1].y) + 0.100000001490116119384765625)) / u_textureSheetAnimation[1].z;\n                _13591 = _12428;\n            }\n            else\n            {\n                bool _11547 = true && (u_textureSheetAnimation[4].x >= _20312);\n                float _14130 = 0.0;\n                if (_11547)\n                {\n                    _14130 = mix(_11362, _14324, (_20312 - u_textureSheetAnimation[3].x) / (u_textureSheetAnimation[4].x - u_textureSheetAnimation[3].x));\n                }\n                else\n                {\n                    _14130 = 0.0;\n                }\n                bool _20313 = _11547 ? false : true;\n                bool _14257 = _20313 && (u_textureSheetAnimation[5].x >= _20312);\n                float _14271 = 0.0;\n                if (_14257)\n                {\n                    _14271 = mix(_14324, _14350, (_20312 - u_textureSheetAnimation[4].x) / (u_textureSheetAnimation[5].x - u_textureSheetAnimation[4].x));\n                }\n                else\n                {\n                    _14271 = _14130;\n                }\n                float _14299 = 0.0;\n                if ((_14257 ? false : _20313) && (u_textureSheetAnimation[6].x >= _20312))\n                {\n                    _14299 = mix(_14350, _14376, (_20312 - u_textureSheetAnimation[5].x) / (u_textureSheetAnimation[6].x - u_textureSheetAnimation[5].x));\n                }\n                else\n                {\n                    _14299 = _14271;\n                }\n                float _13584 = 0.0;\n                if (u_textureSheetAnimation[2].x > 0.0)\n                {\n                    _13584 = floor(a_randomSeed * u_textureSheetAnimation[1].z);\n                }\n                else\n                {\n                    _13584 = clamp(u_textureSheetAnimation[2].y, 0.0, u_textureSheetAnimation[1].z - 1.0);\n                }\n                vec2 _12435 = _20263;\n                _12435.x = (a_texCoord.x + mod(floor(_14299), u_textureSheetAnimation[1].y)) / u_textureSheetAnimation[1].y;\n                vec2 _12438 = _12435;\n                _12438.y = (a_texCoord.y + _13584) / u_textureSheetAnimation[1].z;\n                _13591 = _12438;\n            }\n            _13590 = _13591;\n        }\n        else\n        {\n            _13590 = a_texCoord;\n        }\n        _13623 = _13141;\n        _13621 = _13590;\n        _13620 = _13487;\n    }\n    else\n    {\n        _13623 = vec4(1000000.0, 1000000.0, 1000000.0, 1.0);\n        _13621 = vec2(1.0);\n        _13620 = vec4(1.0);\n    }\n    gl_Position = u_projection * (u_view * _13623);\n    varying_TexCoord = (vec2(_13621.x, _13621.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = _13620;\n}\n\n","#version 100\nprecision mediump float;\nprecision highp int;\n\nuniform highp vec4 _TintColor;\nuniform highp vec4 _MainTex_ST;\nuniform highp float _Bright;\n\n\nuniform highp sampler2D _MainTex;\nuniform highp sampler2D _MaskTex;\n\nvarying highp vec2 varying_TexCoord;\nvarying highp vec4 varying_Color;\n\nvoid main()\n{\n    highp vec4 _173 = ((varying_Color * _Bright) * texture2D(_MainTex, varying_TexCoord)) * _TintColor;\n    highp vec4 _203 = _173;\n    _203.w = _173.w * texture2D(_MaskTex, varying_TexCoord).x;\n    gl_FragData[0] = clamp(_203, vec4(0.0), vec4(1.0));\n}\n\n","#version 100\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nvoid main()\n{\n    gl_Position = u_projection * (u_view * (u_world * a_position));\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = vec4(1.0);\n}\n\n","#version 100\nprecision mediump float;\nprecision highp int;\n\nuniform highp vec4 _TintColor;\nuniform highp vec4 _MainTex_ST;\nuniform highp float _Bright;\n\n\nuniform highp sampler2D _MainTex;\nuniform highp sampler2D _MaskTex;\n\nvarying highp vec2 varying_TexCoord;\nvarying highp vec4 varying_Color;\n\nvoid main()\n{\n    highp vec4 _156 = ((varying_Color * _Bright) * texture2D(_MainTex, varying_TexCoord)) * _TintColor;\n    highp vec4 _186 = _156;\n    _186.w = _156.w * texture2D(_MaskTex, varying_TexCoord).x;\n    gl_FragData[0] = clamp(_186, vec4(0.0), vec4(1.0));\n}\n\n","#version 100\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec3 u_widthByLength[4];\nuniform vec4 u_colorRGBByLength[4];\nuniform vec2 u_colorAlphaByLength[4];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nattribute vec3 a_position;\nattribute float a_sign;\nattribute float a_lengthPercent;\nattribute vec2 a_texCoord;\nattribute vec3 a_direction;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nfloat _993 = 0.0;\nvec4 _1002 = vec4(0.0);\n\nvoid main()\n{\n    bool _768 = true && (u_widthByLength[1].x >= a_lengthPercent);\n    float _1009 = 0.0;\n    if (_768)\n    {\n        _1009 = mix(u_widthByLength[0].y, u_widthByLength[1].y, (a_lengthPercent - u_widthByLength[0].x) / (u_widthByLength[1].x - u_widthByLength[0].x));\n    }\n    else\n    {\n        _1009 = _993;\n    }\n    bool _1342 = _768 ? false : true;\n    bool _1190 = _1342 && (u_widthByLength[2].x >= a_lengthPercent);\n    float _1204 = 0.0;\n    if (_1190)\n    {\n        _1204 = mix(u_widthByLength[1].y, u_widthByLength[2].y, (a_lengthPercent - u_widthByLength[1].x) / (u_widthByLength[2].x - u_widthByLength[1].x));\n    }\n    else\n    {\n        _1204 = _1009;\n    }\n    float _1232 = 0.0;\n    if ((_1190 ? false : _1342) && (u_widthByLength[3].x >= a_lengthPercent))\n    {\n        _1232 = mix(u_widthByLength[2].y, u_widthByLength[3].y, (a_lengthPercent - u_widthByLength[2].x) / (u_widthByLength[3].x - u_widthByLength[2].x));\n    }\n    else\n    {\n        _1232 = _1204;\n    }\n    bool _824 = true && (u_colorAlphaByLength[1].x >= a_lengthPercent);\n    vec4 _1011 = vec4(0.0);\n    if (_824)\n    {\n        vec4 _978 = _1002;\n        _978.w = mix(u_colorAlphaByLength[0].y, u_colorAlphaByLength[1].y, (a_lengthPercent - u_colorAlphaByLength[0].x) / (u_colorAlphaByLength[1].x - u_colorAlphaByLength[0].x));\n        _1011 = _978;\n    }\n    else\n    {\n        _1011 = _1002;\n    }\n    bool _1344 = _824 ? false : true;\n    bool _1093 = _1344 && (u_colorAlphaByLength[2].x >= a_lengthPercent);\n    vec4 _1108 = vec4(0.0);\n    if (_1093)\n    {\n        vec4 _1105 = _1011;\n        _1105.w = mix(u_colorAlphaByLength[1].y, u_colorAlphaByLength[2].y, (a_lengthPercent - u_colorAlphaByLength[1].x) / (u_colorAlphaByLength[2].x - u_colorAlphaByLength[1].x));\n        _1108 = _1105;\n    }\n    else\n    {\n        _1108 = _1011;\n    }\n    vec4 _1137 = vec4(0.0);\n    if ((_1093 ? false : _1344) && (u_colorAlphaByLength[3].x >= a_lengthPercent))\n    {\n        vec4 _1134 = _1108;\n        _1134.w = mix(u_colorAlphaByLength[2].y, u_colorAlphaByLength[3].y, (a_lengthPercent - u_colorAlphaByLength[2].x) / (u_colorAlphaByLength[3].x - u_colorAlphaByLength[2].x));\n        _1137 = _1134;\n    }\n    else\n    {\n        _1137 = _1108;\n    }\n    bool _865 = true && (u_colorRGBByLength[1].x >= a_lengthPercent);\n    vec4 _1012 = vec4(0.0);\n    if (_865)\n    {\n        vec3 _889 = mix(u_colorRGBByLength[0].yzw, u_colorRGBByLength[1].yzw, vec3((a_lengthPercent - u_colorRGBByLength[0].x) / (u_colorRGBByLength[1].x - u_colorRGBByLength[0].x)));\n        _1012 = vec4(_889.x, _889.y, _889.z, _1137.w);\n    }\n    else\n    {\n        _1012 = _1137;\n    }\n    bool _1346 = _865 ? false : true;\n    bool _1027 = _1346 && (u_colorRGBByLength[2].x >= a_lengthPercent);\n    vec4 _1046 = vec4(0.0);\n    if (_1027)\n    {\n        vec3 _1042 = mix(u_colorRGBByLength[1].yzw, u_colorRGBByLength[2].yzw, vec3((a_lengthPercent - u_colorRGBByLength[1].x) / (u_colorRGBByLength[2].x - u_colorRGBByLength[1].x)));\n        _1046 = vec4(_1042.x, _1042.y, _1042.z, _1012.w);\n    }\n    else\n    {\n        _1046 = _1012;\n    }\n    vec4 _1079 = vec4(0.0);\n    if ((_1027 ? false : _1346) && (u_colorRGBByLength[3].x >= a_lengthPercent))\n    {\n        vec3 _1075 = mix(u_colorRGBByLength[2].yzw, u_colorRGBByLength[3].yzw, vec3((a_lengthPercent - u_colorRGBByLength[2].x) / (u_colorRGBByLength[3].x - u_colorRGBByLength[2].x)));\n        _1079 = vec4(_1075.x, _1075.y, _1075.z, _1046.w);\n    }\n    else\n    {\n        _1079 = _1046;\n    }\n    vec3 _678 = normalize(a_direction);\n    vec3 _682 = normalize(cross(normalize(vec3(u_viewInverse[3].x, u_viewInverse[3].y, u_viewInverse[3].z) - a_position), _678));\n    mat4 _982 = mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n    _982[0] = vec4(_678, 0.0);\n    mat4 _984 = _982;\n    _984[1] = vec4(_682, 0.0);\n    mat4 _986 = _984;\n    _986[2] = vec4(normalize(cross(_678, _682)), 0.0);\n    gl_Position = u_projection * (u_view * vec4(a_position + (normalize(vec3((_986 * vec4(0.0, a_sign, 0.0, 1.0)).xyz)) * _1232), 1.0));\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = _1079;\n}\n\n","#version 100\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nattribute vec3 a_subCenter;\nattribute vec3 a_subPosition;\nattribute vec3 a_speed;\nattribute vec3 a_speedNormal;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nvoid main()\n{\n    float _1008 = (u_world[0].x * u_world[1].y) - (u_world[0].y * u_world[1].x);\n    float _1015 = (u_world[0].x * u_world[1].z) - (u_world[0].z * u_world[1].x);\n    float _1022 = (u_world[0].x * u_world[1].w) - (u_world[0].w * u_world[1].x);\n    float _1029 = (u_world[0].y * u_world[1].z) - (u_world[0].z * u_world[1].y);\n    float _1036 = (u_world[0].y * u_world[1].w) - (u_world[0].w * u_world[1].y);\n    float _1043 = (u_world[0].z * u_world[1].w) - (u_world[0].w * u_world[1].z);\n    float _1050 = (u_world[2].x * u_world[3].y) - (u_world[2].y * u_world[3].x);\n    float _1057 = (u_world[2].x * u_world[3].z) - (u_world[2].z * u_world[3].x);\n    float _1064 = (u_world[2].x * u_world[3].w) - (u_world[2].w * u_world[3].x);\n    float _1071 = (u_world[2].y * u_world[3].z) - (u_world[2].z * u_world[3].y);\n    float _1078 = (u_world[2].y * u_world[3].w) - (u_world[2].w * u_world[3].y);\n    float _1085 = (u_world[2].z * u_world[3].w) - (u_world[2].w * u_world[3].z);\n    vec3 _875 = normalize(a_speed);\n    vec3 _878 = normalize(a_speedNormal);\n    vec3 _882 = normalize(cross(_875, normalize(-((mat4(vec4(((u_world[1].y * _1085) - (u_world[1].z * _1078)) + (u_world[1].w * _1071), ((u_world[0].z * _1078) - (u_world[0].y * _1085)) - (u_world[0].w * _1071), ((u_world[3].y * _1043) - (u_world[3].z * _1036)) + (u_world[3].w * _1029), ((u_world[2].z * _1036) - (u_world[2].y * _1043)) - (u_world[2].w * _1029)), vec4(((u_world[1].z * _1064) - (u_world[1].x * _1085)) - (u_world[1].w * _1057), ((u_world[0].x * _1085) - (u_world[0].z * _1064)) + (u_world[0].w * _1057), ((u_world[3].z * _1022) - (u_world[3].x * _1043)) - (u_world[3].w * _1015), ((u_world[2].x * _1043) - (u_world[2].z * _1022)) + (u_world[2].w * _1015)), vec4(((u_world[1].x * _1078) - (u_world[1].y * _1064)) + (u_world[1].w * _1050), ((u_world[0].y * _1064) - (u_world[0].x * _1078)) - (u_world[0].w * _1050), ((u_world[3].x * _1036) - (u_world[3].y * _1022)) + (u_world[3].w * _1008), ((u_world[2].y * _1022) - (u_world[2].x * _1036)) - (u_world[2].w * _1008)), vec4(((u_world[1].y * _1057) - (u_world[1].x * _1071)) - (u_world[1].z * _1050), ((u_world[0].x * _1071) - (u_world[0].y * _1057)) + (u_world[0].z * _1050), ((u_world[3].y * _1015) - (u_world[3].x * _1029)) - (u_world[3].z * _1008), ((u_world[2].x * _1029) - (u_world[2].y * _1015)) + (u_world[2].z * _1008))) * (1.0 / ((((((_1008 * _1085) - (_1015 * _1078)) + (_1022 * _1071)) + (_1029 * _1064)) - (_1036 * _1057)) + (_1043 * _1050)))) * vec4(u_viewInverse[3].x, u_viewInverse[3].y, u_viewInverse[3].z, 1.0)).xyz)));\n    float _893 = acos(dot(_878, _882));\n    float _1517 = 0.0;\n    if (dot(normalize(cross(_878, _882)), _875) < 0.0)\n    {\n        _1517 = _893 * (-1.0);\n    }\n    else\n    {\n        _1517 = _893;\n    }\n    float _901 = _875.x;\n    float _902 = _875.y;\n    float _903 = _875.z;\n    float _1310 = cos(_1517);\n    float _1312 = sin(_1517);\n    float _1321 = _901 * _901;\n    float _1333 = 1.0 - _1310;\n    float _1334 = (_901 * _902) * _1333;\n    float _1337 = _903 * _1312;\n    float _1344 = (_901 * _903) * _1333;\n    float _1347 = _902 * _1312;\n    float _1361 = _902 * _902;\n    float _1374 = (_902 * _903) * _1333;\n    float _1377 = _901 * _1312;\n    float _1401 = _903 * _903;\n    gl_Position = u_projection * (u_view * (u_world * vec4(a_subCenter + (mat4(vec4(_1321 + ((1.0 - _1321) * _1310), _1334 + _1337, _1344 - _1347, 0.0), vec4(_1334 - _1337, _1361 + ((1.0 - _1361) * _1310), _1374 + _1377, 0.0), vec4(_1344 + _1347, _1374 - _1377, _1401 + ((1.0 - _1401) * _1310), 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * vec4(a_subPosition, 1.0)).xyz, 1.0)));\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = a_color;\n}\n\n","#version 100\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform mat4 u_bindTargetWorldInverse;\nuniform vec4 u_boneOffsetMatrix[288];\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_boneWeight;\nattribute vec4 a_boneIndex;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nvoid main()\n{\n    int _637 = int(a_boneIndex.x) * 3;\n    int _642 = _637 + 1;\n    int _646 = _637 + 2;\n    int _688 = int(a_boneIndex.y) * 3;\n    int _693 = _688 + 1;\n    int _697 = _688 + 2;\n    int _739 = int(a_boneIndex.z) * 3;\n    int _744 = _739 + 1;\n    int _748 = _739 + 2;\n    int _790 = int(a_boneIndex.w) * 3;\n    int _795 = _790 + 1;\n    int _799 = _790 + 2;\n    mat4 _534 = mat4(vec4(u_boneOffsetMatrix[_637].xyz, 0.0), vec4(u_boneOffsetMatrix[_642].xyz, 0.0), vec4(u_boneOffsetMatrix[_646].xyz, 0.0), vec4(u_boneOffsetMatrix[_637].w, u_boneOffsetMatrix[_642].w, u_boneOffsetMatrix[_646].w, 1.0)) * a_boneWeight.x;\n    mat4 _538 = mat4(vec4(u_boneOffsetMatrix[_688].xyz, 0.0), vec4(u_boneOffsetMatrix[_693].xyz, 0.0), vec4(u_boneOffsetMatrix[_697].xyz, 0.0), vec4(u_boneOffsetMatrix[_688].w, u_boneOffsetMatrix[_693].w, u_boneOffsetMatrix[_697].w, 1.0)) * a_boneWeight.y;\n    mat4 _556 = mat4(vec4(u_boneOffsetMatrix[_739].xyz, 0.0), vec4(u_boneOffsetMatrix[_744].xyz, 0.0), vec4(u_boneOffsetMatrix[_748].xyz, 0.0), vec4(u_boneOffsetMatrix[_739].w, u_boneOffsetMatrix[_744].w, u_boneOffsetMatrix[_748].w, 1.0)) * a_boneWeight.z;\n    mat4 _574 = mat4(vec4(u_boneOffsetMatrix[_790].xyz, 0.0), vec4(u_boneOffsetMatrix[_795].xyz, 0.0), vec4(u_boneOffsetMatrix[_799].xyz, 0.0), vec4(u_boneOffsetMatrix[_790].w, u_boneOffsetMatrix[_795].w, u_boneOffsetMatrix[_799].w, 1.0)) * a_boneWeight.w;\n    gl_Position = u_projection * (u_view * (u_world * ((u_bindTargetWorldInverse * mat4(((_534[0] + _538[0]) + _556[0]) + _574[0], ((_534[1] + _538[1]) + _556[1]) + _574[1], ((_534[2] + _538[2]) + _556[2]) + _574[2], ((_534[3] + _538[3]) + _556[3]) + _574[3])) * a_position)));\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = vec4(1.0);\n}\n\n","#version 100\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform vec4 u_skinnedAnimationMapInfo;\nuniform float u_skinnedAnimationInfo;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nuniform highp sampler2D u_skinnedAnimationMap;\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_boneWeight;\nattribute vec4 a_boneIndex;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nvoid main()\n{\n    float _686 = u_skinnedAnimationInfo * u_skinnedAnimationMapInfo.z;\n    float _692 = (3.0 * (_686 + a_boneIndex.x)) + u_skinnedAnimationMapInfo.w;\n    float _695 = 1.0 / u_skinnedAnimationMapInfo.x;\n    float _699 = floor(_692 * _695);\n    float _705 = _692 - (_699 * u_skinnedAnimationMapInfo.x);\n    float _710 = (_699 + 0.5) / u_skinnedAnimationMapInfo.y;\n    vec4 _720 = texture2D(u_skinnedAnimationMap, vec2((_705 + 0.5) * _695, _710));\n    vec4 _730 = texture2D(u_skinnedAnimationMap, vec2((_705 + 1.5) * _695, _710));\n    vec4 _740 = texture2D(u_skinnedAnimationMap, vec2((_705 + 2.5) * _695, _710));\n    float _791 = (3.0 * (_686 + a_boneIndex.y)) + u_skinnedAnimationMapInfo.w;\n    float _798 = floor(_791 * _695);\n    float _804 = _791 - (_798 * u_skinnedAnimationMapInfo.x);\n    float _809 = (_798 + 0.5) / u_skinnedAnimationMapInfo.y;\n    vec4 _819 = texture2D(u_skinnedAnimationMap, vec2((_804 + 0.5) * _695, _809));\n    vec4 _829 = texture2D(u_skinnedAnimationMap, vec2((_804 + 1.5) * _695, _809));\n    vec4 _839 = texture2D(u_skinnedAnimationMap, vec2((_804 + 2.5) * _695, _809));\n    float _890 = (3.0 * (_686 + a_boneIndex.z)) + u_skinnedAnimationMapInfo.w;\n    float _897 = floor(_890 * _695);\n    float _903 = _890 - (_897 * u_skinnedAnimationMapInfo.x);\n    float _908 = (_897 + 0.5) / u_skinnedAnimationMapInfo.y;\n    vec4 _918 = texture2D(u_skinnedAnimationMap, vec2((_903 + 0.5) * _695, _908));\n    vec4 _928 = texture2D(u_skinnedAnimationMap, vec2((_903 + 1.5) * _695, _908));\n    vec4 _938 = texture2D(u_skinnedAnimationMap, vec2((_903 + 2.5) * _695, _908));\n    float _989 = (3.0 * (_686 + a_boneIndex.w)) + u_skinnedAnimationMapInfo.w;\n    float _996 = floor(_989 * _695);\n    float _1002 = _989 - (_996 * u_skinnedAnimationMapInfo.x);\n    float _1007 = (_996 + 0.5) / u_skinnedAnimationMapInfo.y;\n    vec4 _1017 = texture2D(u_skinnedAnimationMap, vec2((_1002 + 0.5) * _695, _1007));\n    vec4 _1027 = texture2D(u_skinnedAnimationMap, vec2((_1002 + 1.5) * _695, _1007));\n    vec4 _1037 = texture2D(u_skinnedAnimationMap, vec2((_1002 + 2.5) * _695, _1007));\n    mat4 _582 = mat4(vec4(_720.xyz, 0.0), vec4(_730.xyz, 0.0), vec4(_740.xyz, 0.0), vec4(_720.w, _730.w, _740.w, 1.0)) * a_boneWeight.x;\n    mat4 _586 = mat4(vec4(_819.xyz, 0.0), vec4(_829.xyz, 0.0), vec4(_839.xyz, 0.0), vec4(_819.w, _829.w, _839.w, 1.0)) * a_boneWeight.y;\n    mat4 _604 = mat4(vec4(_918.xyz, 0.0), vec4(_928.xyz, 0.0), vec4(_938.xyz, 0.0), vec4(_918.w, _928.w, _938.w, 1.0)) * a_boneWeight.z;\n    mat4 _622 = mat4(vec4(_1017.xyz, 0.0), vec4(_1027.xyz, 0.0), vec4(_1037.xyz, 0.0), vec4(_1017.w, _1027.w, _1037.w, 1.0)) * a_boneWeight.w;\n    gl_Position = u_projection * (u_view * (u_world * (mat4(((_582[0] + _586[0]) + _604[0]) + _622[0], ((_582[1] + _586[1]) + _604[1]) + _622[1], ((_582[2] + _586[2]) + _604[2]) + _622[2], ((_582[3] + _586[3]) + _604[3]) + _622[3]) * a_position)));\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = vec4(1.0);\n}\n\n","#version 100\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nattribute vec3 a_subCenter;\nattribute vec3 a_subPosition;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nvoid main()\n{\n    gl_Position = u_projection * (u_view * (u_world * (vec4(a_subCenter, 0.0) + vec4(a_subPosition, 1.0))));\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = a_color;\n}\n\n","#version 100\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nattribute vec3 a_subCenter;\nattribute vec3 a_subPosition;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nvoid main()\n{\n    gl_Position = u_projection * (u_view * (vec4(a_subCenter, 0.0) + vec4(a_subPosition, 1.0)));\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = a_color;\n}\n\n","#version 100\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nattribute vec3 a_subCenter;\nattribute vec3 a_subPosition;\nattribute vec3 a_speed;\nattribute vec3 a_speedNormal;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nvoid main()\n{\n    vec3 _491 = normalize(a_speed);\n    vec3 _494 = normalize(a_speedNormal);\n    vec3 _498 = normalize(cross(_491, normalize(a_subCenter - vec3(u_viewInverse[3].x, u_viewInverse[3].y, u_viewInverse[3].z))));\n    float _509 = acos(dot(_494, _498));\n    float _758 = 0.0;\n    if (dot(normalize(cross(_494, _498)), _491) < 0.0)\n    {\n        _758 = _509 * (-1.0);\n    }\n    else\n    {\n        _758 = _509;\n    }\n    float _517 = _491.x;\n    float _518 = _491.y;\n    float _519 = _491.z;\n    float _567 = cos(_758);\n    float _569 = sin(_758);\n    float _578 = _517 * _517;\n    float _590 = 1.0 - _567;\n    float _591 = (_517 * _518) * _590;\n    float _594 = _519 * _569;\n    float _601 = (_517 * _519) * _590;\n    float _604 = _518 * _569;\n    float _618 = _518 * _518;\n    float _631 = (_518 * _519) * _590;\n    float _634 = _517 * _569;\n    float _658 = _519 * _519;\n    gl_Position = u_projection * (u_view * (vec4(a_subCenter, 0.0) + (mat4(vec4(_578 + ((1.0 - _578) * _567), _591 + _594, _601 - _604, 0.0), vec4(_591 - _594, _618 + ((1.0 - _618) * _567), _631 + _634, 0.0), vec4(_601 + _604, _631 - _634, _658 + ((1.0 - _658) * _567), 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * vec4(a_subPosition, 1.0))));\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = a_color;\n}\n\n","#version 100\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nvoid main()\n{\n    gl_Position = u_projection * (u_view * (u_world * a_position));\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = a_color;\n}\n\n","#version 100\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform mat4 u_bindTargetWorldInverse;\nuniform vec4 u_boneOffsetMatrix[288];\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nattribute vec4 a_boneWeight;\nattribute vec4 a_boneIndex;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nvoid main()\n{\n    int _641 = int(a_boneIndex.x) * 3;\n    int _646 = _641 + 1;\n    int _650 = _641 + 2;\n    int _692 = int(a_boneIndex.y) * 3;\n    int _697 = _692 + 1;\n    int _701 = _692 + 2;\n    int _743 = int(a_boneIndex.z) * 3;\n    int _748 = _743 + 1;\n    int _752 = _743 + 2;\n    int _794 = int(a_boneIndex.w) * 3;\n    int _799 = _794 + 1;\n    int _803 = _794 + 2;\n    mat4 _538 = mat4(vec4(u_boneOffsetMatrix[_641].xyz, 0.0), vec4(u_boneOffsetMatrix[_646].xyz, 0.0), vec4(u_boneOffsetMatrix[_650].xyz, 0.0), vec4(u_boneOffsetMatrix[_641].w, u_boneOffsetMatrix[_646].w, u_boneOffsetMatrix[_650].w, 1.0)) * a_boneWeight.x;\n    mat4 _542 = mat4(vec4(u_boneOffsetMatrix[_692].xyz, 0.0), vec4(u_boneOffsetMatrix[_697].xyz, 0.0), vec4(u_boneOffsetMatrix[_701].xyz, 0.0), vec4(u_boneOffsetMatrix[_692].w, u_boneOffsetMatrix[_697].w, u_boneOffsetMatrix[_701].w, 1.0)) * a_boneWeight.y;\n    mat4 _560 = mat4(vec4(u_boneOffsetMatrix[_743].xyz, 0.0), vec4(u_boneOffsetMatrix[_748].xyz, 0.0), vec4(u_boneOffsetMatrix[_752].xyz, 0.0), vec4(u_boneOffsetMatrix[_743].w, u_boneOffsetMatrix[_748].w, u_boneOffsetMatrix[_752].w, 1.0)) * a_boneWeight.z;\n    mat4 _578 = mat4(vec4(u_boneOffsetMatrix[_794].xyz, 0.0), vec4(u_boneOffsetMatrix[_799].xyz, 0.0), vec4(u_boneOffsetMatrix[_803].xyz, 0.0), vec4(u_boneOffsetMatrix[_794].w, u_boneOffsetMatrix[_799].w, u_boneOffsetMatrix[_803].w, 1.0)) * a_boneWeight.w;\n    gl_Position = u_projection * (u_view * (u_world * ((u_bindTargetWorldInverse * mat4(((_538[0] + _542[0]) + _560[0]) + _578[0], ((_538[1] + _542[1]) + _560[1]) + _578[1], ((_538[2] + _542[2]) + _560[2]) + _578[2], ((_538[3] + _542[3]) + _560[3]) + _578[3])) * a_position)));\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = a_color;\n}\n\n","#version 100\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform vec4 u_boneOffsetMatrix[288];\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nattribute vec4 a_boneWeight;\nattribute vec4 a_boneIndex;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nvoid main()\n{\n    int _633 = int(a_boneIndex.x) * 3;\n    int _638 = _633 + 1;\n    int _642 = _633 + 2;\n    int _684 = int(a_boneIndex.y) * 3;\n    int _689 = _684 + 1;\n    int _693 = _684 + 2;\n    int _735 = int(a_boneIndex.z) * 3;\n    int _740 = _735 + 1;\n    int _744 = _735 + 2;\n    int _786 = int(a_boneIndex.w) * 3;\n    int _791 = _786 + 1;\n    int _795 = _786 + 2;\n    mat4 _534 = mat4(vec4(u_boneOffsetMatrix[_633].xyz, 0.0), vec4(u_boneOffsetMatrix[_638].xyz, 0.0), vec4(u_boneOffsetMatrix[_642].xyz, 0.0), vec4(u_boneOffsetMatrix[_633].w, u_boneOffsetMatrix[_638].w, u_boneOffsetMatrix[_642].w, 1.0)) * a_boneWeight.x;\n    mat4 _538 = mat4(vec4(u_boneOffsetMatrix[_684].xyz, 0.0), vec4(u_boneOffsetMatrix[_689].xyz, 0.0), vec4(u_boneOffsetMatrix[_693].xyz, 0.0), vec4(u_boneOffsetMatrix[_684].w, u_boneOffsetMatrix[_689].w, u_boneOffsetMatrix[_693].w, 1.0)) * a_boneWeight.y;\n    mat4 _556 = mat4(vec4(u_boneOffsetMatrix[_735].xyz, 0.0), vec4(u_boneOffsetMatrix[_740].xyz, 0.0), vec4(u_boneOffsetMatrix[_744].xyz, 0.0), vec4(u_boneOffsetMatrix[_735].w, u_boneOffsetMatrix[_740].w, u_boneOffsetMatrix[_744].w, 1.0)) * a_boneWeight.z;\n    mat4 _574 = mat4(vec4(u_boneOffsetMatrix[_786].xyz, 0.0), vec4(u_boneOffsetMatrix[_791].xyz, 0.0), vec4(u_boneOffsetMatrix[_795].xyz, 0.0), vec4(u_boneOffsetMatrix[_786].w, u_boneOffsetMatrix[_791].w, u_boneOffsetMatrix[_795].w, 1.0)) * a_boneWeight.w;\n    gl_Position = u_projection * (u_view * (u_world * (mat4(((_534[0] + _538[0]) + _556[0]) + _574[0], ((_534[1] + _538[1]) + _556[1]) + _574[1], ((_534[2] + _538[2]) + _556[2]) + _574[2], ((_534[3] + _538[3]) + _556[3]) + _574[3]) * a_position)));\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = a_color;\n}\n\n","#version 100\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform vec4 u_skinnedAnimationMapInfo;\nuniform float u_skinnedAnimationInfo;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nuniform highp sampler2D u_skinnedAnimationMap;\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nattribute vec4 a_boneWeight;\nattribute vec4 a_boneIndex;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nvoid main()\n{\n    float _690 = u_skinnedAnimationInfo * u_skinnedAnimationMapInfo.z;\n    float _696 = (3.0 * (_690 + a_boneIndex.x)) + u_skinnedAnimationMapInfo.w;\n    float _699 = 1.0 / u_skinnedAnimationMapInfo.x;\n    float _703 = floor(_696 * _699);\n    float _709 = _696 - (_703 * u_skinnedAnimationMapInfo.x);\n    float _714 = (_703 + 0.5) / u_skinnedAnimationMapInfo.y;\n    vec4 _724 = texture2D(u_skinnedAnimationMap, vec2((_709 + 0.5) * _699, _714));\n    vec4 _734 = texture2D(u_skinnedAnimationMap, vec2((_709 + 1.5) * _699, _714));\n    vec4 _744 = texture2D(u_skinnedAnimationMap, vec2((_709 + 2.5) * _699, _714));\n    float _795 = (3.0 * (_690 + a_boneIndex.y)) + u_skinnedAnimationMapInfo.w;\n    float _802 = floor(_795 * _699);\n    float _808 = _795 - (_802 * u_skinnedAnimationMapInfo.x);\n    float _813 = (_802 + 0.5) / u_skinnedAnimationMapInfo.y;\n    vec4 _823 = texture2D(u_skinnedAnimationMap, vec2((_808 + 0.5) * _699, _813));\n    vec4 _833 = texture2D(u_skinnedAnimationMap, vec2((_808 + 1.5) * _699, _813));\n    vec4 _843 = texture2D(u_skinnedAnimationMap, vec2((_808 + 2.5) * _699, _813));\n    float _894 = (3.0 * (_690 + a_boneIndex.z)) + u_skinnedAnimationMapInfo.w;\n    float _901 = floor(_894 * _699);\n    float _907 = _894 - (_901 * u_skinnedAnimationMapInfo.x);\n    float _912 = (_901 + 0.5) / u_skinnedAnimationMapInfo.y;\n    vec4 _922 = texture2D(u_skinnedAnimationMap, vec2((_907 + 0.5) * _699, _912));\n    vec4 _932 = texture2D(u_skinnedAnimationMap, vec2((_907 + 1.5) * _699, _912));\n    vec4 _942 = texture2D(u_skinnedAnimationMap, vec2((_907 + 2.5) * _699, _912));\n    float _993 = (3.0 * (_690 + a_boneIndex.w)) + u_skinnedAnimationMapInfo.w;\n    float _1000 = floor(_993 * _699);\n    float _1006 = _993 - (_1000 * u_skinnedAnimationMapInfo.x);\n    float _1011 = (_1000 + 0.5) / u_skinnedAnimationMapInfo.y;\n    vec4 _1021 = texture2D(u_skinnedAnimationMap, vec2((_1006 + 0.5) * _699, _1011));\n    vec4 _1031 = texture2D(u_skinnedAnimationMap, vec2((_1006 + 1.5) * _699, _1011));\n    vec4 _1041 = texture2D(u_skinnedAnimationMap, vec2((_1006 + 2.5) * _699, _1011));\n    mat4 _586 = mat4(vec4(_724.xyz, 0.0), vec4(_734.xyz, 0.0), vec4(_744.xyz, 0.0), vec4(_724.w, _734.w, _744.w, 1.0)) * a_boneWeight.x;\n    mat4 _590 = mat4(vec4(_823.xyz, 0.0), vec4(_833.xyz, 0.0), vec4(_843.xyz, 0.0), vec4(_823.w, _833.w, _843.w, 1.0)) * a_boneWeight.y;\n    mat4 _608 = mat4(vec4(_922.xyz, 0.0), vec4(_932.xyz, 0.0), vec4(_942.xyz, 0.0), vec4(_922.w, _932.w, _942.w, 1.0)) * a_boneWeight.z;\n    mat4 _626 = mat4(vec4(_1021.xyz, 0.0), vec4(_1031.xyz, 0.0), vec4(_1041.xyz, 0.0), vec4(_1021.w, _1031.w, _1041.w, 1.0)) * a_boneWeight.w;\n    gl_Position = u_projection * (u_view * (u_world * (mat4(((_586[0] + _590[0]) + _608[0]) + _626[0], ((_586[1] + _590[1]) + _608[1]) + _626[1], ((_586[2] + _590[2]) + _608[2]) + _626[2], ((_586[3] + _590[3]) + _608[3]) + _626[3]) * a_position)));\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = a_color;\n}\n\n"],"uniformBlocks":[{"name":5,"blockName":6,"size":36,"member":[{"memberName":1,"type":4,"byteOffset":0},{"memberName":0,"type":4,"byteOffset":16},{"memberName":2,"type":1,"byteOffset":32}],"hash":"3426E7247708F3D0948058DD711502E8"}],"strings":["_MainTex_ST","_TintColor","_Bright","_MainTex","_MaskTex","type_Material","Material"]}