{"version":3,"sources":["scripts/bodyController.ts"],"names":[],"mappings":";;;AAAA,iCAA8D;AAG9D;IAA4C,0CAAa;IAAzD;QAAA,qEAkEC;QA9DQ,UAAI,GAAW,QAAQ,CAAA;QAEtB,cAAQ,GAAY,KAAK,CAAC;QAC1B,cAAQ,GAAW,GAAG,CAAC;QACvB,gBAAU,GAAW,GAAG,CAAC;QACzB,kBAAY,GAAW,IAAI,CAAC;QAE5B,iBAAW,GAAW,CAAC,CAAC;QACxB,iBAAW,GAAW,CAAC,CAAC;QACxB,eAAS,GAAY,IAAI,gBAAO,EAAE,CAAC;QACnC,gBAAU,GAAY,IAAI,gBAAO,EAAE,CAAC;;IAoD9C,CAAC;IAjDC,sBAAI,qCAAS;aAOb;YACE,OAAO,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aATD,UAAc,GAAY;YACxB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC;YAC9B,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;YACtC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACtE,CAAC;;;OAAA;IAOM,mCAAU,GAAjB;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IAEvB,CAAC;IACM,gCAAO,GAAd;QAAA,iBAIC;QAHC,gBAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,WAAW,EAAE;YAC7C,KAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAGM,iCAAQ,GAAf,UAAgB,EAAE;QAChB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,OAAO;SACR;QAGD,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,UAAU,EAAE;YACpC,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;YACpB,IAAI,KAAK,GAAG,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;YACjC,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;YAEzD,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAChC,gBAAO,CAAC,gBAAgB,CACtB,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,EAAE,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,CAAC,EACrF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;SACnC;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC;YAEjD,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,gBAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACjD;IACH,CAAC;IAAA,CAAC;IAEK,kCAAS,GAAhB;IAEA,CAAC;IA7DD;QAHC,gBAAM,CAAC,UAAU,CAAC,QAAQ,CAAC;YAC1B,IAAI,EAAE,gBAAM,CAAC,SAAS,CAAC,MAAM;SAC9B,CAAC;gDAC4B;IAJX,cAAc;QADlC,gBAAM,CAAC,UAAU,CAAC,SAAS,CAAC,gBAAgB,CAAC;OACzB,cAAc,CAkElC;IAAD,qBAAC;CAlED,AAkEC,CAlE2C,gBAAM,CAAC,MAAM,GAkExD;kBAlEoB,cAAc","file":"bodyController.js","sourcesContent":["import engine, { Vector3, TouchInputComponent } from \"engine\";\n\n@engine.decorators.serialize(\"bodyController\")\nexport default class bodyController extends engine.Script {\n  @engine.decorators.property({\n    type: engine.TypeNames.String\n  })\n  public name: string = \"myname\"\n\n  private canJump_: boolean = false;\n  private curTime_: number = 0.0;\n  private epochTime_: number = 0.5;\n  private yCoordinate_: number = 0.55;\n  // 0: x, 1: y, 2: z.\n  private rotateAxis_: number = 0;\n  private jumpHeight_: number = 2;\n  private deltaPos_: Vector3 = new Vector3();\n  private targetPos_: Vector3 = new Vector3();\n\n  // @ts-ignore\n  set targetPos(pos: Vector3) {\n    this.targetPos_ = pos.clone();\n    this.targetPos_.y = this.yCoordinate_;\n    this.targetPos_.sub(this.entity.transform.position, this.deltaPos_);\n  }\n\n  // @ts-ignore\n  get targetPos(): Vector3 {\n    return this.targetPos_;\n  }\n\n  public onTouchEnd() {\n    this.canJump_ = true;\n    // console.log(this.canJump_);\n  }\n  public onAwake() {\n    engine.game.customEventEmitter.on('TOUCH_END', () => {\n      this.onTouchEnd();\n    });\n  }\n\n\n  public onUpdate(dt) {\n    if (!this.canJump_) {\n      return;\n    }\n\n    // This is for moving logic.\n    if (this.curTime_ <= this.epochTime_) {\n      this.curTime_ += dt;\n      let ratio = dt / this.epochTime_;\n      let dir = Math.sign(this.epochTime_ / 2 - this.curTime_);\n      // this.entity.transform.rotate(Vector3.createFromNumber(0, 0, 360 * ratio), true, false);\n      this.entity.transform.position.add(\n        Vector3.createFromNumber(\n          this.deltaPos_.x * ratio, dir * this.jumpHeight_ * ratio, this.deltaPos_.z * ratio),\n        this.entity.transform.position);\n    } else {\n      this.entity.transform.position = this.targetPos_;\n      // console.log(this.entity.transform.euler.z * 360 / Math.PI);\n      this.curTime_ = 0;\n      this.canJump_ = false;\n      engine.game.customEventEmitter.emit('JUMP_END');\n    }\n  };\n\n  public onDestroy() {\n\n  }\n}\n"]}